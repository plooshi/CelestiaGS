#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_Ice_Wheels

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Loop_Ice_Wheels.GCN_Loop_Ice_Wheels_C
// 0x00C0 (0x0880 - 0x07C0)
class AGCN_Loop_Ice_Wheels_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Duration;                                          // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExpirationTellDuration;                            // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ExpireTellDelayTimer;                              // 0x07D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ExpirationSoundTimer;                              // 0x07D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DataTellDuration;                                  // 0x07E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ExpirationSoundPeriod;                             // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Crack;                                             // 0x0804(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       LoopingEmitters;                                   // 0x0808(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           CollisionAudioComp;                                // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                SpawnedAudioComps;                                 // 0x0820(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ShoppingCart;                                      // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B9D[0x7];                                     // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           GolfSockets;                                       // 0x0838(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           ShoppingSockets;                                   // 0x0848(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           PlaneSockets;                                      // 0x0858(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_SoundModulation;                             // 0x0868(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> TargetVehicleInterface;                            // 0x0870(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GCN_Loop_Ice_Wheels(int32 EntryPoint);
	void Event_ModulateSound();
	void ExpireWarningTick();
	void ClearExpireTell();
	void BeginExpireTell();
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void SpawnEmittersAttachedToWheels(TArray<class FName>& Sockets, class USceneComponent* AttachToComponent, bool NoOffsets, class UParticleSystem* EmitterTemplate, float ScaleMult, TArray<class UParticleSystemComponent*>* SpawnedEmitters1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Loop_Ice_Wheels_C">();
	}
	static class AGCN_Loop_Ice_Wheels_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Loop_Ice_Wheels_C>();
	}
};
static_assert(alignof(AGCN_Loop_Ice_Wheels_C) == 0x000008, "Wrong alignment on AGCN_Loop_Ice_Wheels_C");
static_assert(sizeof(AGCN_Loop_Ice_Wheels_C) == 0x000880, "Wrong size on AGCN_Loop_Ice_Wheels_C");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, UberGraphFrame) == 0x0007C0, "Member 'AGCN_Loop_Ice_Wheels_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, Duration) == 0x0007C8, "Member 'AGCN_Loop_Ice_Wheels_C::Duration' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ExpirationTellDuration) == 0x0007CC, "Member 'AGCN_Loop_Ice_Wheels_C::ExpirationTellDuration' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ExpireTellDelayTimer) == 0x0007D0, "Member 'AGCN_Loop_Ice_Wheels_C::ExpireTellDelayTimer' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ExpirationSoundTimer) == 0x0007D8, "Member 'AGCN_Loop_Ice_Wheels_C::ExpirationSoundTimer' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, DataTellDuration) == 0x0007E0, "Member 'AGCN_Loop_Ice_Wheels_C::DataTellDuration' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ExpirationSoundPeriod) == 0x000800, "Member 'AGCN_Loop_Ice_Wheels_C::ExpirationSoundPeriod' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, Crack) == 0x000804, "Member 'AGCN_Loop_Ice_Wheels_C::Crack' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, LoopingEmitters) == 0x000808, "Member 'AGCN_Loop_Ice_Wheels_C::LoopingEmitters' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, CollisionAudioComp) == 0x000818, "Member 'AGCN_Loop_Ice_Wheels_C::CollisionAudioComp' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, SpawnedAudioComps) == 0x000820, "Member 'AGCN_Loop_Ice_Wheels_C::SpawnedAudioComps' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ShoppingCart) == 0x000830, "Member 'AGCN_Loop_Ice_Wheels_C::ShoppingCart' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, GolfSockets) == 0x000838, "Member 'AGCN_Loop_Ice_Wheels_C::GolfSockets' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, ShoppingSockets) == 0x000848, "Member 'AGCN_Loop_Ice_Wheels_C::ShoppingSockets' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, PlaneSockets) == 0x000858, "Member 'AGCN_Loop_Ice_Wheels_C::PlaneSockets' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, Timer_SoundModulation) == 0x000868, "Member 'AGCN_Loop_Ice_Wheels_C::Timer_SoundModulation' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Ice_Wheels_C, TargetVehicleInterface) == 0x000870, "Member 'AGCN_Loop_Ice_Wheels_C::TargetVehicleInterface' has a wrong offset!");

}

