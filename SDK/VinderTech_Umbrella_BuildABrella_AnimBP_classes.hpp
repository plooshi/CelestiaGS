#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VinderTech_Umbrella_BuildABrella_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass VinderTech_Umbrella_BuildABrella_AnimBP.VinderTech_Umbrella_BuildABrella_AnimBP_C
// 0x0AD0 (0x0DF0 - 0x0320)
class UVinderTech_Umbrella_BuildABrella_AnimBP_C final : public UFortGliderAnimInstance
{
public:
	uint8                                         Pad_7C3D[0x8];                                     // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0328(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0358(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0490(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x04B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0530(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0560(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x05D8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0678(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0720(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0798(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0838(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x08B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08E0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0958(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x09F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0A70(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0AA0(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0B50(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C18(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C90(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D58(0x0078)()
	bool                                          IsParachuteOpen;                                   // 0x0DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C3E[0x3];                                     // 0x0DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeployAnimRate;                                    // 0x0DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0DD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TopSpin_Speed;                                     // 0x0DDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SideSpinner_Speed;                                 // 0x0DE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_TransitionResult_48A86A26455B39A305B7268331329451();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_TransitionResult_3FCA25694E316D00699EA4926C611AFB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_TransitionResult_43143CC64B4D11DA10FB6F80659222FE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_BlendListByBool_F47B92874822AA40D486EBAB69007237();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_BlendListByBool_593903404D65FDD6F938C494BF3C47E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_TransitionResult_3F9BF7DA482FB171E62883A6287D540E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_BlendListByBool_FC6AC43646BFF83548DD1181F767E020();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP_AnimGraphNode_TransitionResult_E824F722411E43EFD8D53388F983AC15();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_TurnONEngines();
	void ExecuteUbergraph_VinderTech_Umbrella_BuildABrella_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VinderTech_Umbrella_BuildABrella_AnimBP_C">();
	}
	static class UVinderTech_Umbrella_BuildABrella_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVinderTech_Umbrella_BuildABrella_AnimBP_C>();
	}
};
static_assert(alignof(UVinderTech_Umbrella_BuildABrella_AnimBP_C) == 0x000010, "Wrong alignment on UVinderTech_Umbrella_BuildABrella_AnimBP_C");
static_assert(sizeof(UVinderTech_Umbrella_BuildABrella_AnimBP_C) == 0x000DF0, "Wrong size on UVinderTech_Umbrella_BuildABrella_AnimBP_C");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, UberGraphFrame) == 0x000320, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_Root) == 0x000328, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_Slot) == 0x000358, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0003A0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0003C8, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003F0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000418, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000440, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000468, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000490, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0004B8, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000530, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000560, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0005D8, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000678, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0006F0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000720, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000798, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000838, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0008B0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0008E0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x000958, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0009F8, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_StateResult) == 0x000A70, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_StateMachine) == 0x000AA0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x000B50, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000C18, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000C90, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000D58, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, IsParachuteOpen) == 0x000DD0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::IsParachuteOpen' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, DeployAnimRate) == 0x000DD4, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::DeployAnimRate' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, Time) == 0x000DD8, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::Time' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, TopSpin_Speed) == 0x000DDC, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::TopSpin_Speed' has a wrong offset!");
static_assert(offsetof(UVinderTech_Umbrella_BuildABrella_AnimBP_C, SideSpinner_Speed) == 0x000DE0, "Member 'UVinderTech_Umbrella_BuildABrella_AnimBP_C::SideSpinner_Speed' has a wrong offset!");

}

