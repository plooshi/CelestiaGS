#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAIPawn_Bud

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ExecuteUbergraph_FortAIPawn_Bud
// 0x07B0 (0x07B0 - 0x0000)
struct FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0030(0x0018)()
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D7[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D8[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue_1; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D9[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue_2; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DA[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle_1;   // 0x0088(0x0018)()
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DB[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue_3; // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71DC[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Damage_1;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71DD[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x00D0(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x00FC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x0198(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71DE[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x01C0(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x01EC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0288(0x0018)()
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x02A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_TargetActor_1;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71DF[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E0[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_3;          // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_3;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_2;                   // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E1[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_2;                  // 0x0330(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_71E2[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71E3[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPlayerPawn*                  K2Node_Event_PlayerPawn;                           // 0x03E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ItemsConsumed;                        // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E4[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_TargetActor_1;                        // 0x03F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Tag_1;                                // 0x03F8(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E5[0x6];                                     // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E6[0x3];                                     // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x0430(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Reunited;                       // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E7[0x1];                                     // 0x04BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_TargetActor;                          // 0x04C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Tag;                                  // 0x04C8(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E8[0x7];                                     // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x04E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_1;            // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_2;            // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_3;            // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue_4; // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71E9[0x5];                                     // 0x0503(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EA[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_5;  // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EB[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EC[0x2];                                     // 0x0552(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x055C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x056D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71ED[0x2];                                     // 0x056E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0570(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71EE[0x3];                                     // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x05A0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_71EF[0x4];                                     // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BounceCeilingCheck_HitCeiling;            // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F0[0x1];                                     // 0x063B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x063C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_6;  // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x0650(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F1[0x3];                                     // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0668(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3; // 0x0670(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0678(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F2[0x4];                                     // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWaterBodyActor*                    K2Node_Event_WaterBody;                            // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFirstBody;                         // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F3[0x3];                                     // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue_4;            // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfaceLocation;                 // 0x06A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_WaterDepth;                           // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor_1;                 // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F4[0x4];                                     // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy_1;                 // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser_1;                 // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_1;                  // 0x06D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F5[0x4];                                     // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent_1;                // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum_1;                     // 0x06F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F6[0x4];                                     // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F7[0x4];                                     // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0728(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F8[0x4];                                     // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0738(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0748(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0754(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0764(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71F9[0x3];                                     // 0x0775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0778(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0794(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_71FA[0x4];                                     // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x07A8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud) == 0x000010, "Wrong alignment on FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud");
static_assert(sizeof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud) == 0x0007B0, "Wrong size on FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, EntryPoint) == 0x000000, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_AsFort_AIController) == 0x000018, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_AsFort_AIController' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetController_ReturnValue_1) == 0x000028, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000030, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_AsFort_AIController_1) == 0x000048, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_AsFort_AIController_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000058, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000061, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000068, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_RemoveActiveGameplayEffect_ReturnValue_1) == 0x000070, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_RemoveActiveGameplayEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000078, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_RemoveActiveGameplayEffect_ReturnValue_2) == 0x000080, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_RemoveActiveGameplayEffect_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_1) == 0x000081, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_2) == 0x000082, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_MakeStruct_GameplayEffectContextHandle_1) == 0x000088, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_MakeStruct_GameplayEffectContextHandle_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, Temp_bool_IsClosed_Variable) == 0x0000A0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_3) == 0x0000A1, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_4) == 0x0000A2, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_3) == 0x0000A3, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x0000A8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_5) == 0x0000B0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_RemoveActiveGameplayEffect_ReturnValue_3) == 0x0000B1, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_RemoveActiveGameplayEffect_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, Temp_bool_IsClosed_Variable_1) == 0x0000B2, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, Temp_bool_Has_Been_Initd_Variable) == 0x0000B3, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000B4, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Damage_1) == 0x0000C8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_DamageTags_1) == 0x0000D0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Momentum_1) == 0x0000F0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_HitInfo_1) == 0x0000FC, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_InstigatedBy_1) == 0x000188, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_DamageCauser_1) == 0x000190, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_EffectContext_1) == 0x000198, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001B0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Damage) == 0x0001B8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_DamageTags) == 0x0001C0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Momentum) == 0x0001E0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_HitInfo) == 0x0001EC, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_InstigatedBy) == 0x000278, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_DamageCauser) == 0x000280, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_EffectContext) == 0x000288, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetTransform_ReturnValue) == 0x0002A0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_TargetActor_1) == 0x0002D0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_TargetActor_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BreakTransform_Location) == 0x0002D8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BreakTransform_Rotation) == 0x0002E4, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BreakTransform_Scale) == 0x0002F0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000300, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_4) == 0x000308, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OverlappedComponent_3) == 0x000310, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherActor_3) == 0x000318, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherComp_3) == 0x000320, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherBodyIndex_3) == 0x000328, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_bFromSweep_2) == 0x00032C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_SweepResult_2) == 0x000330, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OverlappedComponent_2) == 0x0003C0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherActor_2) == 0x0003C8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherComp_2) == 0x0003D0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherBodyIndex_2) == 0x0003D8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_PlayerPawn) == 0x0003E0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_ItemsConsumed) == 0x0003E8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_ItemsConsumed' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_Greater_IntInt_ReturnValue) == 0x0003EC, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_TargetActor_1) == 0x0003F0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_TargetActor_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Tag_1) == 0x0003F8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Tag_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_TargetActor) == 0x000400, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_5) == 0x000408, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_6) == 0x000409, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OverlappedComponent_1) == 0x000410, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherActor_1) == 0x000418, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherComp_1) == 0x000420, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000428, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_bFromSweep_1) == 0x00042C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_SweepResult_1) == 0x000430, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_Reunited) == 0x0004BC, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_Reunited' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_7) == 0x0004BD, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004BE, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_TargetActor) == 0x0004C0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_Tag) == 0x0004C8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_Tag' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_8) == 0x0004D0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x0004D8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0004E0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x0004E8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_PlayAnimMontage_ReturnValue) == 0x0004F0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_PlayAnimMontage_ReturnValue_1) == 0x0004F4, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_PlayAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_PlayAnimMontage_ReturnValue_2) == 0x0004F8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_PlayAnimMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_PlayAnimMontage_ReturnValue_3) == 0x0004FC, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_PlayAnimMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_RemoveActiveGameplayEffect_ReturnValue_4) == 0x000500, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_RemoveActiveGameplayEffect_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, Temp_bool_Variable) == 0x000501, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_6) == 0x000502, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetController_ReturnValue_2) == 0x000508, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000510, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_bSuccess_2) == 0x000518, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_5) == 0x000520, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000528, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000538, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000540, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000550, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BooleanOR_ReturnValue) == 0x000551, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_Add_FloatFloat_ReturnValue) == 0x000554, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_FClamp_ReturnValue) == 0x000558, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_1) == 0x00055C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_Not_PreBool_ReturnValue) == 0x00056C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BooleanAND_ReturnValue) == 0x00056D, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_2) == 0x000570, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OverlappedComponent) == 0x000580, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherActor) == 0x000588, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherComp) == 0x000590, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_OtherBodyIndex) == 0x000598, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_bFromSweep) == 0x00059C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_SweepResult) == 0x0005A0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000630, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_DynamicCast_bSuccess_3) == 0x000638, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_7) == 0x000639, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BounceCeilingCheck_HitCeiling) == 0x00063A, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BounceCeilingCheck_HitCeiling' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_MakeVector_ReturnValue) == 0x00063C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetAbilitySystemComponent_ReturnValue_6) == 0x000648, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetAbilitySystemComponent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x000650, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_IsValid_ReturnValue_9) == 0x000658, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00065C, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000668, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3) == 0x000670, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_3) == 0x000678, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_GetTimeSeconds_ReturnValue) == 0x000688, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Select_Default) == 0x000690, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_WaterBody) == 0x000698, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_WaterBody' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_bIsFirstBody) == 0x0006A0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_PlayAnimMontage_ReturnValue_4) == 0x0006A4, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_PlayAnimMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_WaterSurfaceLocation) == 0x0006A8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_WaterSurfaceLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_Event_WaterDepth) == 0x0006B4, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_Event_WaterDepth' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_DamagedActor_1) == 0x0006B8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_DamagedActor_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_Damage_1) == 0x0006C0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_InstigatedBy_1) == 0x0006C8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_DamageCauser_1) == 0x0006D0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_HitLocation_1) == 0x0006D8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_HitLocation_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_FHitComponent_1) == 0x0006E8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_FHitComponent_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_BoneName_1) == 0x0006F0, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_Momentum_1) == 0x0006F8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_Momentum_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_DamagedActor) == 0x000708, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_Damage) == 0x000710, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_InstigatedBy) == 0x000718, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_DamageCauser) == 0x000720, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_HitLocation) == 0x000728, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_FHitComponent) == 0x000738, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_BoneName) == 0x000740, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CustomEvent_Momentum) == 0x000748, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_4) == 0x000754, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_5) == 0x000764, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_HasAuthority_ReturnValue_8) == 0x000774, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_6) == 0x000778, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000788, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, K2Node_CreateDelegate_OutputDelegate_7) == 0x000794, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0007A8, "Member 'FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Goal Actor Death
// 0x0050 (0x0050 - 0x0000)
struct FortAIPawn_Bud_C_Goal_Actor_Death final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_Goal_Actor_Death) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_Goal_Actor_Death");
static_assert(sizeof(FortAIPawn_Bud_C_Goal_Actor_Death) == 0x000050, "Wrong size on FortAIPawn_Bud_C_Goal_Actor_Death");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, DamagedActor) == 0x000000, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::DamagedActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, Damage) == 0x000008, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, InstigatedBy) == 0x000010, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, DamageCauser) == 0x000018, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, HitLocation) == 0x000020, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::HitLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, FHitComponent) == 0x000030, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::FHitComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, BoneName) == 0x000038, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::BoneName' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Goal_Actor_Death, Momentum) == 0x000040, "Member 'FortAIPawn_Bud_C_Goal_Actor_Death::Momentum' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Death on Bud
// 0x0050 (0x0050 - 0x0000)
struct FortAIPawn_Bud_C_Death_on_Bud final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71FE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_Death_on_Bud) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_Death_on_Bud");
static_assert(sizeof(FortAIPawn_Bud_C_Death_on_Bud) == 0x000050, "Wrong size on FortAIPawn_Bud_C_Death_on_Bud");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, DamagedActor) == 0x000000, "Member 'FortAIPawn_Bud_C_Death_on_Bud::DamagedActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, Damage) == 0x000008, "Member 'FortAIPawn_Bud_C_Death_on_Bud::Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, InstigatedBy) == 0x000010, "Member 'FortAIPawn_Bud_C_Death_on_Bud::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, DamageCauser) == 0x000018, "Member 'FortAIPawn_Bud_C_Death_on_Bud::DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, HitLocation) == 0x000020, "Member 'FortAIPawn_Bud_C_Death_on_Bud::HitLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, FHitComponent) == 0x000030, "Member 'FortAIPawn_Bud_C_Death_on_Bud::FHitComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, BoneName) == 0x000038, "Member 'FortAIPawn_Bud_C_Death_on_Bud::BoneName' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_Death_on_Bud, Momentum) == 0x000040, "Member 'FortAIPawn_Bud_C_Death_on_Bud::Momentum' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnBeginWaterInteraction
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnBeginWaterInteraction final
{
public:
	struct FVector                                WaterSurfaceLocation;                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaterDepth;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnBeginWaterInteraction) == 0x000004, "Wrong alignment on FortAIPawn_Bud_C_OnBeginWaterInteraction");
static_assert(sizeof(FortAIPawn_Bud_C_OnBeginWaterInteraction) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnBeginWaterInteraction");
static_assert(offsetof(FortAIPawn_Bud_C_OnBeginWaterInteraction, WaterSurfaceLocation) == 0x000000, "Member 'FortAIPawn_Bud_C_OnBeginWaterInteraction::WaterSurfaceLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnBeginWaterInteraction, WaterDepth) == 0x00000C, "Member 'FortAIPawn_Bud_C_OnBeginWaterInteraction::WaterDepth' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnEnteredWaterBody
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnEnteredWaterBody final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_OnEnteredWaterBody) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnEnteredWaterBody");
static_assert(sizeof(FortAIPawn_Bud_C_OnEnteredWaterBody) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnEnteredWaterBody");
static_assert(offsetof(FortAIPawn_Bud_C_OnEnteredWaterBody, WaterBody) == 0x000000, "Member 'FortAIPawn_Bud_C_OnEnteredWaterBody::WaterBody' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnEnteredWaterBody, bIsFirstBody) == 0x000008, "Member 'FortAIPawn_Bud_C_OnEnteredWaterBody::bIsFirstBody' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BeginOverlap_BounceCollision
// 0x00B0 (0x00B0 - 0x0000)
struct FortAIPawn_Bud_C_BeginOverlap_BounceCollision final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71FF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_BeginOverlap_BounceCollision");
static_assert(sizeof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision) == 0x0000B0, "Wrong size on FortAIPawn_Bud_C_BeginOverlap_BounceCollision");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, OverlappedComponent) == 0x000000, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, OtherActor) == 0x000008, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::OtherActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, OtherComp) == 0x000010, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::OtherComp' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, OtherBodyIndex) == 0x000018, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, bFromSweep) == 0x00001C, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::bFromSweep' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_BounceCollision, SweepResult) == 0x000020, "Member 'FortAIPawn_Bud_C_BeginOverlap_BounceCollision::SweepResult' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnListenTagRemoved
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnListenTagRemoved final
{
public:
	const class AActor*                           TargetActor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnListenTagRemoved) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnListenTagRemoved");
static_assert(sizeof(FortAIPawn_Bud_C_OnListenTagRemoved) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnListenTagRemoved");
static_assert(offsetof(FortAIPawn_Bud_C_OnListenTagRemoved, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_OnListenTagRemoved::TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnListenTagRemoved, Tag) == 0x000008, "Member 'FortAIPawn_Bud_C_OnListenTagRemoved::Tag' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.StartFollowing
// 0x0001 (0x0001 - 0x0000)
struct FortAIPawn_Bud_C_StartFollowing final
{
public:
	bool                                          Reunited;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_StartFollowing) == 0x000001, "Wrong alignment on FortAIPawn_Bud_C_StartFollowing");
static_assert(sizeof(FortAIPawn_Bud_C_StartFollowing) == 0x000001, "Wrong size on FortAIPawn_Bud_C_StartFollowing");
static_assert(offsetof(FortAIPawn_Bud_C_StartFollowing, Reunited) == 0x000000, "Member 'FortAIPawn_Bud_C_StartFollowing::Reunited' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnComponentBeginOverlap_Event_1
// 0x00B0 (0x00B0 - 0x0000)
struct FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7200[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1");
static_assert(sizeof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1) == 0x0000B0, "Wrong size on FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, OverlappedComponent) == 0x000000, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, OtherActor) == 0x000008, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::OtherActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, OtherComp) == 0x000010, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::OtherComp' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, OtherBodyIndex) == 0x000018, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, bFromSweep) == 0x00001C, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::bFromSweep' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1, SweepResult) == 0x000020, "Member 'FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1::SweepResult' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.WakeUp
// 0x0008 (0x0008 - 0x0000)
struct FortAIPawn_Bud_C_WakeUp final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_WakeUp) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_WakeUp");
static_assert(sizeof(FortAIPawn_Bud_C_WakeUp) == 0x000008, "Wrong size on FortAIPawn_Bud_C_WakeUp");
static_assert(offsetof(FortAIPawn_Bud_C_WakeUp, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_WakeUp::TargetActor' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnListenTagAdded
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnListenTagAdded final
{
public:
	const class AActor*                           TargetActor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnListenTagAdded) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnListenTagAdded");
static_assert(sizeof(FortAIPawn_Bud_C_OnListenTagAdded) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnListenTagAdded");
static_assert(offsetof(FortAIPawn_Bud_C_OnListenTagAdded, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_OnListenTagAdded::TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnListenTagAdded, Tag) == 0x000008, "Member 'FortAIPawn_Bud_C_OnListenTagAdded::Tag' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnItemsConsumed
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnItemsConsumed final
{
public:
	const class AFortPlayerPawn*                  PlayerPawn;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemsConsumed;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnItemsConsumed) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnItemsConsumed");
static_assert(sizeof(FortAIPawn_Bud_C_OnItemsConsumed) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnItemsConsumed");
static_assert(offsetof(FortAIPawn_Bud_C_OnItemsConsumed, PlayerPawn) == 0x000000, "Member 'FortAIPawn_Bud_C_OnItemsConsumed::PlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnItemsConsumed, ItemsConsumed) == 0x000008, "Member 'FortAIPawn_Bud_C_OnItemsConsumed::ItemsConsumed' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.EndOverlap_DanceRadius
// 0x0020 (0x0020 - 0x0000)
struct FortAIPawn_Bud_C_EndOverlap_DanceRadius final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_EndOverlap_DanceRadius) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_EndOverlap_DanceRadius");
static_assert(sizeof(FortAIPawn_Bud_C_EndOverlap_DanceRadius) == 0x000020, "Wrong size on FortAIPawn_Bud_C_EndOverlap_DanceRadius");
static_assert(offsetof(FortAIPawn_Bud_C_EndOverlap_DanceRadius, OverlappedComponent) == 0x000000, "Member 'FortAIPawn_Bud_C_EndOverlap_DanceRadius::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_EndOverlap_DanceRadius, OtherActor) == 0x000008, "Member 'FortAIPawn_Bud_C_EndOverlap_DanceRadius::OtherActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_EndOverlap_DanceRadius, OtherComp) == 0x000010, "Member 'FortAIPawn_Bud_C_EndOverlap_DanceRadius::OtherComp' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_EndOverlap_DanceRadius, OtherBodyIndex) == 0x000018, "Member 'FortAIPawn_Bud_C_EndOverlap_DanceRadius::OtherBodyIndex' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BeginOverlap_DanceRadius
// 0x00B0 (0x00B0 - 0x0000)
struct FortAIPawn_Bud_C_BeginOverlap_DanceRadius final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7201[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_BeginOverlap_DanceRadius");
static_assert(sizeof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius) == 0x0000B0, "Wrong size on FortAIPawn_Bud_C_BeginOverlap_DanceRadius");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, OverlappedComponent) == 0x000000, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, OtherActor) == 0x000008, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::OtherActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, OtherComp) == 0x000010, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::OtherComp' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, OtherBodyIndex) == 0x000018, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, bFromSweep) == 0x00001C, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::bFromSweep' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BeginOverlap_DanceRadius, SweepResult) == 0x000020, "Member 'FortAIPawn_Bud_C_BeginOverlap_DanceRadius::SweepResult' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Dance
// 0x0008 (0x0008 - 0x0000)
struct FortAIPawn_Bud_C_Dance final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_Dance) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_Dance");
static_assert(sizeof(FortAIPawn_Bud_C_Dance) == 0x000008, "Wrong size on FortAIPawn_Bud_C_Dance");
static_assert(offsetof(FortAIPawn_Bud_C_Dance, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_Dance::TargetActor' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct FortAIPawn_Bud_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7202[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FortAIPawn_Bud_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnDeathPlayEffects");
static_assert(sizeof(FortAIPawn_Bud_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on FortAIPawn_Bud_C_OnDeathPlayEffects");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'FortAIPawn_Bud_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnDeathServer
// 0x00E8 (0x00E8 - 0x0000)
struct FortAIPawn_Bud_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7203[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FortAIPawn_Bud_C_OnDeathServer) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnDeathServer");
static_assert(sizeof(FortAIPawn_Bud_C_OnDeathServer) == 0x0000E8, "Wrong size on FortAIPawn_Bud_C_OnDeathServer");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, Damage) == 0x000000, "Member 'FortAIPawn_Bud_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, DamageTags) == 0x000008, "Member 'FortAIPawn_Bud_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, Momentum) == 0x000028, "Member 'FortAIPawn_Bud_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, HitInfo) == 0x000034, "Member 'FortAIPawn_Bud_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, InstigatedBy) == 0x0000C0, "Member 'FortAIPawn_Bud_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, DamageCauser) == 0x0000C8, "Member 'FortAIPawn_Bud_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnDeathServer, EffectContext) == 0x0000D0, "Member 'FortAIPawn_Bud_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct FortAIPawn_Bud_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_UserConstructionScript) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_UserConstructionScript");
static_assert(sizeof(FortAIPawn_Bud_C_UserConstructionScript) == 0x000008, "Wrong size on FortAIPawn_Bud_C_UserConstructionScript");
static_assert(offsetof(FortAIPawn_Bud_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.AddTrackedTagListener
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_AddTrackedTagListener final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_AddTrackedTagListener) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_AddTrackedTagListener");
static_assert(sizeof(FortAIPawn_Bud_C_AddTrackedTagListener) == 0x000018, "Wrong size on FortAIPawn_Bud_C_AddTrackedTagListener");
static_assert(offsetof(FortAIPawn_Bud_C_AddTrackedTagListener, Actor) == 0x000000, "Member 'FortAIPawn_Bud_C_AddTrackedTagListener::Actor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_AddTrackedTagListener, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000008, "Member 'FortAIPawn_Bud_C_AddTrackedTagListener::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_AddTrackedTagListener, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FortAIPawn_Bud_C_AddTrackedTagListener::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.RemoveTrackedTagListener
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_RemoveTrackedTagListener final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_RemoveTrackedTagListener) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_RemoveTrackedTagListener");
static_assert(sizeof(FortAIPawn_Bud_C_RemoveTrackedTagListener) == 0x000018, "Wrong size on FortAIPawn_Bud_C_RemoveTrackedTagListener");
static_assert(offsetof(FortAIPawn_Bud_C_RemoveTrackedTagListener, Actor) == 0x000000, "Member 'FortAIPawn_Bud_C_RemoveTrackedTagListener::Actor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RemoveTrackedTagListener, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000008, "Member 'FortAIPawn_Bud_C_RemoveTrackedTagListener::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RemoveTrackedTagListener, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FortAIPawn_Bud_C_RemoveTrackedTagListener::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ListenTagAdded
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_ListenTagAdded final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_ListenTagAdded) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_ListenTagAdded");
static_assert(sizeof(FortAIPawn_Bud_C_ListenTagAdded) == 0x000018, "Wrong size on FortAIPawn_Bud_C_ListenTagAdded");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagAdded, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_ListenTagAdded::TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagAdded, Tag) == 0x000008, "Member 'FortAIPawn_Bud_C_ListenTagAdded::Tag' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagAdded, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'FortAIPawn_Bud_C_ListenTagAdded::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ListenTagRemoved
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_ListenTagRemoved final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_ListenTagRemoved) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_ListenTagRemoved");
static_assert(sizeof(FortAIPawn_Bud_C_ListenTagRemoved) == 0x000018, "Wrong size on FortAIPawn_Bud_C_ListenTagRemoved");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagRemoved, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_ListenTagRemoved::TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagRemoved, Tag) == 0x000008, "Member 'FortAIPawn_Bud_C_ListenTagRemoved::Tag' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ListenTagRemoved, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'FortAIPawn_Bud_C_ListenTagRemoved::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.TickUpdateLink
// 0x0020 (0x0020 - 0x0000)
struct FortAIPawn_Bud_C_TickUpdateLink final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7204[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceBetweenActors_Distance;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7205[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_TickUpdateLink) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_TickUpdateLink");
static_assert(sizeof(FortAIPawn_Bud_C_TickUpdateLink) == 0x000020, "Wrong size on FortAIPawn_Bud_C_TickUpdateLink");
static_assert(offsetof(FortAIPawn_Bud_C_TickUpdateLink, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_TickUpdateLink::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickUpdateLink, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'FortAIPawn_Bud_C_TickUpdateLink::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickUpdateLink, CallFunc_GetDistanceBetweenActors_Distance) == 0x000004, "Member 'FortAIPawn_Bud_C_TickUpdateLink::CallFunc_GetDistanceBetweenActors_Distance' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickUpdateLink, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_TickUpdateLink::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickUpdateLink, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'FortAIPawn_Bud_C_TickUpdateLink::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.RotateToFaceActor
// 0x0050 (0x0050 - 0x0000)
struct FortAIPawn_Bud_C_RotateToFaceActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7206[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_RotateToFaceActor) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_RotateToFaceActor");
static_assert(sizeof(FortAIPawn_Bud_C_RotateToFaceActor) == 0x000050, "Wrong size on FortAIPawn_Bud_C_RotateToFaceActor");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, TargetActor) == 0x000000, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::TargetActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_FindLookAtRotation_ReturnValue) == 0x000024, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_RotateToFaceActor, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000048, "Member 'FortAIPawn_Bud_C_RotateToFaceActor::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.DormantDanceHint
// 0x0002 (0x0002 - 0x0000)
struct FortAIPawn_Bud_C_DormantDanceHint final
{
public:
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_DormantDanceHint) == 0x000001, "Wrong alignment on FortAIPawn_Bud_C_DormantDanceHint");
static_assert(sizeof(FortAIPawn_Bud_C_DormantDanceHint) == 0x000002, "Wrong size on FortAIPawn_Bud_C_DormantDanceHint");
static_assert(offsetof(FortAIPawn_Bud_C_DormantDanceHint, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_DormantDanceHint::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_DormantDanceHint, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'FortAIPawn_Bud_C_DormantDanceHint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.TickEnergyDecay
// 0x001C (0x001C - 0x0000)
struct FortAIPawn_Bud_C_TickEnergyDecay final
{
public:
	float                                         CurrentTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7207[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_TickEnergyDecay) == 0x000004, "Wrong alignment on FortAIPawn_Bud_C_TickEnergyDecay");
static_assert(sizeof(FortAIPawn_Bud_C_TickEnergyDecay) == 0x00001C, "Wrong size on FortAIPawn_Bud_C_TickEnergyDecay");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CurrentTime) == 0x000000, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CurrentTime' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_TickEnergyDecay, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'FortAIPawn_Bud_C_TickEnergyDecay::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_HasEnergy
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_OnRep_HasEnergy final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnRep_HasEnergy) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnRep_HasEnergy");
static_assert(sizeof(FortAIPawn_Bud_C_OnRep_HasEnergy) == 0x000010, "Wrong size on FortAIPawn_Bud_C_OnRep_HasEnergy");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_HasEnergy, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_OnRep_HasEnergy::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_HasEnergy, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'FortAIPawn_Bud_C_OnRep_HasEnergy::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BounceCeilingCheck
// 0x0118 (0x0118 - 0x0000)
struct FortAIPawn_Bud_C_BounceCeilingCheck final
{
public:
	bool                                          HitCeiling;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7208[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7209[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0068(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720A[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors_1;            // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_BounceCeilingCheck) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_BounceCeilingCheck");
static_assert(sizeof(FortAIPawn_Bud_C_BounceCeilingCheck) == 0x000118, "Wrong size on FortAIPawn_Bud_C_BounceCeilingCheck");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, HitCeiling) == 0x000000, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::HitCeiling' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, Temp_int_Array_Index_Variable) == 0x000004, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_BreakVector_X) == 0x000028, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_BreakVector_Y) == 0x00002C, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_BreakVector_Z) == 0x000030, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_MakeVector_ReturnValue_1) == 0x00004C, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_GetAttachedActors_OutActors) == 0x000058, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_CapsuleTraceSingle_OutHit) == 0x000068, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x0000F4, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_GetAttachedActors_OutActors_1) == 0x000100, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_GetAttachedActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_BounceCeilingCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'FortAIPawn_Bud_C_BounceCeilingCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_Following
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_OnRep_Following final
{
public:
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnRep_Following) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnRep_Following");
static_assert(sizeof(FortAIPawn_Bud_C_OnRep_Following) == 0x000018, "Wrong size on FortAIPawn_Bud_C_OnRep_Following");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_Following, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_OnRep_Following::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_Following, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_OnRep_Following::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_Following, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000010, "Member 'FortAIPawn_Bud_C_OnRep_Following::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ClientUpdateBeamActivation
// 0x0005 (0x0005 - 0x0000)
struct FortAIPawn_Bud_C_ClientUpdateBeamActivation final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_ClientUpdateBeamActivation) == 0x000001, "Wrong alignment on FortAIPawn_Bud_C_ClientUpdateBeamActivation");
static_assert(sizeof(FortAIPawn_Bud_C_ClientUpdateBeamActivation) == 0x000005, "Wrong size on FortAIPawn_Bud_C_ClientUpdateBeamActivation");
static_assert(offsetof(FortAIPawn_Bud_C_ClientUpdateBeamActivation, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_ClientUpdateBeamActivation::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ClientUpdateBeamActivation, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'FortAIPawn_Bud_C_ClientUpdateBeamActivation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ClientUpdateBeamActivation, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000002, "Member 'FortAIPawn_Bud_C_ClientUpdateBeamActivation::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ClientUpdateBeamActivation, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'FortAIPawn_Bud_C_ClientUpdateBeamActivation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_ClientUpdateBeamActivation, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'FortAIPawn_Bud_C_ClientUpdateBeamActivation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_Energy
// 0x0018 (0x0018 - 0x0000)
struct FortAIPawn_Bud_C_OnRep_Energy final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_OnRep_Energy) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_OnRep_Energy");
static_assert(sizeof(FortAIPawn_Bud_C_OnRep_Energy) == 0x000018, "Wrong size on FortAIPawn_Bud_C_OnRep_Energy");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_Energy, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_OnRep_Energy::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_OnRep_Energy, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_OnRep_Energy::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.SetTeamFromGoalActor
// 0x0020 (0x0020 - 0x0000)
struct FortAIPawn_Bud_C_SetTeamFromGoalActor final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_720D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_SetTeamFromGoalActor) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_SetTeamFromGoalActor");
static_assert(sizeof(FortAIPawn_Bud_C_SetTeamFromGoalActor) == 0x000020, "Wrong size on FortAIPawn_Bud_C_SetTeamFromGoalActor");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, K2Node_DynamicCast_AsFort_AIController) == 0x000010, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::K2Node_DynamicCast_AsFort_AIController' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, CallFunc_GetActorTeam_ReturnValue) == 0x000019, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_SetTeamFromGoalActor, CallFunc_GetValidValue_ReturnValue) == 0x00001A, "Member 'FortAIPawn_Bud_C_SetTeamFromGoalActor::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.StopBudSnapAudio
// 0x0002 (0x0002 - 0x0000)
struct FortAIPawn_Bud_C_StopBudSnapAudio final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_StopBudSnapAudio) == 0x000001, "Wrong alignment on FortAIPawn_Bud_C_StopBudSnapAudio");
static_assert(sizeof(FortAIPawn_Bud_C_StopBudSnapAudio) == 0x000002, "Wrong size on FortAIPawn_Bud_C_StopBudSnapAudio");
static_assert(offsetof(FortAIPawn_Bud_C_StopBudSnapAudio, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'FortAIPawn_Bud_C_StopBudSnapAudio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_StopBudSnapAudio, CallFunc_IsPlaying_ReturnValue_1) == 0x000001, "Member 'FortAIPawn_Bud_C_StopBudSnapAudio::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.GetInteractionString
// 0x0090 (0x0090 - 0x0000)
struct FortAIPawn_Bud_C_GetInteractionString final
{
public:
	const class AFortPlayerPawn*                  PlayerPawn;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_720E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(FortAIPawn_Bud_C_GetInteractionString) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_GetInteractionString");
static_assert(sizeof(FortAIPawn_Bud_C_GetInteractionString) == 0x000090, "Wrong size on FortAIPawn_Bud_C_GetInteractionString");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, PlayerPawn) == 0x000000, "Member 'FortAIPawn_Bud_C_GetInteractionString::PlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_GetInteractionString::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, CallFunc_GetValueAtLevel_ReturnValue) == 0x000020, "Member 'FortAIPawn_Bud_C_GetInteractionString::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'FortAIPawn_Bud_C_GetInteractionString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, K2Node_MakeArray_Array) == 0x000068, "Member 'FortAIPawn_Bud_C_GetInteractionString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetInteractionString, CallFunc_Format_ReturnValue) == 0x000078, "Member 'FortAIPawn_Bud_C_GetInteractionString::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.GetIconPlacement
// 0x0040 (0x0040 - 0x0000)
struct FortAIPawn_Bud_C_GetIconPlacement final
{
public:
	const class AActor*                           SelfActor;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           ViewingActor;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAIPawn_Bud_C_GetIconPlacement) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_GetIconPlacement");
static_assert(sizeof(FortAIPawn_Bud_C_GetIconPlacement) == 0x000040, "Wrong size on FortAIPawn_Bud_C_GetIconPlacement");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'FortAIPawn_Bud_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, ViewingActor) == 0x000008, "Member 'FortAIPawn_Bud_C_GetIconPlacement::ViewingActor' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, OutLocation) == 0x000010, "Member 'FortAIPawn_Bud_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, OutExtents) == 0x00001C, "Member 'FortAIPawn_Bud_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'FortAIPawn_Bud_C_GetIconPlacement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_GetIconPlacement, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'FortAIPawn_Bud_C_GetIconPlacement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.IsValidAutoFireTarget
// 0x0010 (0x0010 - 0x0000)
struct FortAIPawn_Bud_C_IsValidAutoFireTarget final
{
public:
	const class AActor*                           Attacker;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidAutoFireTarget_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAIPawn_Bud_C_IsValidAutoFireTarget) == 0x000008, "Wrong alignment on FortAIPawn_Bud_C_IsValidAutoFireTarget");
static_assert(sizeof(FortAIPawn_Bud_C_IsValidAutoFireTarget) == 0x000010, "Wrong size on FortAIPawn_Bud_C_IsValidAutoFireTarget");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, Attacker) == 0x000000, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::Attacker' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, ReturnValue) == 0x000008, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, CallFunc_IsValidAutoFireTarget_ReturnValue) == 0x000009, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::CallFunc_IsValidAutoFireTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, CallFunc_GetActorTeam_ReturnValue) == 0x00000A, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, CallFunc_GetValidValue_ReturnValue) == 0x00000B, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAIPawn_Bud_C_IsValidAutoFireTarget, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'FortAIPawn_Bud_C_IsValidAutoFireTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

