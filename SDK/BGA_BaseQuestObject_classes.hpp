#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_BaseQuestObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_BaseQuestObject.BGA_BaseQuestObject_C
// 0x0018 (0x07D0 - 0x07B8)
class ABGA_BaseQuestObject_C : public ABuildingGameplayActorQuest
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UConsolidatedQuestComponent*            QuestComponent;                                    // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_BaseQuestObject(int32 EntryPoint);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_1_SimpleQuestComponentDelegate__DelegateSignature(class AFortPlayerController* PlayerController);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_2_SimpleQuestComponentDelegate__DelegateSignature(class AFortPlayerController* PlayerController);
	void HandleCustomUpdateQuest(class AFortPlayerController* Player, int32 Achieved_Count, int32 Goal_Count);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_0_QuestComponentCustomUpdatedOjective__DelegateSignature(class AFortPlayerController* PlayerController, int32 AchievedCount, int32 RequiredCount);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_3_SimpleQuestComponentDelegate__DelegateSignature(class AFortPlayerController* PlayerController);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_4_QuestComponentCustomVisualsPassed__DelegateSignature(class AFortPlayerController* PlayerController, bool FullyInitalized);
	void HandleCustomUpdateObjective(class AFortPlayerController* Player, int32 Achieved_Count, int32 Goal_Count);
	void HandleCustomSetVisualsToPassed(class AFortPlayerController* Player, bool Inialized);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_5_SimpleQuestComponentDelegate__DelegateSignature(class AFortPlayerController* PlayerController);
	void HandleCustomSetVisualsToFailed(class AFortPlayerController* Player);
	void BndEvt__QuestComponent_K2Node_ComponentBoundEvent_6_QuestComponentCustomUpdatedOjective__DelegateSignature(class AFortPlayerController* PlayerController, int32 AchievedCount, int32 RequiredCount);
	void HandleQuestNotReady(class AFortPlayerController* Player);
	void HandleQuestComponentSuccessEvent(class AFortPlayerController* Player);
	void HandleQuestReady(class AFortPlayerController* Player);
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_BaseQuestObject_C">();
	}
	static class ABGA_BaseQuestObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_BaseQuestObject_C>();
	}
};
static_assert(alignof(ABGA_BaseQuestObject_C) == 0x000008, "Wrong alignment on ABGA_BaseQuestObject_C");
static_assert(sizeof(ABGA_BaseQuestObject_C) == 0x0007D0, "Wrong size on ABGA_BaseQuestObject_C");
static_assert(offsetof(ABGA_BaseQuestObject_C, UberGraphFrame) == 0x0007B8, "Member 'ABGA_BaseQuestObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_BaseQuestObject_C, QuestComponent) == 0x0007C0, "Member 'ABGA_BaseQuestObject_C::QuestComponent' has a wrong offset!");
static_assert(offsetof(ABGA_BaseQuestObject_C, DefaultSceneRoot) == 0x0007C8, "Member 'ABGA_BaseQuestObject_C::DefaultSceneRoot' has a wrong offset!");

}

