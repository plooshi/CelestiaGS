#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortLayeredAudioComponent_Glider

#include "Basic.hpp"

#include "FortLayeredAudioComponent_Glider_classes.hpp"
#include "FortLayeredAudioComponent_Glider_parameters.hpp"


namespace SDK
{

// Function FortLayeredAudioComponent_Glider.FortLayeredAudioComponent_Glider_C.ExecuteUbergraph_FortLayeredAudioComponent_Glider
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortLayeredAudioComponent_Glider_C::ExecuteUbergraph_FortLayeredAudioComponent_Glider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLayeredAudioComponent_Glider_C", "ExecuteUbergraph_FortLayeredAudioComponent_Glider");

	Params::FortLayeredAudioComponent_Glider_C_ExecuteUbergraph_FortLayeredAudioComponent_Glider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortLayeredAudioComponent_Glider.FortLayeredAudioComponent_Glider_C.Update Glider Audio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ForwardDot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightDot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortLayeredAudioComponent_Glider_C::Update_Glider_Audio(float ForwardDot, float RightDot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLayeredAudioComponent_Glider_C", "Update Glider Audio");

	Params::FortLayeredAudioComponent_Glider_C_Update_Glider_Audio Parms{};

	Parms.ForwardDot = ForwardDot;
	Parms.RightDot = RightDot;

	UObject::ProcessEvent(Func, &Parms);
}

}

