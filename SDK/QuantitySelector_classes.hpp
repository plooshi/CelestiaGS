#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuantitySelector

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuantitySelector.QuantitySelector_C
// 0x0A68 (0x0EB0 - 0x0448)
class UQuantitySelector_C final : public UFortQuantitySelector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       AdditionalInfo;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CancelButton;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ConfirmButton;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                CurrentAmount;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 ItemCard;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                MaxAmount;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      MaxButton;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      MinButton;                                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          ValueSlider;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       WindowTitle;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentValue;                                      // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxValue;                                          // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnButtonClickedDispatcher;                         // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnStackValueChangedDispatcher;                     // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFortItem*                              Item;                                              // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSliderStyle                           SliderStyle_MouseKeyboard;                         // 0x04D8(0x0340)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bShowConfirmButton;                                // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bShowCancelButton;                                 // 0x0819(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bAllowZeroQuantity;                                // 0x081A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_6CCA[0x5];                                     // 0x081B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSliderStyle                           SliderStyle_Touch;                                 // 0x0820(0x0340)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             ConfirmButtonSound;                                // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USoundBase*                             StorageCancelSound;                                // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSliderStyle                           SliderStyle_Generic;                               // 0x0B70(0x0340)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnButtonClickedDispatcher__DelegateSignature(int32 ChosenValue, class UFortItem* FortItem);
	void OnStackValueChangedDispatcher__DelegateSignature(int32 NewValue, class UFortItem* FortItem);
	void ExecuteUbergraph_QuantitySelector(int32 EntryPoint);
	void HandleChangeInputMode(ECommonInputType bNewInputType);
	void BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Destruct();
	void Construct();
	void BP_OnActivated();
	void BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void SetSplitData(int32 StartingCount, int32 MaximumCount, class UFortItem* Param_Item, const class FText& TitleText, const class FText& ButtonText, const class FText& AdditionalInfoText);
	void SetAdditionalText(const class FText& AdditionalInfoText);
	void CloseSelector();
	void HandleMaxPressed(bool* PassThrough);
	void HandleTransferPressed(bool* PassThrough);
	void HandleCancelPressed(bool* PassThrough);
	void SliderValueChanged();
	void SetupForInputMode(bool IsUsingGamepad);
	void GetCurrentValue(int32* Param_CurrentValue);
	void SetCurrentValue(int32 NewValue);
	void HandleMinPressed(bool* PassThrough);
	void GetMinValue(int32* MinValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuantitySelector_C">();
	}
	static class UQuantitySelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuantitySelector_C>();
	}
};
static_assert(alignof(UQuantitySelector_C) == 0x000008, "Wrong alignment on UQuantitySelector_C");
static_assert(sizeof(UQuantitySelector_C) == 0x000EB0, "Wrong size on UQuantitySelector_C");
static_assert(offsetof(UQuantitySelector_C, UberGraphFrame) == 0x000448, "Member 'UQuantitySelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, AdditionalInfo) == 0x000450, "Member 'UQuantitySelector_C::AdditionalInfo' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, CancelButton) == 0x000458, "Member 'UQuantitySelector_C::CancelButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ConfirmButton) == 0x000460, "Member 'UQuantitySelector_C::ConfirmButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, CurrentAmount) == 0x000468, "Member 'UQuantitySelector_C::CurrentAmount' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ItemCard) == 0x000470, "Member 'UQuantitySelector_C::ItemCard' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, Lightbox) == 0x000478, "Member 'UQuantitySelector_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxAmount) == 0x000480, "Member 'UQuantitySelector_C::MaxAmount' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxButton) == 0x000488, "Member 'UQuantitySelector_C::MaxButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MinButton) == 0x000490, "Member 'UQuantitySelector_C::MinButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ValueSlider) == 0x000498, "Member 'UQuantitySelector_C::ValueSlider' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, WindowTitle) == 0x0004A0, "Member 'UQuantitySelector_C::WindowTitle' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, CurrentValue) == 0x0004A8, "Member 'UQuantitySelector_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxValue) == 0x0004AC, "Member 'UQuantitySelector_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, OnButtonClickedDispatcher) == 0x0004B0, "Member 'UQuantitySelector_C::OnButtonClickedDispatcher' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, OnStackValueChangedDispatcher) == 0x0004C0, "Member 'UQuantitySelector_C::OnStackValueChangedDispatcher' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, Item) == 0x0004D0, "Member 'UQuantitySelector_C::Item' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_MouseKeyboard) == 0x0004D8, "Member 'UQuantitySelector_C::SliderStyle_MouseKeyboard' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bShowConfirmButton) == 0x000818, "Member 'UQuantitySelector_C::bShowConfirmButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bShowCancelButton) == 0x000819, "Member 'UQuantitySelector_C::bShowCancelButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bAllowZeroQuantity) == 0x00081A, "Member 'UQuantitySelector_C::bAllowZeroQuantity' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_Touch) == 0x000820, "Member 'UQuantitySelector_C::SliderStyle_Touch' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ConfirmButtonSound) == 0x000B60, "Member 'UQuantitySelector_C::ConfirmButtonSound' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, StorageCancelSound) == 0x000B68, "Member 'UQuantitySelector_C::StorageCancelSound' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_Generic) == 0x000B70, "Member 'UQuantitySelector_C::SliderStyle_Generic' has a wrong offset!");

}

