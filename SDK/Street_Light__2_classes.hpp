#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Street_Light__2

#include "Basic.hpp"

#include "Parent_BuildingPropActor_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Street_Light__2.Street_Light__2_C
// 0x0020 (0x0CC0 - 0x0CA0)
class AStreet_Light__2_C final : public AParent_BuildingPropActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Street_Light__2_C;                  // 0x0CA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Coneintensity;                                     // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EmissiveMult;                                      // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Street_Light__2(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Street_Light__2_C">();
	}
	static class AStreet_Light__2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStreet_Light__2_C>();
	}
};
static_assert(alignof(AStreet_Light__2_C) == 0x000008, "Wrong alignment on AStreet_Light__2_C");
static_assert(sizeof(AStreet_Light__2_C) == 0x000CC0, "Wrong size on AStreet_Light__2_C");
static_assert(offsetof(AStreet_Light__2_C, UberGraphFrame_Street_Light__2_C) == 0x000CA0, "Member 'AStreet_Light__2_C::UberGraphFrame_Street_Light__2_C' has a wrong offset!");
static_assert(offsetof(AStreet_Light__2_C, SpotLight) == 0x000CA8, "Member 'AStreet_Light__2_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AStreet_Light__2_C, Coneintensity) == 0x000CB0, "Member 'AStreet_Light__2_C::Coneintensity' has a wrong offset!");
static_assert(offsetof(AStreet_Light__2_C, EmissiveMult) == 0x000CB8, "Member 'AStreet_Light__2_C::EmissiveMult' has a wrong offset!");

}

