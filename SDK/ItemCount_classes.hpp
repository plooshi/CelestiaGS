#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCount

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemCount.ItemCount_C
// 0x0070 (0x02C8 - 0x0258)
class UItemCount_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          Border;                                            // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemCountTextBlock*                CountText;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisplayName;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         IconLeft;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         IconRight;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 TextStyle;                                         // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EFortItemCountStyle                           CountStyle;                                        // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_7199[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideValue;                                     // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EFortBrushSize                                BrushSize;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_719A[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_ItemCount_C;                                  // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          DisplayIconLeftSide;                               // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void SetBrushAndTextStyle(EFortBrushSize InBrushSize, class UClass* InStyle);
	void UpdateOverrideState();
	void SetOverrideValue(int32 OverrrideValue);
	void SetIsBeingPreviewed(bool BeingPreviewed);
	void SetItemDefinition(class UFortItemDefinition* Param_ItemDefinition);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_ItemCount(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemCount_C">();
	}
	static class UItemCount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemCount_C>();
	}
};
static_assert(alignof(UItemCount_C) == 0x000008, "Wrong alignment on UItemCount_C");
static_assert(sizeof(UItemCount_C) == 0x0002C8, "Wrong size on UItemCount_C");
static_assert(offsetof(UItemCount_C, UberGraphFrame) == 0x000258, "Member 'UItemCount_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemCount_C, Border) == 0x000260, "Member 'UItemCount_C::Border' has a wrong offset!");
static_assert(offsetof(UItemCount_C, CountText) == 0x000268, "Member 'UItemCount_C::CountText' has a wrong offset!");
static_assert(offsetof(UItemCount_C, DisplayName) == 0x000270, "Member 'UItemCount_C::DisplayName' has a wrong offset!");
static_assert(offsetof(UItemCount_C, IconLeft) == 0x000278, "Member 'UItemCount_C::IconLeft' has a wrong offset!");
static_assert(offsetof(UItemCount_C, IconRight) == 0x000280, "Member 'UItemCount_C::IconRight' has a wrong offset!");
static_assert(offsetof(UItemCount_C, ItemDefinition) == 0x000288, "Member 'UItemCount_C::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UItemCount_C, TextStyle) == 0x000290, "Member 'UItemCount_C::TextStyle' has a wrong offset!");
static_assert(offsetof(UItemCount_C, CountStyle) == 0x000298, "Member 'UItemCount_C::CountStyle' has a wrong offset!");
static_assert(offsetof(UItemCount_C, OverrideValue) == 0x00029C, "Member 'UItemCount_C::OverrideValue' has a wrong offset!");
static_assert(offsetof(UItemCount_C, BrushSize) == 0x0002A0, "Member 'UItemCount_C::BrushSize' has a wrong offset!");
static_assert(offsetof(UItemCount_C, Name_ItemCount_C) == 0x0002A8, "Member 'UItemCount_C::Name_ItemCount_C' has a wrong offset!");
static_assert(offsetof(UItemCount_C, DisplayIconLeftSide) == 0x0002C0, "Member 'UItemCount_C::DisplayIconLeftSide' has a wrong offset!");

}

