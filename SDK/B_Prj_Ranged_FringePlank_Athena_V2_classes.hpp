#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Ranged_FringePlank_Athena_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Ranged_FringePlank_Athena_V2.B_Prj_Ranged_FringePlank_Athena_V2_C
// 0x0310 (0x0B78 - 0x0868)
class AB_Prj_Ranged_FringePlank_Athena_V2_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0868(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               GiantFlare;                                        // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurfaceTypeSoundComponent_C*        BP_SurfaceTypeSoundComponent;                      // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           FortCollisionAudio;                                // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LoopingAudioTell;                                  // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GL_Ribbon_SmokeTrail;                            // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityAndGravityLerp_VelocityCurve_A7409B354D16857784EA3C8FCB6D7A14; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VelocityAndGravityLerp__Direction_A7409B354D16857784EA3C8FCB6D7A14; // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63CF[0x3];                                     // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VelocityAndGravityLerp;                            // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        RibbonTrail_PS;                                    // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RibbonTrail_PSC;                                   // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        DeathExplosion_PS;                                 // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WaterImpact_PS;                                    // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Bounce_Sound;                                      // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BounceCueTag;                                      // 0x08D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Initial_Speed;                                     // 0x08E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Final_XYSpeedMultiplier;                           // 0x0900(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DisableMarkingPlayers;                             // 0x0920(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentBounces;                                    // 0x0940(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlowing;                                         // 0x0944(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D0[0x3];                                     // 0x0945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         GravityAfterBounced;                               // 0x0948(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          InWater;                                           // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D1[0x7];                                     // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        SparkExplosion_PS;                                 // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SparkExplosionSize;                                // 0x0978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D2[0x4];                                     // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 FireMeshBGA;                                       // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Spark;                                             // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitWater_Sound;                                    // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SparkExplosion_Sound;                              // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         NumSparksToDrop;                                   // 0x09A0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TimeBeforeSparkExplosion;                          // 0x09C0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SparkSpeed;                                        // 0x09E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SparkGravityScale;                                 // 0x0A00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         GravityAfterParachute;                             // 0x0A20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Lerp_StartVel;                                     // 0x0A40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D3[0x4];                                     // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxBounces;                                        // 0x0A50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ChuteAngleInterpSpeed;                             // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShootSparksInCone;                                 // 0x0A74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D4[0x3];                                     // 0x0A75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lerp_StartXYSpeed;                                 // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lerp_FinalXYSpeed;                                 // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lerp_StartZSpeed;                                  // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lerp_XYDirection;                                  // 0x0A84(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedRandomSparkOffsetAngle;                      // 0x0A90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact_Point;                                      // 0x0A94(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Impact_Sound;                                      // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Parachute_Audio;                                   // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Parachute_Disapears;                               // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MarkActorInt;                                      // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D5[0x4];                                     // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        IndicatedPS;                                       // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParticleSystemParamName;                           // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSOffset;                                          // 0x0AD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSDBNOOffset;                                      // 0x0ADC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PSVectorParamName;                                 // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 IndicatorGroup;                                    // 0x0AF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class AAthena_PlayerController_C*             AthenaPlayerControler;                             // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMarkingRadius;                              // 0x0B08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OriginalParachuteScale;                            // 0x0B0C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Initial_Gravity;                                   // 0x0B18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           CueOnMark;                                         // 0x0B38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MarkPlayers;                                       // 0x0B40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D6[0x3];                                     // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxMarkRaycastDistance;                            // 0x0B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinMarkRadius;                                     // 0x0B48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxMarkRadius;                                     // 0x0B4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SparksCurrentlySpawned;                            // 0x0B50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDying;                                           // 0x0B54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D7[0x3];                                     // 0x0B55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MarkingRange;                                      // 0x0B58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Ranged_FringePlank_Athena_V2(int32 EntryPoint);
	void HitWaterEffects();
	void MarkEnemies_();
	void DetroySelf();
	void WaterBounce();
	void DropSparksOnWater();
	void SendOutPing();
	void ReceiveDestroyed();
	void Play_Impact_Sound();
	void OnStop(const struct FHitResult& Hit);
	void IncrementBounces();
	void SetInitialProjectileValues();
	void DropMultipleSparks(int32 Number, const struct FVector& Location);
	void SparkAndSlowDown();
	void SlowSpeed();
	void HaltVelocityCurve();
	void DropSingleSpark(float Rotation, const struct FVector& Location);
	void SparkExplosion();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* Param_WaterInteractionComponent, bool bIsFirstBody);
	void OnBounce(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void VelocityAndGravityLerp__UpdateFunc();
	void VelocityAndGravityLerp__FinishedFunc();
	void UserConstructionScript();
	void SpawnBounceFX(struct FHitResult& Hit);
	void GetActorsInRange(TArray<class AFortPlayerPawn*>& Array, TArray<class AFortPlayerPawn*>* Result_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Ranged_FringePlank_Athena_V2_C">();
	}
	static class AB_Prj_Ranged_FringePlank_Athena_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Ranged_FringePlank_Athena_V2_C>();
	}
};
static_assert(alignof(AB_Prj_Ranged_FringePlank_Athena_V2_C) == 0x000008, "Wrong alignment on AB_Prj_Ranged_FringePlank_Athena_V2_C");
static_assert(sizeof(AB_Prj_Ranged_FringePlank_Athena_V2_C) == 0x000B78, "Wrong size on AB_Prj_Ranged_FringePlank_Athena_V2_C");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, UberGraphFrame) == 0x000868, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, GiantFlare) == 0x000870, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::GiantFlare' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, BP_SurfaceTypeSoundComponent) == 0x000878, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::BP_SurfaceTypeSoundComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, FortCollisionAudio) == 0x000880, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::FortCollisionAudio' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, LoopingAudioTell) == 0x000888, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::LoopingAudioTell' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, P_GL_Ribbon_SmokeTrail) == 0x000890, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::P_GL_Ribbon_SmokeTrail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Mesh) == 0x000898, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, VelocityAndGravityLerp_VelocityCurve_A7409B354D16857784EA3C8FCB6D7A14) == 0x0008A0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::VelocityAndGravityLerp_VelocityCurve_A7409B354D16857784EA3C8FCB6D7A14' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, VelocityAndGravityLerp__Direction_A7409B354D16857784EA3C8FCB6D7A14) == 0x0008A4, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::VelocityAndGravityLerp__Direction_A7409B354D16857784EA3C8FCB6D7A14' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, VelocityAndGravityLerp) == 0x0008A8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::VelocityAndGravityLerp' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, RibbonTrail_PS) == 0x0008B0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::RibbonTrail_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, RibbonTrail_PSC) == 0x0008B8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::RibbonTrail_PSC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, DeathExplosion_PS) == 0x0008C0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::DeathExplosion_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, WaterImpact_PS) == 0x0008C8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::WaterImpact_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Bounce_Sound) == 0x0008D0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Bounce_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, BounceCueTag) == 0x0008D8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::BounceCueTag' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Initial_Speed) == 0x0008E0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Initial_Speed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Final_XYSpeedMultiplier) == 0x000900, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Final_XYSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, DisableMarkingPlayers) == 0x000920, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::DisableMarkingPlayers' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, CurrentBounces) == 0x000940, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::CurrentBounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, IsSlowing) == 0x000944, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::IsSlowing' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, GravityAfterBounced) == 0x000948, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::GravityAfterBounced' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, InWater) == 0x000968, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::InWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparkExplosion_PS) == 0x000970, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparkExplosion_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparkExplosionSize) == 0x000978, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparkExplosionSize' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, FireMeshBGA) == 0x000980, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::FireMeshBGA' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Spark) == 0x000988, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Spark' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, HitWater_Sound) == 0x000990, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::HitWater_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparkExplosion_Sound) == 0x000998, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparkExplosion_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, NumSparksToDrop) == 0x0009A0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::NumSparksToDrop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, TimeBeforeSparkExplosion) == 0x0009C0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::TimeBeforeSparkExplosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparkSpeed) == 0x0009E0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparkSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparkGravityScale) == 0x000A00, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparkGravityScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, GravityAfterParachute) == 0x000A20, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::GravityAfterParachute' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Lerp_StartVel) == 0x000A40, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Lerp_StartVel' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MaxBounces) == 0x000A50, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MaxBounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, ChuteAngleInterpSpeed) == 0x000A70, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::ChuteAngleInterpSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, ShootSparksInCone) == 0x000A74, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::ShootSparksInCone' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Lerp_StartXYSpeed) == 0x000A78, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Lerp_StartXYSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Lerp_FinalXYSpeed) == 0x000A7C, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Lerp_FinalXYSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Lerp_StartZSpeed) == 0x000A80, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Lerp_StartZSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Lerp_XYDirection) == 0x000A84, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Lerp_XYDirection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, CachedRandomSparkOffsetAngle) == 0x000A90, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::CachedRandomSparkOffsetAngle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Impact_Point) == 0x000A94, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Impact_Point' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Impact_Sound) == 0x000AA0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Impact_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Parachute_Audio) == 0x000AA8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Parachute_Audio' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Parachute_Disapears) == 0x000AB0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Parachute_Disapears' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MarkActorInt) == 0x000AB8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MarkActorInt' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, IndicatedPS) == 0x000AC0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::IndicatedPS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, ParticleSystemParamName) == 0x000AC8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::ParticleSystemParamName' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, PSOffset) == 0x000AD0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::PSOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, PSDBNOOffset) == 0x000ADC, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::PSDBNOOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, PSVectorParamName) == 0x000AE8, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::PSVectorParamName' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, IndicatorGroup) == 0x000AF0, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::IndicatorGroup' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, AthenaPlayerControler) == 0x000B00, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::AthenaPlayerControler' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, CurrentMarkingRadius) == 0x000B08, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::CurrentMarkingRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, OriginalParachuteScale) == 0x000B0C, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::OriginalParachuteScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, Initial_Gravity) == 0x000B18, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::Initial_Gravity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, CueOnMark) == 0x000B38, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::CueOnMark' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MarkPlayers) == 0x000B40, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MarkPlayers' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MaxMarkRaycastDistance) == 0x000B44, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MaxMarkRaycastDistance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MinMarkRadius) == 0x000B48, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MinMarkRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MaxMarkRadius) == 0x000B4C, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MaxMarkRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, SparksCurrentlySpawned) == 0x000B50, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::SparksCurrentlySpawned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, IsDying) == 0x000B54, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::IsDying' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ranged_FringePlank_Athena_V2_C, MarkingRange) == 0x000B58, "Member 'AB_Prj_Ranged_FringePlank_Athena_V2_C::MarkingRange' has a wrong offset!");

}

