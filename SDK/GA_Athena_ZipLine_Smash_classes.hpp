#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_Smash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C
// 0x0058 (0x0AD0 - 0x0A78)
class UGA_Athena_ZipLine_Smash_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateIntervalForSmashVolume;                      // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60EB[0x4];                                     // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 StructureDamageGE;                                 // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_C*           ZiplineHarness;                                    // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Athena_Environmental_ZipLine_C*     Zipline;                                           // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomMovement                           DrivingCustomMovementMode;                         // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60EC[0x3];                                     // 0x0AA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            FallImmunityGEFX;                                  // 0x0AAC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AttachVFXCue;                                      // 0x0AB4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SmashCue;                                          // 0x0ABC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Swimming;                                        // 0x0AC4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_ZipLine_Smash(int32 EntryPoint);
	void EnterWaterExit(class AFortPlayerPawn* FortPlayerPawn);
	void SwimmingStarted();
	void BindEvent();
	void DelaySpawnMotor();
	void OnBeginSkydiving_Bind();
	void OnEnteredAircraft_Bind();
	void OnPawnDied_Bind(class AActor* NewParam, float NewParam2, class AController* NewParam3, class AActor* NewParam4, const struct FVector& NewParam5, class UPrimitiveComponent* NewParam6, class FName NewParam7, const struct FVector& NewParam8);
	void ZipliningComplete();
	void OnEnterVehicle_Bind();
	void SurroundingsCheck();
	void RemoveFallDamageImmunity();
	void HandleZiplineStateChanged(bool bIsZiplining);
	void OnPawnLanded_Bind(const struct FHitResult& Hit);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void Added_57667DA14EF15649A9E09AA4184D83F2();
	void Added_98DA090E476D590C00C74EAC10378F60();
	void BreakNearbyStructures(class AFortPlayerPawn* Param_PlayerPawn);
	void SpawnMotor(class AActor* Param_PlayerPawn);
	void CheckMotor();
	void CheckForQuestProgress();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_ZipLine_Smash_C">();
	}
	static class UGA_Athena_ZipLine_Smash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_ZipLine_Smash_C>();
	}
};
static_assert(alignof(UGA_Athena_ZipLine_Smash_C) == 0x000008, "Wrong alignment on UGA_Athena_ZipLine_Smash_C");
static_assert(sizeof(UGA_Athena_ZipLine_Smash_C) == 0x000AD0, "Wrong size on UGA_Athena_ZipLine_Smash_C");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_ZipLine_Smash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, PlayerPawn) == 0x000A80, "Member 'UGA_Athena_ZipLine_Smash_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, UpdateIntervalForSmashVolume) == 0x000A88, "Member 'UGA_Athena_ZipLine_Smash_C::UpdateIntervalForSmashVolume' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, StructureDamageGE) == 0x000A90, "Member 'UGA_Athena_ZipLine_Smash_C::StructureDamageGE' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, ZiplineHarness) == 0x000A98, "Member 'UGA_Athena_ZipLine_Smash_C::ZiplineHarness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, Zipline) == 0x000AA0, "Member 'UGA_Athena_ZipLine_Smash_C::Zipline' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, DrivingCustomMovementMode) == 0x000AA8, "Member 'UGA_Athena_ZipLine_Smash_C::DrivingCustomMovementMode' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, FallImmunityGEFX) == 0x000AAC, "Member 'UGA_Athena_ZipLine_Smash_C::FallImmunityGEFX' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, AttachVFXCue) == 0x000AB4, "Member 'UGA_Athena_ZipLine_Smash_C::AttachVFXCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, SmashCue) == 0x000ABC, "Member 'UGA_Athena_ZipLine_Smash_C::SmashCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, T_Swimming) == 0x000AC4, "Member 'UGA_Athena_ZipLine_Smash_C::T_Swimming' has a wrong offset!");

}

