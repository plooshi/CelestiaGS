#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapChallengeCategoryInGameRotator

#include "Basic.hpp"

#include "AthenaMapChallengeCategoryInGameRotator_classes.hpp"
#include "AthenaMapChallengeCategoryInGameRotator_parameters.hpp"


namespace SDK
{

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryInGameRotator_C::ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator");

	Params::AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bUsingGamepad                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaMapChallengeCategoryInGameRotator_C::BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature");

	Params::AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.bUsingGamepad = bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaMapChallengeCategoryInGameRotator_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.HandleInputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryInGameRotator_C::HandleInputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "HandleInputMethodChanged");

	Params::AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.OnCycleButtonClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryInGameRotator_C::OnCycleButtonClicked(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "OnCycleButtonClicked");

	Params::AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaMapChallengeCategoryInGameRotator_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BP_OnOptionSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryInGameRotator_C::BP_OnOptionSelected(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "BP_OnOptionSelected");

	Params::AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BP_OnOptionsPopulated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryInGameRotator_C::BP_OnOptionsPopulated(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "BP_OnOptionsPopulated");

	Params::AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.PlayIntroAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsReverse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaMapChallengeCategoryInGameRotator_C::PlayIntroAnim(bool bIsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryInGameRotator_C", "PlayIntroAnim");

	Params::AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim Parms{};

	Parms.bIsReverse = bIsReverse;

	UObject::ProcessEvent(Func, &Parms);
}

}

