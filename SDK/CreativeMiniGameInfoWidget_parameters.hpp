#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeMiniGameInfoWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.OnVolumeChanged
// 0x0080 (0x0080 - 0x0000)
struct CreativeMiniGameInfoWidget_C_OnVolumeChanged final
{
public:
	class APlayerState*                           ChangedPlayerState;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            ChangedVolume;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEntering;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          EnteredMinigame;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_OnVolumeChanged) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_OnVolumeChanged");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_OnVolumeChanged) == 0x000080, "Wrong size on CreativeMiniGameInfoWidget_C_OnVolumeChanged");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, ChangedPlayerState) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::ChangedPlayerState' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, ChangedVolume) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::ChangedVolume' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, bIsEntering) == 0x000010, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::bIsEntering' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, EnteredMinigame) == 0x000018, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::EnteredMinigame' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000028, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_IsValid_ReturnValue_2) == 0x000079, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00007A, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnVolumeChanged, CallFunc_IsValid_ReturnValue_3) == 0x00007B, "Member 'CreativeMiniGameInfoWidget_C_OnVolumeChanged::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.OnExitVolume
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameInfoWidget_C_OnExitVolume final
{
public:
	class APlayerState*                           EnteringPlayerState;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            EnteredVolume;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_OnExitVolume) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_OnExitVolume");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_OnExitVolume) == 0x000010, "Wrong size on CreativeMiniGameInfoWidget_C_OnExitVolume");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnExitVolume, EnteringPlayerState) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_OnExitVolume::EnteringPlayerState' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnExitVolume, EnteredVolume) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_OnExitVolume::EnteredVolume' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.OnEnterVolume
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameInfoWidget_C_OnEnterVolume final
{
public:
	class APlayerState*                           EnteringPlayerState;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            EnteredVolume;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_OnEnterVolume) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_OnEnterVolume");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_OnEnterVolume) == 0x000010, "Wrong size on CreativeMiniGameInfoWidget_C_OnEnterVolume");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnEnterVolume, EnteringPlayerState) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_OnEnterVolume::EnteringPlayerState' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnEnterVolume, EnteredVolume) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_OnEnterVolume::EnteredVolume' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.InitProgressDynamicMaterial
// 0x00B8 (0x00B8 - 0x0000)
struct CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x0088)()
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial) == 0x0000B8, "Wrong size on CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_InitProgressDynamicMaterial::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.GetStartButtomProgressMaterial
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial final
{
public:
	class UMaterialInstanceDynamic*               Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial) == 0x000010, "Wrong size on CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial, Output_Get) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial::Output_Get' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_GetStartButtomProgressMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.ToggleInfo
// 0x0038 (0x0038 - 0x0000)
struct CreativeMiniGameInfoWidget_C_ToggleInfo final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B5[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreDetailsToggleable_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B6[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_ToggleInfo) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_ToggleInfo");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_ToggleInfo) == 0x000038, "Wrong size on CreativeMiniGameInfoWidget_C_ToggleInfo");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000011, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000014, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_AreDetailsToggleable_ReturnValue) == 0x000019, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_AreDetailsToggleable_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_GetVisibility_ReturnValue) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ToggleInfo, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'CreativeMiniGameInfoWidget_C_ToggleInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.PlayIntro
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_PlayIntro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_PlayIntro) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_PlayIntro");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_PlayIntro) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_PlayIntro");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_PlayIntro, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_PlayIntro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.UpdateStartButtonVisibility
// 0x0001 (0x0001 - 0x0000)
struct CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility final
{
public:
	bool                                          CallFunc_IsStartGameEnabled_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility) == 0x000001, "Wrong alignment on CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility) == 0x000001, "Wrong size on CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility, CallFunc_IsStartGameEnabled_ReturnValue) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_UpdateStartButtonVisibility::CallFunc_IsStartGameEnabled_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.OnMinigameStateChange
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameInfoWidget_C_OnMinigameStateChange final
{
public:
	class AFortMinigame*                          ChangedMinigame;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            MinigameState;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_OnMinigameStateChange");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange) == 0x000010, "Wrong size on CreativeMiniGameInfoWidget_C_OnMinigameStateChange");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, ChangedMinigame) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::ChangedMinigame' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, MinigameState) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::MinigameState' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, Temp_byte_Variable) == 0x000009, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, Temp_byte_Variable_1) == 0x00000B, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, Temp_bool_Variable) == 0x00000C, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnMinigameStateChange, K2Node_Select_Default) == 0x00000D, "Member 'CreativeMiniGameInfoWidget_C_OnMinigameStateChange::K2Node_Select_Default' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.EnablePanelInputs
// 0x0038 (0x0038 - 0x0000)
struct CreativeMiniGameInfoWidget_C_EnablePanelInputs final
{
public:
	bool                                          InputEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_70B8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_EnablePanelInputs) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_EnablePanelInputs");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_EnablePanelInputs) == 0x000038, "Wrong size on CreativeMiniGameInfoWidget_C_EnablePanelInputs");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_EnablePanelInputs, InputEnabled) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_EnablePanelInputs::InputEnabled' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_EnablePanelInputs, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'CreativeMiniGameInfoWidget_C_EnablePanelInputs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_EnablePanelInputs, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'CreativeMiniGameInfoWidget_C_EnablePanelInputs::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_EnablePanelInputs, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000028, "Member 'CreativeMiniGameInfoWidget_C_EnablePanelInputs::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_EnablePanelInputs, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_EnablePanelInputs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.HideIfTextEmpty
// 0x0038 (0x0038 - 0x0000)
struct CreativeMiniGameInfoWidget_C_HideIfTextEmpty final
{
public:
	class UTextBlock*                             TextToCheck;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ElementToHide;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_HideIfTextEmpty");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty) == 0x000038, "Wrong size on CreativeMiniGameInfoWidget_C_HideIfTextEmpty");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, TextToCheck) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::TextToCheck' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, ElementToHide) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::ElementToHide' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, Temp_bool_Variable) == 0x000010, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, Temp_byte_Variable) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, CallFunc_TextIsEmpty_ReturnValue) == 0x000031, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, Temp_byte_Variable_1) == 0x000032, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_HideIfTextEmpty, K2Node_Select_Default) == 0x000033, "Member 'CreativeMiniGameInfoWidget_C_HideIfTextEmpty::K2Node_Select_Default' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.OnComplete_C81092C34891DE4D9A4522B8A69838FF
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF, UserWidget) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_OnComplete_C81092C34891DE4D9A4522B8A69838FF::UserWidget' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CreativeMiniGameInfoWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_PreConstruct) == 0x000001, "Wrong alignment on CreativeMiniGameInfoWidget_C_PreConstruct");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_PreConstruct) == 0x000001, "Wrong size on CreativeMiniGameInfoWidget_C_PreConstruct");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_BndEvt__SupportAffliateButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_BndEvt__StartGameButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_BndEvt__HideDetailsButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_BndEvt__ShowDetailsButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function CreativeMiniGameInfoWidget.CreativeMiniGameInfoWidget_C.ExecuteUbergraph_CreativeMiniGameInfoWidget
// 0x0198 (0x0198 - 0x0000)
struct CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70BA[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCursorMode_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BD[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCursorMode_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BE[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CreateWidgetAsync*     CallFunc_CreateWidgetAsync_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_3;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BF[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C0[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreativeAffiliatePanel_C*              K2Node_DynamicCast_AsCreative_Affiliate_Panel;     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C1[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00B8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x00D0(0x0018)()
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C2[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x00F0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C3[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_UserWidget;                     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCreativeLTMPlaylist_ReturnValue;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C4[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreDetailsToggleable_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C5[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C6[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0174(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_70C7[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortInitializeFromObjectInterface> CallFunc_InitFromObject_self_CastInput;            // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget) == 0x000008, "Wrong alignment on CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget");
static_assert(sizeof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget) == 0x000198, "Wrong size on CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, EntryPoint) == 0x000000, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_bool_Variable) == 0x000004, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_byte_Variable) == 0x000005, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_byte_Variable_1) == 0x000006, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_bool_Variable_1) == 0x000007, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_byte_Variable_2) == 0x000008, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_byte_Variable_3) == 0x000009, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000028, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_Event_IsDesignTime) == 0x000040, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_IsInCursorMode_ReturnValue) == 0x000050, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_IsInCursorMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetContext_ReturnValue_1) == 0x000058, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_IsInCursorMode_ReturnValue_1) == 0x000060, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_IsInCursorMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000061, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_CreateWidgetAsync_ReturnValue) == 0x000068, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_CreateWidgetAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_ComponentBoundEvent_Button_3) == 0x000070, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_ComponentBoundEvent_Button_2) == 0x000080, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_Not_PreBool_ReturnValue_2) == 0x000098, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, Temp_object_Variable) == 0x0000A0, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_AsCreative_Affiliate_Panel) == 0x0000A8, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_AsCreative_Affiliate_Panel' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetText_ReturnValue) == 0x0000B8, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetText_ReturnValue_1) == 0x0000D0, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue) == 0x0000E8, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetText_ReturnValue_2) == 0x0000F0, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_Select_Default) == 0x000108, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetGameState_ReturnValue) == 0x000110, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CustomEvent_UserWidget) == 0x000118, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000120, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_IsCreativeLTMPlaylist_ReturnValue) == 0x000129, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_IsCreativeLTMPlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_ComponentBoundEvent_Button_1) == 0x000130, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_ComponentBoundEvent_Button) == 0x000138, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_AreDetailsToggleable_ReturnValue) == 0x000140, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_AreDetailsToggleable_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_Select_Default_1) == 0x000141, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000148, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_GetVolumeManager_OutIsValid) == 0x000150, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x000154, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CreateDelegate_OutputDelegate_3) == 0x000164, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, K2Node_CreateDelegate_OutputDelegate_4) == 0x000174, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget, CallFunc_InitFromObject_self_CastInput) == 0x000188, "Member 'CreativeMiniGameInfoWidget_C_ExecuteUbergraph_CreativeMiniGameInfoWidget::CallFunc_InitFromObject_self_CastInput' has a wrong offset!");

}

