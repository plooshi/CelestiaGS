#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAIPawn_Bud

#include "Basic.hpp"

#include "FortAIPawn_Bud_classes.hpp"
#include "FortAIPawn_Bud_parameters.hpp"


namespace SDK
{

// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ExecuteUbergraph_FortAIPawn_Bud
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::ExecuteUbergraph_FortAIPawn_Bud(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ExecuteUbergraph_FortAIPawn_Bud");

	Params::FortAIPawn_Bud_C_ExecuteUbergraph_FortAIPawn_Bud Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ResetBounce
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::ResetBounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ResetBounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Goal Actor Death
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::Goal_Actor_Death(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "Goal Actor Death");

	Params::FortAIPawn_Bud_C_Goal_Actor_Death Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = move(Momentum);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Death on Bud
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::Death_on_Bud(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "Death on Bud");

	Params::FortAIPawn_Bud_C_Death_on_Bud Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = move(Momentum);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AFortAIPawn_Bud_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnWaterNavMeshEnter
// (Event, Public, BlueprintEvent)

void AFortAIPawn_Bud_C::OnWaterNavMeshEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnWaterNavMeshEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnBeginWaterInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfaceLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaterDepth                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::OnBeginWaterInteraction(const struct FVector& WaterSurfaceLocation, float WaterDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnBeginWaterInteraction");

	Params::FortAIPawn_Bud_C_OnBeginWaterInteraction Parms{};

	Parms.WaterSurfaceLocation = move(WaterSurfaceLocation);
	Parms.WaterDepth = WaterDepth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnEnteredWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsFirstBody                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AFortAIPawn_Bud_C::OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsFirstBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnEnteredWaterBody");

	Params::FortAIPawn_Bud_C_OnEnteredWaterBody Parms{};

	Parms.WaterBody = WaterBody;
	Parms.bIsFirstBody = bIsFirstBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BeginOverlap_BounceCollision
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AFortAIPawn_Bud_C::BeginOverlap_BounceCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "BeginOverlap_BounceCollision");

	Params::FortAIPawn_Bud_C_BeginOverlap_BounceCollision Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.EnergyRestored
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::EnergyRestored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "EnergyRestored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OutOfEnergy
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OutOfEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OutOfEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.DormantDance
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::DormantDance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "DormantDance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnListenTagRemoved
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::OnListenTagRemoved(const class AActor* TargetActor, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnListenTagRemoved");

	Params::FortAIPawn_Bud_C_OnListenTagRemoved Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Tag = move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.StartFollowing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reunited                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AFortAIPawn_Bud_C::StartFollowing(bool Reunited)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "StartFollowing");

	Params::FortAIPawn_Bud_C_StartFollowing Parms{};

	Parms.Reunited = Reunited;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnComponentBeginOverlap_Event_1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AFortAIPawn_Bud_C::OnComponentBeginOverlap_Event_1(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnComponentBeginOverlap_Event_1");

	Params::FortAIPawn_Bud_C_OnComponentBeginOverlap_Event_1 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.WakeUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::WakeUp(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "WakeUp");

	Params::FortAIPawn_Bud_C_WakeUp Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnListenTagAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::OnListenTagAdded(const class AActor* TargetActor, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnListenTagAdded");

	Params::FortAIPawn_Bud_C_OnListenTagAdded Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Tag = move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.NotEnoughResources
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::NotEnoughResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "NotEnoughResources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnItemsConsumed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsConsumed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::OnItemsConsumed(const class AFortPlayerPawn* PlayerPawn, int32 ItemsConsumed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnItemsConsumed");

	Params::FortAIPawn_Bud_C_OnItemsConsumed Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.ItemsConsumed = ItemsConsumed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.EndOverlap_DanceRadius
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::EndOverlap_DanceRadius(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "EndOverlap_DanceRadius");

	Params::FortAIPawn_Bud_C_EndOverlap_DanceRadius Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BeginOverlap_DanceRadius
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AFortAIPawn_Bud_C::BeginOverlap_DanceRadius(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "BeginOverlap_DanceRadius");

	Params::FortAIPawn_Bud_C_BeginOverlap_DanceRadius Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.StopFollowing
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::StopFollowing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "StopFollowing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.Dance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::Dance(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "Dance");

	Params::FortAIPawn_Bud_C_Dance Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AFortAIPawn_Bud_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnDeathPlayEffects");

	Params::FortAIPawn_Bud_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AFortAIPawn_Bud_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnDeathServer");

	Params::FortAIPawn_Bud_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AFortAIPawn_Bud_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.AddTrackedTagListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::AddTrackedTagListener(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "AddTrackedTagListener");

	Params::FortAIPawn_Bud_C_AddTrackedTagListener Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.RemoveTrackedTagListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::RemoveTrackedTagListener(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "RemoveTrackedTagListener");

	Params::FortAIPawn_Bud_C_RemoveTrackedTagListener Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ListenTagAdded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::ListenTagAdded(class AActor* TargetActor, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ListenTagAdded");

	Params::FortAIPawn_Bud_C_ListenTagAdded Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Tag = move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ListenTagRemoved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::ListenTagRemoved(class AActor* TargetActor, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ListenTagRemoved");

	Params::FortAIPawn_Bud_C_ListenTagRemoved Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Tag = move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.TickUpdateLink
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::TickUpdateLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "TickUpdateLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.RotateToFaceActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::RotateToFaceActor(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "RotateToFaceActor");

	Params::FortAIPawn_Bud_C_RotateToFaceActor Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.DormantDanceHint
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::DormantDanceHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "DormantDanceHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.TickEnergyDecay
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::TickEnergyDecay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "TickEnergyDecay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_HasEnergy
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OnRep_HasEnergy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnRep_HasEnergy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.BounceCeilingCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HitCeiling                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AFortAIPawn_Bud_C::BounceCeilingCheck(bool* HitCeiling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "BounceCeilingCheck");

	Params::FortAIPawn_Bud_C_BounceCeilingCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitCeiling != nullptr)
		*HitCeiling = Parms.HitCeiling;
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_Following
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OnRep_Following()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnRep_Following");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_GoalActor
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OnRep_GoalActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnRep_GoalActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.ClientUpdateBeamActivation
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::ClientUpdateBeamActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "ClientUpdateBeamActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_Energy
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnRep_Energy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.OnRep_Dormant
// (BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::OnRep_Dormant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "OnRep_Dormant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.SetTeamFromGoalActor
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::SetTeamFromGoalActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "SetTeamFromGoalActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.StopBudSnapAudio
// (Public, BlueprintCallable, BlueprintEvent)

void AFortAIPawn_Bud_C::StopBudSnapAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "StopBudSnapAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.GetInteractionString
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText AFortAIPawn_Bud_C::GetInteractionString(const class AFortPlayerPawn* PlayerPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "GetInteractionString");

	Params::FortAIPawn_Bud_C_GetInteractionString Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.GetIconPlacement
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           SelfActor                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ViewingActor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutExtents                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFortAIPawn_Bud_C::GetIconPlacement(const class AActor* SelfActor, const class AActor* ViewingActor, struct FVector* OutLocation, struct FVector* OutExtents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "GetIconPlacement");

	Params::FortAIPawn_Bud_C_GetIconPlacement Parms{};

	Parms.SelfActor = SelfActor;
	Parms.ViewingActor = ViewingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = move(Parms.OutLocation);

	if (OutExtents != nullptr)
		*OutExtents = move(Parms.OutExtents);
}


// Function FortAIPawn_Bud.FortAIPawn_Bud_C.IsValidAutoFireTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Attacker                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AFortAIPawn_Bud_C::IsValidAutoFireTarget(const class AActor* Attacker) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn_Bud_C", "IsValidAutoFireTarget");

	Params::FortAIPawn_Bud_C_IsValidAutoFireTarget Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

