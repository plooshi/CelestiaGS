#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewLevelWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NewLevelWidget.NewLevelWidget_C
// 0x0020 (0x0320 - 0x0300)
class UNewLevelWidget_C final : public UAthenaLevelUpWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlacementOffset;                                   // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class ULevelUpVisuals_C*                      LevelUpVisuals;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsPlaced;                                          // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ShowWidget(int32 NewLevel);
	void Construct();
	void OutroFinished();
	void ShowLevelReward();
	void EventMoveforEoM(class FName Placement);
	void ExecuteUbergraph_NewLevelWidget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewLevelWidget_C">();
	}
	static class UNewLevelWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNewLevelWidget_C>();
	}
};
static_assert(alignof(UNewLevelWidget_C) == 0x000008, "Wrong alignment on UNewLevelWidget_C");
static_assert(sizeof(UNewLevelWidget_C) == 0x000320, "Wrong size on UNewLevelWidget_C");
static_assert(offsetof(UNewLevelWidget_C, UberGraphFrame) == 0x000300, "Member 'UNewLevelWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNewLevelWidget_C, PlacementOffset) == 0x000308, "Member 'UNewLevelWidget_C::PlacementOffset' has a wrong offset!");
static_assert(offsetof(UNewLevelWidget_C, LevelUpVisuals) == 0x000310, "Member 'UNewLevelWidget_C::LevelUpVisuals' has a wrong offset!");
static_assert(offsetof(UNewLevelWidget_C, IsPlaced) == 0x000318, "Member 'UNewLevelWidget_C::IsPlaced' has a wrong offset!");

}

