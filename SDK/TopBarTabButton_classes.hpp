#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TopBarTabButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TopBarTabButton.TopBarTabButton_C
// 0x0088 (0x0C40 - 0x0BB8)
class UTopBarTabButton_C final : public UFortTopBarTabButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hovered;                                           // 0x0BC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0BC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_0;                            // 0x0BD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_ButtonBorder;                                  // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewMobileStyle;                                // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7489[0x3];                                     // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatSpringState                      SpringState_ShapeChange;                           // 0x0BE4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FFloatSpringState                      SpringState_Scale;                                 // 0x0BEC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Spring_Scale_Target;                               // 0x0BF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MassMultiply;                                      // 0x0BF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DampenMultiply;                                    // 0x0BFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StiffnessMultiply;                                 // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisualSelectionState;                              // 0x0C04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748A[0x3];                                     // 0x0C05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomFloat_Top;                                   // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Left;                                  // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Right;                                 // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Bottom;                                // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_New;                                   // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_Target;                                // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateSpring;                                      // 0x0C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748B[0x7];                                     // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonText;                                        // 0x0C28(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_TopBarTabButton(int32 EntryPoint);
	void BP_OnUnhovered();
	void BP_OnHovered();
	void OnCurrentTextStyleChanged();
	void HandleSelectionChangedVisuals(bool bIsSelected);
	void OnSelectedChangedEvent(class UCommonButton* Button, bool Param_Selected);
	void OnInitialized();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void InitializeButtonBorderMID();
	void SeedRandomValues();
	void UpdateMIDWithRandomValues();
	void SetText(const class FText& Param_ButtonText);
	void OverrideIcon(bool Show, const struct FSlateBrush& InSlateBrush);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TopBarTabButton_C">();
	}
	static class UTopBarTabButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTopBarTabButton_C>();
	}
};
static_assert(alignof(UTopBarTabButton_C) == 0x000008, "Wrong alignment on UTopBarTabButton_C");
static_assert(sizeof(UTopBarTabButton_C) == 0x000C40, "Wrong size on UTopBarTabButton_C");
static_assert(offsetof(UTopBarTabButton_C, UberGraphFrame) == 0x000BB8, "Member 'UTopBarTabButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Hovered) == 0x000BC0, "Member 'UTopBarTabButton_C::Hovered' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Selected) == 0x000BC8, "Member 'UTopBarTabButton_C::Selected' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, CommonWidgetSwitcher_0) == 0x000BD0, "Member 'UTopBarTabButton_C::CommonWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, MID_ButtonBorder) == 0x000BD8, "Member 'UTopBarTabButton_C::MID_ButtonBorder' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, PreviewMobileStyle) == 0x000BE0, "Member 'UTopBarTabButton_C::PreviewMobileStyle' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SpringState_ShapeChange) == 0x000BE4, "Member 'UTopBarTabButton_C::SpringState_ShapeChange' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SpringState_Scale) == 0x000BEC, "Member 'UTopBarTabButton_C::SpringState_Scale' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Spring_Scale_Target) == 0x000BF4, "Member 'UTopBarTabButton_C::Spring_Scale_Target' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, MassMultiply) == 0x000BF8, "Member 'UTopBarTabButton_C::MassMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, DampenMultiply) == 0x000BFC, "Member 'UTopBarTabButton_C::DampenMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, StiffnessMultiply) == 0x000C00, "Member 'UTopBarTabButton_C::StiffnessMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, VisualSelectionState) == 0x000C04, "Member 'UTopBarTabButton_C::VisualSelectionState' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Top) == 0x000C08, "Member 'UTopBarTabButton_C::RandomFloat_Top' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Left) == 0x000C0C, "Member 'UTopBarTabButton_C::RandomFloat_Left' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Right) == 0x000C10, "Member 'UTopBarTabButton_C::RandomFloat_Right' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Bottom) == 0x000C14, "Member 'UTopBarTabButton_C::RandomFloat_Bottom' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ShapeChange_New) == 0x000C18, "Member 'UTopBarTabButton_C::ShapeChange_New' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ShapeChange_Target) == 0x000C1C, "Member 'UTopBarTabButton_C::ShapeChange_Target' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, UpdateSpring) == 0x000C20, "Member 'UTopBarTabButton_C::UpdateSpring' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ButtonText) == 0x000C28, "Member 'UTopBarTabButton_C::ButtonText' has a wrong offset!");

}

