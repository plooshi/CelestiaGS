#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToastWidget_MinorError

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.SetupAnimBindings
// 0x0044 (0x0044 - 0x0000)
struct ToastWidget_MinorError_C_SetupAnimBindings final
{
public:
	bool                                          Unbind;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_536E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ToastWidget_MinorError_C_SetupAnimBindings) == 0x000004, "Wrong alignment on ToastWidget_MinorError_C_SetupAnimBindings");
static_assert(sizeof(ToastWidget_MinorError_C_SetupAnimBindings) == 0x000044, "Wrong size on ToastWidget_MinorError_C_SetupAnimBindings");
static_assert(offsetof(ToastWidget_MinorError_C_SetupAnimBindings, Unbind) == 0x000000, "Member 'ToastWidget_MinorError_C_SetupAnimBindings::Unbind' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ToastWidget_MinorError_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'ToastWidget_MinorError_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'ToastWidget_MinorError_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'ToastWidget_MinorError_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.ApplyAdditionalStyling
// 0x0060 (0x0060 - 0x0000)
struct ToastWidget_MinorError_C_ApplyAdditionalStyling final
{
public:
	class UClass*                                 Temp_class_Variable;                               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_536F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5370[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_3;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5371[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_2;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_ApplyAdditionalStyling) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_ApplyAdditionalStyling");
static_assert(sizeof(ToastWidget_MinorError_C_ApplyAdditionalStyling) == 0x000060, "Wrong size on ToastWidget_MinorError_C_ApplyAdditionalStyling");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable) == 0x000000, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_bool_Variable) == 0x000008, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable_1) == 0x000010, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable_2) == 0x000018, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_bool_Variable_1) == 0x000020, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable_3) == 0x000028, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable_4) == 0x000030, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_class_Variable_5) == 0x000038, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, Temp_bool_Variable_2) == 0x000040, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, K2Node_Select_Default) == 0x000048, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, K2Node_Select_Default_1) == 0x000050, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ApplyAdditionalStyling, K2Node_Select_Default_2) == 0x000058, "Member 'ToastWidget_MinorError_C_ApplyAdditionalStyling::K2Node_Select_Default_2' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.GetOpenButtonVisibility
// 0x0005 (0x0005 - 0x0000)
struct ToastWidget_MinorError_C_GetOpenButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_GetOpenButtonVisibility) == 0x000001, "Wrong alignment on ToastWidget_MinorError_C_GetOpenButtonVisibility");
static_assert(sizeof(ToastWidget_MinorError_C_GetOpenButtonVisibility) == 0x000005, "Wrong size on ToastWidget_MinorError_C_GetOpenButtonVisibility");
static_assert(offsetof(ToastWidget_MinorError_C_GetOpenButtonVisibility, ReturnValue) == 0x000000, "Member 'ToastWidget_MinorError_C_GetOpenButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_GetOpenButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'ToastWidget_MinorError_C_GetOpenButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_GetOpenButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'ToastWidget_MinorError_C_GetOpenButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_GetOpenButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'ToastWidget_MinorError_C_GetOpenButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_GetOpenButtonVisibility, K2Node_Select_Default) == 0x000004, "Member 'ToastWidget_MinorError_C_GetOpenButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.StartIntro
// 0x0008 (0x0008 - 0x0000)
struct ToastWidget_MinorError_C_StartIntro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_StartIntro) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_StartIntro");
static_assert(sizeof(ToastWidget_MinorError_C_StartIntro) == 0x000008, "Wrong size on ToastWidget_MinorError_C_StartIntro");
static_assert(offsetof(ToastWidget_MinorError_C_StartIntro, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'ToastWidget_MinorError_C_StartIntro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.ShowText
// 0x0048 (0x0048 - 0x0000)
struct ToastWidget_MinorError_C_ShowText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UCommonTextBlock*                       TextBlock;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       LocalTextBlock;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LocalText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToastWidget_MinorError_C_ShowText) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_ShowText");
static_assert(sizeof(ToastWidget_MinorError_C_ShowText) == 0x000048, "Wrong size on ToastWidget_MinorError_C_ShowText");
static_assert(offsetof(ToastWidget_MinorError_C_ShowText, Text) == 0x000000, "Member 'ToastWidget_MinorError_C_ShowText::Text' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ShowText, TextBlock) == 0x000018, "Member 'ToastWidget_MinorError_C_ShowText::TextBlock' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ShowText, LocalTextBlock) == 0x000020, "Member 'ToastWidget_MinorError_C_ShowText::LocalTextBlock' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ShowText, LocalText) == 0x000028, "Member 'ToastWidget_MinorError_C_ShowText::LocalText' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ShowText, CallFunc_TextIsEmpty_ReturnValue) == 0x000040, "Member 'ToastWidget_MinorError_C_ShowText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.SetToast
// 0x01E8 (0x01E8 - 0x0000)
struct ToastWidget_MinorError_C_SetToast final
{
public:
	class UFortUINotification*                    Toast;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5372[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5373[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5374[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00B0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0138(0x0088)()
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5375[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01C8(0x0018)()
	ESlateVisibility                              CallFunc_GetOpenButtonVisibility_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_SetToast) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_SetToast");
static_assert(sizeof(ToastWidget_MinorError_C_SetToast) == 0x0001E8, "Wrong size on ToastWidget_MinorError_C_SetToast");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Toast) == 0x000000, "Member 'ToastWidget_MinorError_C_SetToast::Toast' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_int_Variable) == 0x000008, "Member 'ToastWidget_MinorError_C_SetToast::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_text_Variable) == 0x000010, "Member 'ToastWidget_MinorError_C_SetToast::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_text_Variable_1) == 0x000028, "Member 'ToastWidget_MinorError_C_SetToast::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_text_Variable_2) == 0x000040, "Member 'ToastWidget_MinorError_C_SetToast::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_text_Variable_3) == 0x000058, "Member 'ToastWidget_MinorError_C_SetToast::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_text_Variable_4) == 0x000070, "Member 'ToastWidget_MinorError_C_SetToast::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_bool_Variable) == 0x000088, "Member 'ToastWidget_MinorError_C_SetToast::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_byte_Variable) == 0x000089, "Member 'ToastWidget_MinorError_C_SetToast::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, Temp_byte_Variable_1) == 0x00008A, "Member 'ToastWidget_MinorError_C_SetToast::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_MakeStruct_LinearColor) == 0x00008C, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_MakeStruct_LinearColor_1) == 0x00009C, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000AC, "Member 'ToastWidget_MinorError_C_SetToast::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_MakeStruct_SlateBrush) == 0x0000B0, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_MakeStruct_SlateBrush_1) == 0x000138, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001C0, "Member 'ToastWidget_MinorError_C_SetToast::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_Select_Default) == 0x0001C8, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, CallFunc_GetOpenButtonVisibility_ReturnValue) == 0x0001E0, "Member 'ToastWidget_MinorError_C_SetToast::CallFunc_GetOpenButtonVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, CallFunc_TextIsEmpty_ReturnValue) == 0x0001E1, "Member 'ToastWidget_MinorError_C_SetToast::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_SetToast, K2Node_Select_Default_1) == 0x0001E2, "Member 'ToastWidget_MinorError_C_SetToast::K2Node_Select_Default_1' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct ToastWidget_MinorError_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ToastWidget_MinorError_C_OnMouseEnter) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_OnMouseEnter");
static_assert(sizeof(ToastWidget_MinorError_C_OnMouseEnter) == 0x0000A8, "Wrong size on ToastWidget_MinorError_C_OnMouseEnter");
static_assert(offsetof(ToastWidget_MinorError_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ToastWidget_MinorError_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ToastWidget_MinorError_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct ToastWidget_MinorError_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ToastWidget_MinorError_C_OnMouseLeave) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_OnMouseLeave");
static_assert(sizeof(ToastWidget_MinorError_C_OnMouseLeave) == 0x000070, "Wrong size on ToastWidget_MinorError_C_OnMouseLeave");
static_assert(offsetof(ToastWidget_MinorError_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ToastWidget_MinorError_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'ToastWidget_MinorError_C_BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.OnSetToast
// 0x0008 (0x0008 - 0x0000)
struct ToastWidget_MinorError_C_OnSetToast final
{
public:
	class UFortUINotification*                    Param_ToastNotification;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_OnSetToast) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_OnSetToast");
static_assert(sizeof(ToastWidget_MinorError_C_OnSetToast) == 0x000008, "Wrong size on ToastWidget_MinorError_C_OnSetToast");
static_assert(offsetof(ToastWidget_MinorError_C_OnSetToast, Param_ToastNotification) == 0x000000, "Member 'ToastWidget_MinorError_C_OnSetToast::Param_ToastNotification' has a wrong offset!");

// Function ToastWidget_MinorError.ToastWidget_MinorError_C.ExecuteUbergraph_ToastWidget_MinorError
// 0x0150 (0x0150 - 0x0000)
struct ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5376[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0058(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C8(0x0070)(ConstParm)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINotification*                    K2Node_Event_ToastNotification;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError) == 0x000008, "Wrong alignment on ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError");
static_assert(sizeof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError) == 0x000150, "Wrong size on ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, EntryPoint) == 0x000000, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::EntryPoint' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_Event_MyGeometry) == 0x000020, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_Event_MouseEvent_1) == 0x000058, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_Event_MouseEvent) == 0x0000C8, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_ComponentBoundEvent_Button) == 0x000138, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, CallFunc_PlayAnimation_ReturnValue) == 0x000140, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError, K2Node_Event_ToastNotification) == 0x000148, "Member 'ToastWidget_MinorError_C_ExecuteUbergraph_ToastWidget_MinorError::K2Node_Event_ToastNotification' has a wrong offset!");

}

