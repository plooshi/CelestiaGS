#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryPerkInspectionEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryPerkInspectionEntry.AthenaInventoryPerkInspectionEntry_C.ExecuteUbergraph_AthenaInventoryPerkInspectionEntry
// 0x0010 (0x0010 - 0x0000)
struct AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSpyTechItemDefinition*             K2Node_CustomEvent_Spy_Tech_Item_Def;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry) == 0x000008, "Wrong alignment on AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry");
static_assert(sizeof(AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry) == 0x000010, "Wrong size on AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry, EntryPoint) == 0x000000, "Member 'AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry, K2Node_CustomEvent_Spy_Tech_Item_Def) == 0x000008, "Member 'AthenaInventoryPerkInspectionEntry_C_ExecuteUbergraph_AthenaInventoryPerkInspectionEntry::K2Node_CustomEvent_Spy_Tech_Item_Def' has a wrong offset!");

// Function AthenaInventoryPerkInspectionEntry.AthenaInventoryPerkInspectionEntry_C.Set Spy Perk Item Def
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def final
{
public:
	class UFortSpyTechItemDefinition*             Spy_Tech_Item_Def;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def) == 0x000008, "Wrong alignment on AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def");
static_assert(sizeof(AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def) == 0x000008, "Wrong size on AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def, Spy_Tech_Item_Def) == 0x000000, "Member 'AthenaInventoryPerkInspectionEntry_C_Set_Spy_Perk_Item_Def::Spy_Tech_Item_Def' has a wrong offset!");

// Function AthenaInventoryPerkInspectionEntry.AthenaInventoryPerkInspectionEntry_C.Update
// 0x0040 (0x0040 - 0x0000)
struct AthenaInventoryPerkInspectionEntry_C_Update final
{
public:
	class UFortSpyTechItemDefinition*             Param_SpyTechItemDef;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71D8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x0010(0x0028)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryPerkInspectionEntry_C_Update) == 0x000008, "Wrong alignment on AthenaInventoryPerkInspectionEntry_C_Update");
static_assert(sizeof(AthenaInventoryPerkInspectionEntry_C_Update) == 0x000040, "Wrong size on AthenaInventoryPerkInspectionEntry_C_Update");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, Param_SpyTechItemDef) == 0x000000, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::Param_SpyTechItemDef' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, Temp_bool_Variable) == 0x000008, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, CallFunc_GetLargePreviewImage_ReturnValue) == 0x000010, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, Temp_byte_Variable) == 0x000038, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, Temp_byte_Variable_1) == 0x000039, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPerkInspectionEntry_C_Update, K2Node_Select_Default) == 0x00003A, "Member 'AthenaInventoryPerkInspectionEntry_C_Update::K2Node_Select_Default' has a wrong offset!");

}

