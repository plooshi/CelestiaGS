#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterLevel_Audio_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WaterLevel_Audio_Parent.BP_WaterLevel_Audio_Parent_C
// 0x0030 (0x0250 - 0x0220)
class ABP_WaterLevel_Audio_Parent_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ActivatedWaterLevels;                              // 0x0230(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UAudioComponent*                        AudioComponent;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayWaterLevelAudio;                               // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_WaterLevel_Audio_Parent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnReady_73EC889B41CCB2D8976F949F2D6B38F8(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void PlayAudio();
	void StopAudio();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WaterLevel_Audio_Parent_C">();
	}
	static class ABP_WaterLevel_Audio_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WaterLevel_Audio_Parent_C>();
	}
};
static_assert(alignof(ABP_WaterLevel_Audio_Parent_C) == 0x000008, "Wrong alignment on ABP_WaterLevel_Audio_Parent_C");
static_assert(sizeof(ABP_WaterLevel_Audio_Parent_C) == 0x000250, "Wrong size on ABP_WaterLevel_Audio_Parent_C");
static_assert(offsetof(ABP_WaterLevel_Audio_Parent_C, UberGraphFrame) == 0x000220, "Member 'ABP_WaterLevel_Audio_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WaterLevel_Audio_Parent_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_WaterLevel_Audio_Parent_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WaterLevel_Audio_Parent_C, ActivatedWaterLevels) == 0x000230, "Member 'ABP_WaterLevel_Audio_Parent_C::ActivatedWaterLevels' has a wrong offset!");
static_assert(offsetof(ABP_WaterLevel_Audio_Parent_C, AudioComponent) == 0x000240, "Member 'ABP_WaterLevel_Audio_Parent_C::AudioComponent' has a wrong offset!");
static_assert(offsetof(ABP_WaterLevel_Audio_Parent_C, PlayWaterLevelAudio) == 0x000248, "Member 'ABP_WaterLevel_Audio_Parent_C::PlayWaterLevelAudio' has a wrong offset!");

}

