#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwimmingAnimLayerInterface

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingLayer
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingLayer final
{
public:
	struct FPoseLink                              MainPlayerAnimBP;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingLayer;                               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingLayer) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLayer, MainPlayerAnimBP) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingLayer::MainPlayerAnimBP' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLayer, Param_SwimmingLayer) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingLayer::Param_SwimmingLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingMovementAdditiveLayerPose
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose final
{
public:
	struct FPoseLink                              PassThroughSwimmingMovementAdditive;               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingMovementAdditiveLayerPose;           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose, PassThroughSwimmingMovementAdditive) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose::PassThroughSwimmingMovementAdditive' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose, Param_SwimmingMovementAdditiveLayerPose) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose::Param_SwimmingMovementAdditiveLayerPose' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingSprintLayer
// 0x0028 (0x0028 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingSprintLayer final
{
public:
	struct FPoseLink                              PassThroughSwimmingSprint;                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsHidingInPropLayer;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5832[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              Param_SwimmingSprintLayer;                         // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingSprintLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingSprintLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingSprintLayer) == 0x000028, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingSprintLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingSprintLayer, PassThroughSwimmingSprint) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingSprintLayer::PassThroughSwimmingSprint' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingSprintLayer, IsHidingInPropLayer) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingSprintLayer::IsHidingInPropLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingSprintLayer, Param_SwimmingSprintLayer) == 0x000018, "Member 'SwimmingAnimLayerInterface_C_SwimmingSprintLayer::Param_SwimmingSprintLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingUpperBodyPoseTargetingLayer
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer final
{
public:
	struct FPoseLink                              PassThroughSwimmingUpperBodyPoseTargeting;         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingUpperBodyPoseTargetingLayer;         // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer, PassThroughSwimmingUpperBodyPoseTargeting) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer::PassThroughSwimmingUpperBodyPoseTargeting' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer, Param_SwimmingUpperBodyPoseTargetingLayer) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseTargetingLayer::Param_SwimmingUpperBodyPoseTargetingLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingUpperBodyPoseNonTargetingLayer
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer final
{
public:
	struct FPoseLink                              PassThroughSwimmingUpperBodyPoseNonTargeting;      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingUpperBodyPoseNonTargetingLayer;      // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer, PassThroughSwimmingUpperBodyPoseNonTargeting) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer::PassThroughSwimmingUpperBodyPoseNonTargeting' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer, Param_SwimmingUpperBodyPoseNonTargetingLayer) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPoseNonTargetingLayer::Param_SwimmingUpperBodyPoseNonTargetingLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingLowerBodyLayer
// 0x0040 (0x0040 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer final
{
public:
	struct FPoseLink                              UpperBody_Cache;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              PreUpperBodySlot_Cache;                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              PassThroughSwimmingLowerBody;                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingLowerBodyLayer;                      // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer) == 0x000040, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, UpperBody_Cache) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::UpperBody_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, PreUpperBodySlot_Cache) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::PreUpperBodySlot_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, PassThroughSwimmingLowerBody) == 0x000020, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::PassThroughSwimmingLowerBody' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, Param_SwimmingLowerBodyLayer) == 0x000030, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::Param_SwimmingLowerBodyLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingAdditiveLayer
// 0x0078 (0x0078 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer final
{
public:
	struct FPoseLink                              IdleAdditive_Cache;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MovementAdditiveLayerPose_Cache;                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FullBody;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         PlayMeleeAttackAOLayer;                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisableArmsHeadAdditiveCurveAlphaLayer;            // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisableIKRootAdditiveCurveAlphaLayer;              // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionAdditiveAlphaLayer;                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MainInstanceAdditiveLayerAlpha;                    // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5833[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              UpperAndLowerBody_Cache;                           // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SprintingPose_PostMask_Cache;                      // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingAdditiveLayer;                       // 0x0068(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer) == 0x000078, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, IdleAdditive_Cache) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::IdleAdditive_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, MovementAdditiveLayerPose_Cache) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::MovementAdditiveLayerPose_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, FullBody) == 0x000020, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::FullBody' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, PlayMeleeAttackAOLayer) == 0x000030, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::PlayMeleeAttackAOLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, DisableArmsHeadAdditiveCurveAlphaLayer) == 0x000034, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::DisableArmsHeadAdditiveCurveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, DisableIKRootAdditiveCurveAlphaLayer) == 0x000038, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::DisableIKRootAdditiveCurveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, LocomotionAdditiveAlphaLayer) == 0x00003C, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::LocomotionAdditiveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, MainInstanceAdditiveLayerAlpha) == 0x000040, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::MainInstanceAdditiveLayerAlpha' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, UpperAndLowerBody_Cache) == 0x000048, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::UpperAndLowerBody_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, SprintingPose_PostMask_Cache) == 0x000058, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::SprintingPose_PostMask_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, Param_SwimmingAdditiveLayer) == 0x000068, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::Param_SwimmingAdditiveLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingFullBodyAdditiveLayer
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer final
{
public:
	struct FPoseLink                              PassThroughFullBodyAdditive;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_SwimmingFullBodyAdditiveLayer;               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer, PassThroughFullBodyAdditive) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer::PassThroughFullBodyAdditive' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer, Param_SwimmingFullBodyAdditiveLayer) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingFullBodyAdditiveLayer::Param_SwimmingFullBodyAdditiveLayer' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingDiveJumpingLayer
// 0x0030 (0x0030 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer final
{
public:
	struct FPoseLink                              PassThroughSwimmingDiveJumping;                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsHidingInPropLayer2;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5834[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MainInstanceDiveJumpLayerAlpha;                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortPlayerAnimBodyType                       AnimBodyTypePassThrough;                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5835[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              Param_SwimmingDiveJumpingLayer;                    // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer) == 0x000030, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, PassThroughSwimmingDiveJumping) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::PassThroughSwimmingDiveJumping' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, IsHidingInPropLayer2) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::IsHidingInPropLayer2' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, MainInstanceDiveJumpLayerAlpha) == 0x000014, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::MainInstanceDiveJumpLayerAlpha' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, AnimBodyTypePassThrough) == 0x000018, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::AnimBodyTypePassThrough' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, Param_SwimmingDiveJumpingLayer) == 0x000020, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::Param_SwimmingDiveJumpingLayer' has a wrong offset!");

}

