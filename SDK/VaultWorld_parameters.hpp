#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultWorld

#include "Basic.hpp"


namespace SDK::Params
{

// Function VaultWorld.VaultWorld_C.GetVaultRotator
// 0x0018 (0x0018 - 0x0000)
struct VaultWorld_C_GetVaultRotator final
{
public:
	class AVaultRotator_C*                        VaultRotator;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVaultRotator_C*                        K2Node_DynamicCast_AsVault_Rotator;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VaultWorld_C_GetVaultRotator) == 0x000008, "Wrong alignment on VaultWorld_C_GetVaultRotator");
static_assert(sizeof(VaultWorld_C_GetVaultRotator) == 0x000018, "Wrong size on VaultWorld_C_GetVaultRotator");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, VaultRotator) == 0x000000, "Member 'VaultWorld_C_GetVaultRotator::VaultRotator' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, K2Node_DynamicCast_AsVault_Rotator) == 0x000008, "Member 'VaultWorld_C_GetVaultRotator::K2Node_DynamicCast_AsVault_Rotator' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'VaultWorld_C_GetVaultRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.ExecuteUbergraph_VaultWorld
// 0x0020 (0x0020 - 0x0000)
struct VaultWorld_C_ExecuteUbergraph_VaultWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortStaticMeshActor*                   K2Node_DynamicCast_AsFort_Static_Mesh_Actor;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7CA7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_ExecuteUbergraph_VaultWorld) == 0x000008, "Wrong alignment on VaultWorld_C_ExecuteUbergraph_VaultWorld");
static_assert(sizeof(VaultWorld_C_ExecuteUbergraph_VaultWorld) == 0x000020, "Wrong size on VaultWorld_C_ExecuteUbergraph_VaultWorld");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, EntryPoint) == 0x000000, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_DynamicCast_AsFort_Static_Mesh_Actor) == 0x000008, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_DynamicCast_AsFort_Static_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

