#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Petrol_Pump_Handle

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_Petrol_Pump_Handle.B_Petrol_Pump_Handle_C.ExecuteUbergraph_B_Petrol_Pump_Handle
// 0x0028 (0x0028 - 0x0000)
struct B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67AA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    K2Node_Event_SpawnProjectile;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSecondaryFire;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67AB[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPreviousSource_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle) == 0x000008, "Wrong alignment on B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle");
static_assert(sizeof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle) == 0x000028, "Wrong size on B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, EntryPoint) == 0x000000, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, K2Node_Event_SpawnProjectile) == 0x000008, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::K2Node_Event_SpawnProjectile' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, K2Node_Event_bPersistentFire) == 0x000010, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::K2Node_Event_bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, K2Node_Event_bSecondaryFire) == 0x000011, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::K2Node_Event_bSecondaryFire' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000018, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle, CallFunc_AddPreviousSource_ReturnValue) == 0x000020, "Member 'B_Petrol_Pump_Handle_C_ExecuteUbergraph_B_Petrol_Pump_Handle::CallFunc_AddPreviousSource_ReturnValue' has a wrong offset!");

// Function B_Petrol_Pump_Handle.B_Petrol_Pump_Handle_C.OnPlayWeaponFireFX
// 0x0002 (0x0002 - 0x0000)
struct B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSecondaryFire;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX) == 0x000002, "Wrong size on B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX, bSecondaryFire) == 0x000001, "Member 'B_Petrol_Pump_Handle_C_OnPlayWeaponFireFX::bSecondaryFire' has a wrong offset!");

// Function B_Petrol_Pump_Handle.B_Petrol_Pump_Handle_C.OnSpawnProjectile
// 0x0008 (0x0008 - 0x0000)
struct B_Petrol_Pump_Handle_C_OnSpawnProjectile final
{
public:
	class AFortProjectileBase*                    SpawnProjectile;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Petrol_Pump_Handle_C_OnSpawnProjectile) == 0x000008, "Wrong alignment on B_Petrol_Pump_Handle_C_OnSpawnProjectile");
static_assert(sizeof(B_Petrol_Pump_Handle_C_OnSpawnProjectile) == 0x000008, "Wrong size on B_Petrol_Pump_Handle_C_OnSpawnProjectile");
static_assert(offsetof(B_Petrol_Pump_Handle_C_OnSpawnProjectile, SpawnProjectile) == 0x000000, "Member 'B_Petrol_Pump_Handle_C_OnSpawnProjectile::SpawnProjectile' has a wrong offset!");

}

