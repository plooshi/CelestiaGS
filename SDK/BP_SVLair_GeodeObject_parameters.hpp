#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SVLair_GeodeObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SVLair_GeodeObject.BP_SVLair_GeodeObject_C.ExecuteUbergraph_BP_SVLair_GeodeObject
// 0x0128 (0x0128 - 0x0000)
struct BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_82A7[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_AuthorityMatchReady*   CallFunc_MatchReadyAsync_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_2;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_2;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_2;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_2;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82A9[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_1;                    // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_1;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_1;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_1;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_82AA[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable;                              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable_1;                            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AB[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_82AC[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject) == 0x000008, "Wrong alignment on BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject");
static_assert(sizeof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject) == 0x000128, "Wrong size on BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, EntryPoint) == 0x000000, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_MatchReadyAsync_ReturnValue) == 0x000018, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_MatchReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_EventName_2) == 0x000038, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_EventName_2' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeUntilEnd_2) == 0x000048, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeUntilEnd_2' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSinceBegin_2) == 0x000050, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSinceBegin_2' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSpanRatio_2) == 0x000058, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSpanRatio_2' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_EventName_1) == 0x000060, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeUntilEnd_1) == 0x000070, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeUntilEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSinceBegin_1) == 0x000078, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSinceBegin_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSpanRatio_1) == 0x000080, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSpanRatio_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CreateDelegate_OutputDelegate_2) == 0x000084, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_EventName) == 0x000098, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeUntilEnd) == 0x0000A8, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSinceBegin) == 0x0000B0, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CustomEvent_TimeSpanRatio) == 0x0000B8, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CustomEvent_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000BC, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, Temp_float_Variable) == 0x0000CC, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, Temp_struct_Variable) == 0x0000D0, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, Temp_struct_Variable_1) == 0x0000D8, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, Temp_string_Variable) == 0x0000E0, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_GetTotalSeconds_ReturnValue) == 0x0000F0, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000FC, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000110, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_WatchCalendarEvent_ReturnValue) == 0x000118, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_WatchCalendarEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_SVLair_GeodeObject_C_ExecuteUbergraph_BP_SVLair_GeodeObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SVLair_GeodeObject.BP_SVLair_GeodeObject_C.OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E
// 0x0028 (0x0028 - 0x0000)
struct BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000008, "Wrong alignment on BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(sizeof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000028, "Wrong size on BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E, EventName) == 0x000000, "Member 'BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E::EventName' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeUntilEnd) == 0x000010, "Member 'BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeSinceBegin) == 0x000018, "Member 'BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimespanRatio) == 0x000020, "Member 'BP_SVLair_GeodeObject_C_OnEventActive_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimespanRatio' has a wrong offset!");

// Function BP_SVLair_GeodeObject.BP_SVLair_GeodeObject_C.OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E
// 0x0028 (0x0028 - 0x0000)
struct BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000008, "Wrong alignment on BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(sizeof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000028, "Wrong size on BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E, EventName) == 0x000000, "Member 'BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E::EventName' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeUntilEnd) == 0x000010, "Member 'BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeSinceBegin) == 0x000018, "Member 'BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimespanRatio) == 0x000020, "Member 'BP_SVLair_GeodeObject_C_OnEventUpdated_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimespanRatio' has a wrong offset!");

// Function BP_SVLair_GeodeObject.BP_SVLair_GeodeObject_C.OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E
// 0x0028 (0x0028 - 0x0000)
struct BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000008, "Wrong alignment on BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(sizeof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E) == 0x000028, "Wrong size on BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E, EventName) == 0x000000, "Member 'BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E::EventName' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeUntilEnd) == 0x000010, "Member 'BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimeSinceBegin) == 0x000018, "Member 'BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E, TimespanRatio) == 0x000020, "Member 'BP_SVLair_GeodeObject_C_OnEventEnded_D977B8A24E2BAC39BF0E798FD5E6CF3E::TimespanRatio' has a wrong offset!");

}

