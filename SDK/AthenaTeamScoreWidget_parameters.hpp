#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaTeamScoreWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.UpdateLeaderboard
// 0x00F8 (0x00F8 - 0x0000)
struct AthenaTeamScoreWidget_C_UpdateLeaderboard final
{
public:
	int32                                         PointsDelta;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsWinner;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasScore;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F45[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F46[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0060(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F47[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00D0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F48[0x5];                                     // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_UpdateLeaderboard) == 0x000008, "Wrong alignment on AthenaTeamScoreWidget_C_UpdateLeaderboard");
static_assert(sizeof(AthenaTeamScoreWidget_C_UpdateLeaderboard) == 0x0000F8, "Wrong size on AthenaTeamScoreWidget_C_UpdateLeaderboard");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, PointsDelta) == 0x000000, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::PointsDelta' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, Param_IsWinner) == 0x000004, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::Param_IsWinner' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, HasScore) == 0x000005, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::HasScore' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_Abs_Int_ReturnValue) == 0x000048, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, K2Node_MakeArray_Array) == 0x000050, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, K2Node_MakeStruct_FormatArgumentData_1) == 0x000060, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, K2Node_MakeArray_Array_1) == 0x0000B8, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_Format_ReturnValue_1) == 0x0000D0, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E9, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_BooleanOR_ReturnValue) == 0x0000EA, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateLeaderboard, CallFunc_PlayAnimation_ReturnValue) == 0x0000F0, "Member 'AthenaTeamScoreWidget_C_UpdateLeaderboard::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.UpdatePlacement
// 0x0148 (0x0148 - 0x0000)
struct AthenaTeamScoreWidget_C_UpdatePlacement final
{
public:
	int32                                         Place;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F49[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F4B[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4C[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00F0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F4D[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x0120(0x0018)()
	class UClass*                                 K2Node_Select_Default_3;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_UpdatePlacement) == 0x000008, "Wrong alignment on AthenaTeamScoreWidget_C_UpdatePlacement");
static_assert(sizeof(AthenaTeamScoreWidget_C_UpdatePlacement) == 0x000148, "Wrong size on AthenaTeamScoreWidget_C_UpdatePlacement");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Place) == 0x000000, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Place' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Instant) == 0x000004, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Instant' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable) == 0x000008, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_1) == 0x00002C, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_class_Variable) == 0x000030, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_class_Variable_1) == 0x000038, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_class_Variable_2) == 0x000040, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_class_Variable_3) == 0x000048, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_class_Variable_4) == 0x000050, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_2) == 0x000058, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_3) == 0x00005C, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_4) == 0x000060, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_5) == 0x000064, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_6) == 0x000068, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_7) == 0x00006C, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_int_Variable_8) == 0x000070, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable) == 0x000078, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable_1) == 0x000090, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable_2) == 0x0000A8, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable_3) == 0x0000C0, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable_4) == 0x0000D8, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_text_Variable_5) == 0x0000F0, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_bool_Variable) == 0x000108, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_byte_Variable) == 0x000109, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_byte_Variable_1) == 0x00010A, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, Temp_bool_Variable_1) == 0x00010B, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_PlayAnimation_ReturnValue) == 0x000110, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, K2Node_Select_Default) == 0x00011B, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, K2Node_Select_Default_1) == 0x00011C, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, K2Node_Select_Default_2) == 0x000120, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, K2Node_Select_Default_3) == 0x000138, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdatePlacement, K2Node_Select_Default_4) == 0x000140, "Member 'AthenaTeamScoreWidget_C_UpdatePlacement::K2Node_Select_Default_4' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.UpdateScore
// 0x0090 (0x0090 - 0x0000)
struct AthenaTeamScoreWidget_C_UpdateScore final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4F[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F50[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_UpdateScore) == 0x000008, "Wrong alignment on AthenaTeamScoreWidget_C_UpdateScore");
static_assert(sizeof(AthenaTeamScoreWidget_C_UpdateScore) == 0x000090, "Wrong size on AthenaTeamScoreWidget_C_UpdateScore");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, Score) == 0x000000, "Member 'AthenaTeamScoreWidget_C_UpdateScore::Score' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'AthenaTeamScoreWidget_C_UpdateScore::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, K2Node_MakeArray_Array) == 0x000048, "Member 'AthenaTeamScoreWidget_C_UpdateScore::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_Format_ReturnValue) == 0x000060, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000078, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000088, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_UpdateScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00008C, "Member 'AthenaTeamScoreWidget_C_UpdateScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.OnPlacementChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaTeamScoreWidget_C_OnPlacementChanged final
{
public:
	int32                                         Placement;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_OnPlacementChanged) == 0x000004, "Wrong alignment on AthenaTeamScoreWidget_C_OnPlacementChanged");
static_assert(sizeof(AthenaTeamScoreWidget_C_OnPlacementChanged) == 0x000004, "Wrong size on AthenaTeamScoreWidget_C_OnPlacementChanged");
static_assert(offsetof(AthenaTeamScoreWidget_C_OnPlacementChanged, Placement) == 0x000000, "Member 'AthenaTeamScoreWidget_C_OnPlacementChanged::Placement' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.OnScoreChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaTeamScoreWidget_C_OnScoreChanged final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_OnScoreChanged) == 0x000004, "Wrong alignment on AthenaTeamScoreWidget_C_OnScoreChanged");
static_assert(sizeof(AthenaTeamScoreWidget_C_OnScoreChanged) == 0x000004, "Wrong size on AthenaTeamScoreWidget_C_OnScoreChanged");
static_assert(offsetof(AthenaTeamScoreWidget_C_OnScoreChanged, Score) == 0x000000, "Member 'AthenaTeamScoreWidget_C_OnScoreChanged::Score' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaTeamScoreWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamScoreWidget_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaTeamScoreWidget_C_PreConstruct");
static_assert(sizeof(AthenaTeamScoreWidget_C_PreConstruct) == 0x000001, "Wrong size on AthenaTeamScoreWidget_C_PreConstruct");
static_assert(offsetof(AthenaTeamScoreWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaTeamScoreWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.OnLeaderboardChanged
// 0x0008 (0x0008 - 0x0000)
struct AthenaTeamScoreWidget_C_OnLeaderboardChanged final
{
public:
	int32                                         ScoreDelta;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWinner;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasScore;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamScoreWidget_C_OnLeaderboardChanged) == 0x000004, "Wrong alignment on AthenaTeamScoreWidget_C_OnLeaderboardChanged");
static_assert(sizeof(AthenaTeamScoreWidget_C_OnLeaderboardChanged) == 0x000008, "Wrong size on AthenaTeamScoreWidget_C_OnLeaderboardChanged");
static_assert(offsetof(AthenaTeamScoreWidget_C_OnLeaderboardChanged, ScoreDelta) == 0x000000, "Member 'AthenaTeamScoreWidget_C_OnLeaderboardChanged::ScoreDelta' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_OnLeaderboardChanged, bIsWinner) == 0x000004, "Member 'AthenaTeamScoreWidget_C_OnLeaderboardChanged::bIsWinner' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_OnLeaderboardChanged, bHasScore) == 0x000005, "Member 'AthenaTeamScoreWidget_C_OnLeaderboardChanged::bHasScore' has a wrong offset!");

// Function AthenaTeamScoreWidget.AthenaTeamScoreWidget_C.ExecuteUbergraph_AthenaTeamScoreWidget
// 0x0030 (0x0030 - 0x0000)
struct AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ScoreDelta;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsWinner;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasScore;                            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F51[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Score;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F52[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Placement;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget) == 0x000008, "Wrong alignment on AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget");
static_assert(sizeof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget) == 0x000030, "Wrong size on AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, EntryPoint) == 0x000000, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_ScoreDelta) == 0x000004, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_ScoreDelta' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_bIsWinner) == 0x000008, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_bIsWinner' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_bHasScore) == 0x000009, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_bHasScore' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_Score) == 0x00000C, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_IsDesignTime) == 0x000018, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000020, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget, K2Node_Event_Placement) == 0x000028, "Member 'AthenaTeamScoreWidget_C_ExecuteUbergraph_AthenaTeamScoreWidget::K2Node_Event_Placement' has a wrong offset!");

}

