#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MANG_PatrolLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MANG_PatrolLayerAnimBP.MANG_PatrolLayerAnimBP_C
// 0x0DF0 (0x1110 - 0x0320)
class UMANG_PatrolLayerAnimBP_C final : public UFortPatrolAnimLayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0328(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0358(0x0088)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x03E0(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0410(0x0088)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0498(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0588(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x05B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0628(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0650(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0678(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0758(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0818(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0840(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0870(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0898(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x08C8(0x00E0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x09A8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A70(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0B30(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0B58(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C38(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0C68(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C90(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D58(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0DD0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E00(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0EB0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0F78(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0FA0(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1018(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x10E0(0x0030)()

public:
	void ExecuteUbergraph_MANG_PatrolLayerAnimBP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void FullBodyOverride(const struct FPoseLink& PassThroughFullBodyPose, struct FPoseLink* Param_FullBodyOverride);
	void CharacterSkeletalControlPostLegIK(const struct FPoseLink& InPosePostLegIK, struct FPoseLink* Param_CharacterSkeletalControlPostLegIK);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MANG_PatrolLayerAnimBP_C">();
	}
	static class UMANG_PatrolLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMANG_PatrolLayerAnimBP_C>();
	}
};
static_assert(alignof(UMANG_PatrolLayerAnimBP_C) == 0x000010, "Wrong alignment on UMANG_PatrolLayerAnimBP_C");
static_assert(sizeof(UMANG_PatrolLayerAnimBP_C) == 0x001110, "Wrong size on UMANG_PatrolLayerAnimBP_C");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, UberGraphFrame) == 0x000320, "Member 'UMANG_PatrolLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root_2) == 0x000328, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x000358, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root_1) == 0x0003E0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x000410, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x000498, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000538, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000560, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000588, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0005B0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0005D8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000600, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000628, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000650, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000678, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000758, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x000818, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x000840, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x000870, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x000898, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0008C8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x0009A8, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000A70, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x000B30, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000B58, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x000C38, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x000C68, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000C90, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000D58, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateResult) == 0x000DD0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x000E00, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x000EB0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x000F78, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000FA0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001018, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UMANG_PatrolLayerAnimBP_C, AnimGraphNode_Root) == 0x0010E0, "Member 'UMANG_PatrolLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");

}

