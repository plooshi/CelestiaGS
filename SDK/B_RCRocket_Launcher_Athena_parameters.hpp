#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RCRocket_Launcher_Athena

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_RCRocket_Launcher_Athena.B_RCRocket_Launcher_Athena_C.ExecuteUbergraph_B_RCRocket_Launcher_Athena
// 0x0008 (0x0008 - 0x0000)
struct B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bVisible;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSetForLocalControllerOnly;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena) == 0x000004, "Wrong alignment on B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena");
static_assert(sizeof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena) == 0x000008, "Wrong size on B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena, EntryPoint) == 0x000000, "Member 'B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena, K2Node_Event_bVisible) == 0x000005, "Member 'B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena, K2Node_Event_bSetForLocalControllerOnly) == 0x000006, "Member 'B_RCRocket_Launcher_Athena_C_ExecuteUbergraph_B_RCRocket_Launcher_Athena::K2Node_Event_bSetForLocalControllerOnly' has a wrong offset!");

// Function B_RCRocket_Launcher_Athena.B_RCRocket_Launcher_Athena_C.OnWeaponVisibilityChanged
// 0x0002 (0x0002 - 0x0000)
struct B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSetForLocalControllerOnly;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged) == 0x000001, "Wrong alignment on B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged");
static_assert(sizeof(B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged) == 0x000002, "Wrong size on B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged, bVisible) == 0x000000, "Member 'B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged::bVisible' has a wrong offset!");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged, bSetForLocalControllerOnly) == 0x000001, "Member 'B_RCRocket_Launcher_Athena_C_OnWeaponVisibilityChanged::bSetForLocalControllerOnly' has a wrong offset!");

// Function B_RCRocket_Launcher_Athena.B_RCRocket_Launcher_Athena_C.IsCachedIsProjectileWeapon
// 0x0001 (0x0001 - 0x0000)
struct B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon) == 0x000001, "Wrong alignment on B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon");
static_assert(sizeof(B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon) == 0x000001, "Wrong size on B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon");
static_assert(offsetof(B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon, ReturnValue) == 0x000000, "Member 'B_RCRocket_Launcher_Athena_C_IsCachedIsProjectileWeapon::ReturnValue' has a wrong offset!");

}

