#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValetUI

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// Class ValetUI.FortAthenaVehicleFuelWidget
// 0x0070 (0x0308 - 0x0298)
class UFortAthenaVehicleFuelWidget final : public UFortHUDElementWidget
{
public:
	bool                                          bIsWidgetShowing;                                  // 0x0298(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4290[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentVehicleActor;                               // 0x02A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AddedFuelTimer;                                    // 0x02A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentSpeed;                                      // 0x02AC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetFuelPercent;                                 // 0x02B0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DisplayedFuelPercent;                              // 0x02B4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FillBlendSpeed;                                    // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AddedFuelShowDuration;                             // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4291[0x4];                                     // 0x02C0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowFuelThreshold;                                  // 0x02C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SpeedTextMaxInterpolationRate;                     // 0x02C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4292[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  WidgetTagsToHideWhenVisible;                       // 0x02D0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4293[0x8];                                     // 0x02F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonNumericTextBlock*                NumericText_Speed;                                 // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ItemName;                                     // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnAddedFuel(float NewFuelPercent);
	void OnBoostFinished();
	void OnBoostStarted();
	void OnLowInFuel();
	void OnOutOfFuel();
	void OnRechargableBoostFilled();
	void OnUpdateRechargeableBoostPercent(float BoostPercent);
	void OnValetNameUpdated();
	void SetupVehicleFuelWidget(class AActor* NewVehicle, const bool bRequestShowWidget);
	void SetVehicleProperties(bool bInfiniteFuel, bool bUsesRechargeableBoost);
	void ShowNoFuelMessage();
	void UpdateFuelWidgetVisibilities(bool bIsLowOnFuel);
	void UpdateRPMMeter(float NormalizedRPM);
	void UpdateSecondaryMeter(float FuelPercentage, bool bIsLowOnFuel);
	void UpdateSpeedometer(float NormalizedSpeed);

	class AFortDagwoodVehicle* GetDagwoodVehicle() const;
	class AActor* GetVehicle() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaVehicleFuelWidget">();
	}
	static class UFortAthenaVehicleFuelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAthenaVehicleFuelWidget>();
	}
};
static_assert(alignof(UFortAthenaVehicleFuelWidget) == 0x000008, "Wrong alignment on UFortAthenaVehicleFuelWidget");
static_assert(sizeof(UFortAthenaVehicleFuelWidget) == 0x000308, "Wrong size on UFortAthenaVehicleFuelWidget");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, bIsWidgetShowing) == 0x000298, "Member 'UFortAthenaVehicleFuelWidget::bIsWidgetShowing' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, CurrentVehicleActor) == 0x0002A0, "Member 'UFortAthenaVehicleFuelWidget::CurrentVehicleActor' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, AddedFuelTimer) == 0x0002A8, "Member 'UFortAthenaVehicleFuelWidget::AddedFuelTimer' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, CurrentSpeed) == 0x0002AC, "Member 'UFortAthenaVehicleFuelWidget::CurrentSpeed' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, TargetFuelPercent) == 0x0002B0, "Member 'UFortAthenaVehicleFuelWidget::TargetFuelPercent' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, DisplayedFuelPercent) == 0x0002B4, "Member 'UFortAthenaVehicleFuelWidget::DisplayedFuelPercent' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, FillBlendSpeed) == 0x0002B8, "Member 'UFortAthenaVehicleFuelWidget::FillBlendSpeed' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, AddedFuelShowDuration) == 0x0002BC, "Member 'UFortAthenaVehicleFuelWidget::AddedFuelShowDuration' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, LowFuelThreshold) == 0x0002C4, "Member 'UFortAthenaVehicleFuelWidget::LowFuelThreshold' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, SpeedTextMaxInterpolationRate) == 0x0002C8, "Member 'UFortAthenaVehicleFuelWidget::SpeedTextMaxInterpolationRate' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, WidgetTagsToHideWhenVisible) == 0x0002D0, "Member 'UFortAthenaVehicleFuelWidget::WidgetTagsToHideWhenVisible' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, NumericText_Speed) == 0x0002F8, "Member 'UFortAthenaVehicleFuelWidget::NumericText_Speed' has a wrong offset!");
static_assert(offsetof(UFortAthenaVehicleFuelWidget, Text_ItemName) == 0x000300, "Member 'UFortAthenaVehicleFuelWidget::Text_ItemName' has a wrong offset!");

// Class ValetUI.FortMobileActionButtonBehavior_ValetBoost
// 0x0008 (0x00B8 - 0x00B0)
class UFortMobileActionButtonBehavior_ValetBoost : public UFortMobileActionButtonBehavior
{
public:
	uint8                                         Pad_4296[0x8];                                     // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMobileActionButtonBehavior_ValetBoost">();
	}
	static class UFortMobileActionButtonBehavior_ValetBoost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMobileActionButtonBehavior_ValetBoost>();
	}
};
static_assert(alignof(UFortMobileActionButtonBehavior_ValetBoost) == 0x000008, "Wrong alignment on UFortMobileActionButtonBehavior_ValetBoost");
static_assert(sizeof(UFortMobileActionButtonBehavior_ValetBoost) == 0x0000B8, "Wrong size on UFortMobileActionButtonBehavior_ValetBoost");

}

