#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_ClockHandSet_Parent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Prop_ClockHandSet_Parent.Prop_ClockHandSet_Parent_C.ExecuteUbergraph_Prop_ClockHandSet_Parent
// 0x0008 (0x0008 - 0x0000)
struct Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent) == 0x000004, "Wrong alignment on Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent");
static_assert(sizeof(Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent) == 0x000008, "Wrong size on Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent, EntryPoint) == 0x000000, "Member 'Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'Prop_ClockHandSet_Parent_C_ExecuteUbergraph_Prop_ClockHandSet_Parent::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Prop_ClockHandSet_Parent.Prop_ClockHandSet_Parent_C.SetTime
// 0x0178 (0x0178 - 0x0000)
struct Prop_ClockHandSet_Parent_C_SetTime final
{
public:
	class UStaticMeshComponent*                   CallFunc_GetMinHand_Hand;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetHourHand_Hand;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83DF[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeOfDay_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeOfDay_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0060(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00EC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_ClockHandSet_Parent_C_SetTime) == 0x000008, "Wrong alignment on Prop_ClockHandSet_Parent_C_SetTime");
static_assert(sizeof(Prop_ClockHandSet_Parent_C_SetTime) == 0x000178, "Wrong size on Prop_ClockHandSet_Parent_C_SetTime");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_GetMinHand_Hand) == 0x000000, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_GetMinHand_Hand' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_GetHourHand_Hand) == 0x000008, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_GetHourHand_Hand' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_GetTimeOfDay_ReturnValue) == 0x000014, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_GetTimeOfDay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_GetTimeOfDay_ReturnValue_1) == 0x000018, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_GetTimeOfDay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_FMod_Remainder) == 0x00001C, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_FMod_ReturnValue) == 0x000020, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_MakeRotator_ReturnValue_1) == 0x00003C, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_ComposeRotators_ReturnValue) == 0x000048, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_ComposeRotators_ReturnValue_1) == 0x000054, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000060, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_SetTime, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000EC, "Member 'Prop_ClockHandSet_Parent_C_SetTime::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function Prop_ClockHandSet_Parent.Prop_ClockHandSet_Parent_C.GetHourHand
// 0x0008 (0x0008 - 0x0000)
struct Prop_ClockHandSet_Parent_C_GetHourHand final
{
public:
	class UStaticMeshComponent*                   Hand;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ClockHandSet_Parent_C_GetHourHand) == 0x000008, "Wrong alignment on Prop_ClockHandSet_Parent_C_GetHourHand");
static_assert(sizeof(Prop_ClockHandSet_Parent_C_GetHourHand) == 0x000008, "Wrong size on Prop_ClockHandSet_Parent_C_GetHourHand");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_GetHourHand, Hand) == 0x000000, "Member 'Prop_ClockHandSet_Parent_C_GetHourHand::Hand' has a wrong offset!");

// Function Prop_ClockHandSet_Parent.Prop_ClockHandSet_Parent_C.GetMinHand
// 0x0008 (0x0008 - 0x0000)
struct Prop_ClockHandSet_Parent_C_GetMinHand final
{
public:
	class UStaticMeshComponent*                   Hand;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ClockHandSet_Parent_C_GetMinHand) == 0x000008, "Wrong alignment on Prop_ClockHandSet_Parent_C_GetMinHand");
static_assert(sizeof(Prop_ClockHandSet_Parent_C_GetMinHand) == 0x000008, "Wrong size on Prop_ClockHandSet_Parent_C_GetMinHand");
static_assert(offsetof(Prop_ClockHandSet_Parent_C_GetMinHand, Hand) == 0x000000, "Member 'Prop_ClockHandSet_Parent_C_GetMinHand::Hand' has a wrong offset!");

}

