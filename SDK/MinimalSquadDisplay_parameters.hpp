#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimalSquadDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function MinimalSquadDisplay.MinimalSquadDisplay_C.OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB
// 0x0008 (0x0008 - 0x0000)
struct MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB) == 0x000008, "Wrong alignment on MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB");
static_assert(sizeof(MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB) == 0x000008, "Wrong size on MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB");
static_assert(offsetof(MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB, Loaded) == 0x000000, "Member 'MinimalSquadDisplay_C_OnLoaded_1B34C3FE47597A4DBA2DA7AFCF8744FB::Loaded' has a wrong offset!");

// Function MinimalSquadDisplay.MinimalSquadDisplay_C.OnLoaded_86B795124D19C878C8559FA7E78726E0
// 0x0008 (0x0008 - 0x0000)
struct MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0) == 0x000008, "Wrong alignment on MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0");
static_assert(sizeof(MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0) == 0x000008, "Wrong size on MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0");
static_assert(offsetof(MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0, Loaded) == 0x000000, "Member 'MinimalSquadDisplay_C_OnLoaded_86B795124D19C878C8559FA7E78726E0::Loaded' has a wrong offset!");

// Function MinimalSquadDisplay.MinimalSquadDisplay_C.OnSquadAssigned
// 0x0088 (0x0088 - 0x0000)
struct MinimalSquadDisplay_C_OnSquadAssigned final
{
public:
	struct FAthenaTeamDisplayInfo                 SquadStyle;                                        // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MinimalSquadDisplay_C_OnSquadAssigned) == 0x000008, "Wrong alignment on MinimalSquadDisplay_C_OnSquadAssigned");
static_assert(sizeof(MinimalSquadDisplay_C_OnSquadAssigned) == 0x000088, "Wrong size on MinimalSquadDisplay_C_OnSquadAssigned");
static_assert(offsetof(MinimalSquadDisplay_C_OnSquadAssigned, SquadStyle) == 0x000000, "Member 'MinimalSquadDisplay_C_OnSquadAssigned::SquadStyle' has a wrong offset!");

// Function MinimalSquadDisplay.MinimalSquadDisplay_C.OnSquadIsEmptyChanged
// 0x0002 (0x0002 - 0x0000)
struct MinimalSquadDisplay_C_OnSquadIsEmptyChanged final
{
public:
	bool                                          bSquadIsEmpty;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bMultipleSquadsPopulated;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinimalSquadDisplay_C_OnSquadIsEmptyChanged) == 0x000001, "Wrong alignment on MinimalSquadDisplay_C_OnSquadIsEmptyChanged");
static_assert(sizeof(MinimalSquadDisplay_C_OnSquadIsEmptyChanged) == 0x000002, "Wrong size on MinimalSquadDisplay_C_OnSquadIsEmptyChanged");
static_assert(offsetof(MinimalSquadDisplay_C_OnSquadIsEmptyChanged, bSquadIsEmpty) == 0x000000, "Member 'MinimalSquadDisplay_C_OnSquadIsEmptyChanged::bSquadIsEmpty' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_OnSquadIsEmptyChanged, bMultipleSquadsPopulated) == 0x000001, "Member 'MinimalSquadDisplay_C_OnSquadIsEmptyChanged::bMultipleSquadsPopulated' has a wrong offset!");

// Function MinimalSquadDisplay.MinimalSquadDisplay_C.ExecuteUbergraph_MinimalSquadDisplay
// 0x0100 (0x0100 - 0x0000)
struct MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSquadIsEmpty;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bMultipleSquadsPopulated;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B05[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B06[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B07[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B08[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaTeamDisplayInfo                 K2Node_Event_SquadStyle;                           // 0x0048(0x0088)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B09[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7B0A[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay) == 0x000008, "Wrong alignment on MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay");
static_assert(sizeof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay) == 0x000100, "Wrong size on MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, EntryPoint) == 0x000000, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_Event_bSquadIsEmpty) == 0x000004, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_Event_bSquadIsEmpty' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_Event_bMultipleSquadsPopulated) == 0x000005, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_Event_bMultipleSquadsPopulated' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_CustomEvent_Loaded_1) == 0x000008, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, Temp_object_Variable) == 0x000018, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_CustomEvent_Loaded) == 0x000028, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, Temp_object_Variable_1) == 0x000030, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_DynamicCast_AsTexture) == 0x000038, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, Temp_bool_Variable) == 0x000041, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, Temp_byte_Variable) == 0x000042, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, Temp_byte_Variable_1) == 0x000043, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_Event_SquadStyle) == 0x000048, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_Event_SquadStyle' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_Select_Default) == 0x0000D0, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x0000D4, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E4, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000F8, "Member 'MinimalSquadDisplay_C_ExecuteUbergraph_MinimalSquadDisplay::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

