#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_XP_Pop_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_XP_Pop_Widget.HUD_XP_Pop_Widget_C
// 0x00A8 (0x0378 - 0x02D0)
class UHUD_XP_Pop_Widget_C final : public UAthenaXPWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ScoreBump;                                         // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Outro;                                             // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_xp;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_xp_plus;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ScoreContainer;                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_XP_Pop_Source_C*                   HUD_XP_Pop_Source;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_XP_Pop_Source_C*                   HUD_XP_Pop_Source_1;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_XP_Pop_Source_C*                   HUD_XP_Pop_Source_2;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_XP_Pop_Source_C*                   HUD_XP_Pop_Source_3;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Flare;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shadow;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                Number_Score;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URestedIcon_C*                          RestedIcon;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_SourceContainer;                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsRested;                                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CB0[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   RestedColor;                                       // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   NotRestedColor;                                    // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void UpdateXPAmount(int32 NewAmount, class USoundCue* Cue);
	void UpdateXPSource(const class FText& NewSourceText);
	void Construct();
	void OutroFinished();
	void SetRestedVisuals();
	void PreConstruct(bool IsDesignTime);
	void EventEmptySources();
	void SetSourceRestedVisuals(class UHUD_XP_Pop_Source_C* SourceWidget);
	void UpdateRestXP(int32 RestXpRemaining);
	void ExecuteUbergraph_HUD_XP_Pop_Widget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_XP_Pop_Widget_C">();
	}
	static class UHUD_XP_Pop_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_XP_Pop_Widget_C>();
	}
};
static_assert(alignof(UHUD_XP_Pop_Widget_C) == 0x000008, "Wrong alignment on UHUD_XP_Pop_Widget_C");
static_assert(sizeof(UHUD_XP_Pop_Widget_C) == 0x000378, "Wrong size on UHUD_XP_Pop_Widget_C");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, UberGraphFrame) == 0x0002D0, "Member 'UHUD_XP_Pop_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, ScoreBump) == 0x0002D8, "Member 'UHUD_XP_Pop_Widget_C::ScoreBump' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, Outro) == 0x0002E0, "Member 'UHUD_XP_Pop_Widget_C::Outro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, Intro) == 0x0002E8, "Member 'UHUD_XP_Pop_Widget_C::Intro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, CommonTextBlock_xp) == 0x0002F0, "Member 'UHUD_XP_Pop_Widget_C::CommonTextBlock_xp' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, CommonTextBlock_xp_plus) == 0x0002F8, "Member 'UHUD_XP_Pop_Widget_C::CommonTextBlock_xp_plus' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, HorizontalBox_ScoreContainer) == 0x000300, "Member 'UHUD_XP_Pop_Widget_C::HorizontalBox_ScoreContainer' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, HUD_XP_Pop_Source) == 0x000308, "Member 'UHUD_XP_Pop_Widget_C::HUD_XP_Pop_Source' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, HUD_XP_Pop_Source_1) == 0x000310, "Member 'UHUD_XP_Pop_Widget_C::HUD_XP_Pop_Source_1' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, HUD_XP_Pop_Source_2) == 0x000318, "Member 'UHUD_XP_Pop_Widget_C::HUD_XP_Pop_Source_2' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, HUD_XP_Pop_Source_3) == 0x000320, "Member 'UHUD_XP_Pop_Widget_C::HUD_XP_Pop_Source_3' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, Image_Flare) == 0x000328, "Member 'UHUD_XP_Pop_Widget_C::Image_Flare' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, Image_Shadow) == 0x000330, "Member 'UHUD_XP_Pop_Widget_C::Image_Shadow' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, Number_Score) == 0x000338, "Member 'UHUD_XP_Pop_Widget_C::Number_Score' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, RestedIcon) == 0x000340, "Member 'UHUD_XP_Pop_Widget_C::RestedIcon' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, VerticalBox_SourceContainer) == 0x000348, "Member 'UHUD_XP_Pop_Widget_C::VerticalBox_SourceContainer' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, IsRested) == 0x000350, "Member 'UHUD_XP_Pop_Widget_C::IsRested' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, RestedColor) == 0x000358, "Member 'UHUD_XP_Pop_Widget_C::RestedColor' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Pop_Widget_C, NotRestedColor) == 0x000368, "Member 'UHUD_XP_Pop_Widget_C::NotRestedColor' has a wrong offset!");

}

