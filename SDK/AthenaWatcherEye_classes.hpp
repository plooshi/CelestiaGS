#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaWatcherEye

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaWatcherEye.AthenaWatcherEye_C
// 0x0048 (0x0278 - 0x0230)
class UAthenaWatcherEye_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Mad;                                               // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Blink_New;                                         // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Surprise;                                          // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Blink;                                             // 0x0250(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LookAround;                                        // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Open;                                              // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 I_Watcher;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           WatcherFinishedTransitionTimer;                    // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void SpectatorAdded_Watcher();
	void Hide_Watcher();
	void Show_Watcher();
	void End_Watcher();
	void SpectatorRemoved_Watcher();
	void Begin_Watcher(bool ManySpectatorsJoining);
	void ManySpectatorsAdded_Watcher();
	void ExecuteUbergraph_AthenaWatcherEye(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaWatcherEye_C">();
	}
	static class UAthenaWatcherEye_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaWatcherEye_C>();
	}
};
static_assert(alignof(UAthenaWatcherEye_C) == 0x000008, "Wrong alignment on UAthenaWatcherEye_C");
static_assert(sizeof(UAthenaWatcherEye_C) == 0x000278, "Wrong size on UAthenaWatcherEye_C");
static_assert(offsetof(UAthenaWatcherEye_C, UberGraphFrame) == 0x000230, "Member 'UAthenaWatcherEye_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, Mad) == 0x000238, "Member 'UAthenaWatcherEye_C::Mad' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, Blink_New) == 0x000240, "Member 'UAthenaWatcherEye_C::Blink_New' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, Surprise) == 0x000248, "Member 'UAthenaWatcherEye_C::Surprise' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, Blink) == 0x000250, "Member 'UAthenaWatcherEye_C::Blink' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, LookAround) == 0x000258, "Member 'UAthenaWatcherEye_C::LookAround' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, Open) == 0x000260, "Member 'UAthenaWatcherEye_C::Open' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, I_Watcher) == 0x000268, "Member 'UAthenaWatcherEye_C::I_Watcher' has a wrong offset!");
static_assert(offsetof(UAthenaWatcherEye_C, WatcherFinishedTransitionTimer) == 0x000270, "Member 'UAthenaWatcherEye_C::WatcherFinishedTransitionTimer' has a wrong offset!");

}

