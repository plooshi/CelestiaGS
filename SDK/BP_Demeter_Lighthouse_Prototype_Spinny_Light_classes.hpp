#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Demeter_Lighthouse_Prototype_Spinny_Light

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C
// 0x0050 (0x0C10 - 0x0BC0)
class ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SpinningLightAudio;                                // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FresnelLens;                                       // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Is_Died;                                           // 0x0BE0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         Cone_Length;                                       // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start_Radius;                                      // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cone_Angle;                                        // 0x0BEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light_Color_rgb__and_Brightness_a_;                // 0x0BF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Light_Shift;                                       // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light(int32 EntryPoint);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void OnReady_00BF6F404FBB9F2A492A49BAB520D79A();
	void OnRep_Is_Died();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Demeter_Lighthouse_Prototype_Spinny_Light_C">();
	}
	static class ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C>();
	}
};
static_assert(alignof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C) == 0x000008, "Wrong alignment on ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C");
static_assert(sizeof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C) == 0x000C10, "Wrong size on ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, UberGraphFrame) == 0x000BC0, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, PointLight) == 0x000BC8, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, SpinningLightAudio) == 0x000BD0, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::SpinningLightAudio' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, FresnelLens) == 0x000BD8, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::FresnelLens' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Is_Died) == 0x000BE0, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Is_Died' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Cone_Length) == 0x000BE4, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Cone_Length' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Start_Radius) == 0x000BE8, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Start_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Cone_Angle) == 0x000BEC, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Cone_Angle' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Light_Color_rgb__and_Brightness_a_) == 0x000BF0, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Light_Color_rgb__and_Brightness_a_' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Material) == 0x000C00, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C, Light_Shift) == 0x000C08, "Member 'ABP_Demeter_Lighthouse_Prototype_Spinny_Light_C::Light_Shift' has a wrong offset!");

}

