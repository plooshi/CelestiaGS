#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValetUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function ValetUI.FortAthenaVehicleFuelWidget.OnAddedFuel
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaVehicleFuelWidget_OnAddedFuel final
{
public:
	float                                         NewFuelPercent;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_OnAddedFuel) == 0x000004, "Wrong alignment on FortAthenaVehicleFuelWidget_OnAddedFuel");
static_assert(sizeof(FortAthenaVehicleFuelWidget_OnAddedFuel) == 0x000004, "Wrong size on FortAthenaVehicleFuelWidget_OnAddedFuel");
static_assert(offsetof(FortAthenaVehicleFuelWidget_OnAddedFuel, NewFuelPercent) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_OnAddedFuel::NewFuelPercent' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.OnUpdateRechargeableBoostPercent
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent final
{
public:
	float                                         BoostPercent;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent) == 0x000004, "Wrong alignment on FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent");
static_assert(sizeof(FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent) == 0x000004, "Wrong size on FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent");
static_assert(offsetof(FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent, BoostPercent) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_OnUpdateRechargeableBoostPercent::BoostPercent' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.SetupVehicleFuelWidget
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget final
{
public:
	class AActor*                                 NewVehicle;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequestShowWidget;                                // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4294[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget) == 0x000008, "Wrong alignment on FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget");
static_assert(sizeof(FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget) == 0x000010, "Wrong size on FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget");
static_assert(offsetof(FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget, NewVehicle) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget::NewVehicle' has a wrong offset!");
static_assert(offsetof(FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget, bRequestShowWidget) == 0x000008, "Member 'FortAthenaVehicleFuelWidget_SetupVehicleFuelWidget::bRequestShowWidget' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.SetVehicleProperties
// 0x0002 (0x0002 - 0x0000)
struct FortAthenaVehicleFuelWidget_SetVehicleProperties final
{
public:
	bool                                          bInfiniteFuel;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesRechargeableBoost;                            // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_SetVehicleProperties) == 0x000001, "Wrong alignment on FortAthenaVehicleFuelWidget_SetVehicleProperties");
static_assert(sizeof(FortAthenaVehicleFuelWidget_SetVehicleProperties) == 0x000002, "Wrong size on FortAthenaVehicleFuelWidget_SetVehicleProperties");
static_assert(offsetof(FortAthenaVehicleFuelWidget_SetVehicleProperties, bInfiniteFuel) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_SetVehicleProperties::bInfiniteFuel' has a wrong offset!");
static_assert(offsetof(FortAthenaVehicleFuelWidget_SetVehicleProperties, bUsesRechargeableBoost) == 0x000001, "Member 'FortAthenaVehicleFuelWidget_SetVehicleProperties::bUsesRechargeableBoost' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.UpdateFuelWidgetVisibilities
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities final
{
public:
	bool                                          bIsLowOnFuel;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities) == 0x000001, "Wrong alignment on FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities");
static_assert(sizeof(FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities) == 0x000001, "Wrong size on FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities");
static_assert(offsetof(FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities, bIsLowOnFuel) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_UpdateFuelWidgetVisibilities::bIsLowOnFuel' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.UpdateRPMMeter
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaVehicleFuelWidget_UpdateRPMMeter final
{
public:
	float                                         NormalizedRPM;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_UpdateRPMMeter) == 0x000004, "Wrong alignment on FortAthenaVehicleFuelWidget_UpdateRPMMeter");
static_assert(sizeof(FortAthenaVehicleFuelWidget_UpdateRPMMeter) == 0x000004, "Wrong size on FortAthenaVehicleFuelWidget_UpdateRPMMeter");
static_assert(offsetof(FortAthenaVehicleFuelWidget_UpdateRPMMeter, NormalizedRPM) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_UpdateRPMMeter::NormalizedRPM' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.UpdateSecondaryMeter
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaVehicleFuelWidget_UpdateSecondaryMeter final
{
public:
	float                                         FuelPercentage;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLowOnFuel;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4295[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaVehicleFuelWidget_UpdateSecondaryMeter) == 0x000004, "Wrong alignment on FortAthenaVehicleFuelWidget_UpdateSecondaryMeter");
static_assert(sizeof(FortAthenaVehicleFuelWidget_UpdateSecondaryMeter) == 0x000008, "Wrong size on FortAthenaVehicleFuelWidget_UpdateSecondaryMeter");
static_assert(offsetof(FortAthenaVehicleFuelWidget_UpdateSecondaryMeter, FuelPercentage) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_UpdateSecondaryMeter::FuelPercentage' has a wrong offset!");
static_assert(offsetof(FortAthenaVehicleFuelWidget_UpdateSecondaryMeter, bIsLowOnFuel) == 0x000004, "Member 'FortAthenaVehicleFuelWidget_UpdateSecondaryMeter::bIsLowOnFuel' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.UpdateSpeedometer
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaVehicleFuelWidget_UpdateSpeedometer final
{
public:
	float                                         NormalizedSpeed;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_UpdateSpeedometer) == 0x000004, "Wrong alignment on FortAthenaVehicleFuelWidget_UpdateSpeedometer");
static_assert(sizeof(FortAthenaVehicleFuelWidget_UpdateSpeedometer) == 0x000004, "Wrong size on FortAthenaVehicleFuelWidget_UpdateSpeedometer");
static_assert(offsetof(FortAthenaVehicleFuelWidget_UpdateSpeedometer, NormalizedSpeed) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_UpdateSpeedometer::NormalizedSpeed' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.GetDagwoodVehicle
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaVehicleFuelWidget_GetDagwoodVehicle final
{
public:
	class AFortDagwoodVehicle*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_GetDagwoodVehicle) == 0x000008, "Wrong alignment on FortAthenaVehicleFuelWidget_GetDagwoodVehicle");
static_assert(sizeof(FortAthenaVehicleFuelWidget_GetDagwoodVehicle) == 0x000008, "Wrong size on FortAthenaVehicleFuelWidget_GetDagwoodVehicle");
static_assert(offsetof(FortAthenaVehicleFuelWidget_GetDagwoodVehicle, ReturnValue) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_GetDagwoodVehicle::ReturnValue' has a wrong offset!");

// Function ValetUI.FortAthenaVehicleFuelWidget.GetVehicle
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaVehicleFuelWidget_GetVehicle final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaVehicleFuelWidget_GetVehicle) == 0x000008, "Wrong alignment on FortAthenaVehicleFuelWidget_GetVehicle");
static_assert(sizeof(FortAthenaVehicleFuelWidget_GetVehicle) == 0x000008, "Wrong size on FortAthenaVehicleFuelWidget_GetVehicle");
static_assert(offsetof(FortAthenaVehicleFuelWidget_GetVehicle, ReturnValue) == 0x000000, "Member 'FortAthenaVehicleFuelWidget_GetVehicle::ReturnValue' has a wrong offset!");

}

