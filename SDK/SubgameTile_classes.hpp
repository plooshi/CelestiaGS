#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubgameTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SubgameTile.SubgameTile_C
// 0x0038 (0x0CC8 - 0x0C90)
class USubgameTile_C final : public UFortSubgameTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RevealCMSKeyArt;                                   // 0x0C98(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnFocused;                                         // 0x0CA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FocusedSecondary;                                  // 0x0CA8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Focused;                                           // 0x0CB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 FocusPulse;                                        // 0x0CB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PulseMID;                                          // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__Image_KeyArt_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature();
	void BP_OnHovered();
	void BP_OnUnhovered();
	void ExecuteUbergraph_SubgameTile(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SubgameTile_C">();
	}
	static class USubgameTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubgameTile_C>();
	}
};
static_assert(alignof(USubgameTile_C) == 0x000008, "Wrong alignment on USubgameTile_C");
static_assert(sizeof(USubgameTile_C) == 0x000CC8, "Wrong size on USubgameTile_C");
static_assert(offsetof(USubgameTile_C, UberGraphFrame) == 0x000C90, "Member 'USubgameTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, RevealCMSKeyArt) == 0x000C98, "Member 'USubgameTile_C::RevealCMSKeyArt' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, UnFocused) == 0x000CA0, "Member 'USubgameTile_C::UnFocused' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, FocusedSecondary) == 0x000CA8, "Member 'USubgameTile_C::FocusedSecondary' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, Focused) == 0x000CB0, "Member 'USubgameTile_C::Focused' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, FocusPulse) == 0x000CB8, "Member 'USubgameTile_C::FocusPulse' has a wrong offset!");
static_assert(offsetof(USubgameTile_C, PulseMID) == 0x000CC0, "Member 'USubgameTile_C::PulseMID' has a wrong offset!");

}

