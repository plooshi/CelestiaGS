#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FireModeSelectTile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function FireModeSelectTile.FireModeSelectTile_C.HandleFocus__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_HandleFocus__DelegateSignature final
{
public:
	class UFireModeSelectTile_C*                  Tile;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_HandleFocus__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_HandleFocus__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_HandleFocus__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_HandleFocus__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_HandleFocus__DelegateSignature, Tile) == 0x000000, "Member 'FireModeSelectTile_C_HandleFocus__DelegateSignature::Tile' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.HandleSelectConfirmed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature final
{
public:
	class UFireModeSelectTile_C*                  Tile;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature, Tile) == 0x000000, "Member 'FireModeSelectTile_C_HandleSelectConfirmed__DelegateSignature::Tile' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.HandleDeselectTile__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_HandleDeselectTile__DelegateSignature final
{
public:
	class UFireModeSelectTile_C*                  Tile;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_HandleDeselectTile__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_HandleDeselectTile__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_HandleDeselectTile__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_HandleDeselectTile__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_HandleDeselectTile__DelegateSignature, Tile) == 0x000000, "Member 'FireModeSelectTile_C_HandleDeselectTile__DelegateSignature::Tile' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.ExecuteUbergraph_FireModeSelectTile
// 0x0070 (0x0070 - 0x0000)
struct FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7412[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDLayoutToolContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7413[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUDLayoutToolContext*                  CallFunc_GetContext_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7414[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDLayoutToolContext*                  CallFunc_GetContext_ReturnValue_2;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireModeAvailable_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile) == 0x000008, "Wrong alignment on FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile");
static_assert(sizeof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile) == 0x000070, "Wrong size on FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, EntryPoint) == 0x000000, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, Temp_byte_Variable) == 0x000004, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, K2Node_Event_IsDesignTime) == 0x000018, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, Temp_byte_Variable_1) == 0x000019, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, K2Node_ComponentBoundEvent_Button_2) == 0x000020, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, K2Node_ComponentBoundEvent_Button_1) == 0x000028, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_PlayAnimation_ReturnValue_2) == 0x000038, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_PlayAnimation_ReturnValue_3) == 0x000040, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, K2Node_ComponentBoundEvent_Button) == 0x000048, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_GetContext_ReturnValue_1) == 0x000050, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, Temp_bool_Variable) == 0x000058, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_GetContext_ReturnValue_2) == 0x000060, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_GetContext_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, K2Node_Select_Default) == 0x000068, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile, CallFunc_IsFireModeAvailable_ReturnValue) == 0x000069, "Member 'FireModeSelectTile_C_ExecuteUbergraph_FireModeSelectTile::CallFunc_IsFireModeAvailable_ReturnValue' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FireModeSelectTile_C_BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FireModeSelectTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FireModeSelectTile_C_PreConstruct) == 0x000001, "Wrong alignment on FireModeSelectTile_C_PreConstruct");
static_assert(sizeof(FireModeSelectTile_C_PreConstruct) == 0x000001, "Wrong size on FireModeSelectTile_C_PreConstruct");
static_assert(offsetof(FireModeSelectTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FireModeSelectTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.PlayIntroOrOutro
// 0x0010 (0x0010 - 0x0000)
struct FireModeSelectTile_C_PlayIntroOrOutro final
{
public:
	bool                                          PlayIntro;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7415[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_PlayIntroOrOutro) == 0x000008, "Wrong alignment on FireModeSelectTile_C_PlayIntroOrOutro");
static_assert(sizeof(FireModeSelectTile_C_PlayIntroOrOutro) == 0x000010, "Wrong size on FireModeSelectTile_C_PlayIntroOrOutro");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, PlayIntro) == 0x000000, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::PlayIntro' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, Temp_bool_Variable) == 0x000001, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, Temp_byte_Variable) == 0x000002, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, Temp_byte_Variable_1) == 0x000003, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, K2Node_Select_Default) == 0x000004, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayIntroOrOutro, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'FireModeSelectTile_C_PlayIntroOrOutro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.Setup
// 0x0005 (0x0005 - 0x0000)
struct FireModeSelectTile_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FireModeSelectTile_C_Setup) == 0x000001, "Wrong alignment on FireModeSelectTile_C_Setup");
static_assert(sizeof(FireModeSelectTile_C_Setup) == 0x000005, "Wrong size on FireModeSelectTile_C_Setup");
static_assert(offsetof(FireModeSelectTile_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'FireModeSelectTile_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_Setup, Temp_byte_Variable) == 0x000001, "Member 'FireModeSelectTile_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_Setup, Temp_byte_Variable_1) == 0x000002, "Member 'FireModeSelectTile_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_Setup, K2Node_Select_Default) == 0x000003, "Member 'FireModeSelectTile_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'FireModeSelectTile_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.PlayMovie
// 0x0018 (0x0018 - 0x0000)
struct FireModeSelectTile_C_PlayMovie final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovieWidget_C*                         K2Node_DynamicCast_AsMovie_Widget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FireModeSelectTile_C_PlayMovie) == 0x000008, "Wrong alignment on FireModeSelectTile_C_PlayMovie");
static_assert(sizeof(FireModeSelectTile_C_PlayMovie) == 0x000018, "Wrong size on FireModeSelectTile_C_PlayMovie");
static_assert(offsetof(FireModeSelectTile_C_PlayMovie, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FireModeSelectTile_C_PlayMovie::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayMovie, K2Node_DynamicCast_AsMovie_Widget) == 0x000008, "Member 'FireModeSelectTile_C_PlayMovie::K2Node_DynamicCast_AsMovie_Widget' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayMovie, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FireModeSelectTile_C_PlayMovie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayMovie, CallFunc_IsInZone_ReturnValue) == 0x000011, "Member 'FireModeSelectTile_C_PlayMovie::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_PlayMovie, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'FireModeSelectTile_C_PlayMovie::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.StopMovie
// 0x0010 (0x0010 - 0x0000)
struct FireModeSelectTile_C_StopMovie final
{
public:
	class UMovieWidget_C*                         K2Node_DynamicCast_AsMovie_Widget;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FireModeSelectTile_C_StopMovie) == 0x000008, "Wrong alignment on FireModeSelectTile_C_StopMovie");
static_assert(sizeof(FireModeSelectTile_C_StopMovie) == 0x000010, "Wrong size on FireModeSelectTile_C_StopMovie");
static_assert(offsetof(FireModeSelectTile_C_StopMovie, K2Node_DynamicCast_AsMovie_Widget) == 0x000000, "Member 'FireModeSelectTile_C_StopMovie::K2Node_DynamicCast_AsMovie_Widget' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_StopMovie, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FireModeSelectTile_C_StopMovie::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FireModeSelectTile.FireModeSelectTile_C.HandleSelectionBorderFeedback
// 0x0050 (0x0050 - 0x0000)
struct FireModeSelectTile_C_HandleSelectionBorderFeedback final
{
public:
	bool                                          Param_bIsSelected;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHovered;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7416[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7417[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7418[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7419[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FireModeSelectTile_C_HandleSelectionBorderFeedback) == 0x000008, "Wrong alignment on FireModeSelectTile_C_HandleSelectionBorderFeedback");
static_assert(sizeof(FireModeSelectTile_C_HandleSelectionBorderFeedback) == 0x000050, "Wrong size on FireModeSelectTile_C_HandleSelectionBorderFeedback");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, Param_bIsSelected) == 0x000000, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::Param_bIsSelected' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, bIsHovered) == 0x000001, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::bIsHovered' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, Temp_struct_Variable) == 0x000004, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, Temp_struct_Variable_1) == 0x000018, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, Temp_bool_Variable) == 0x000029, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, CallFunc_IsInZone_ReturnValue) == 0x000038, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(FireModeSelectTile_C_HandleSelectionBorderFeedback, K2Node_Select_Default) == 0x00003C, "Member 'FireModeSelectTile_C_HandleSelectionBorderFeedback::K2Node_Select_Default' has a wrong offset!");

}

