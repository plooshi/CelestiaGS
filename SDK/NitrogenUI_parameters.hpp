#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NitrogenUI

#include "Basic.hpp"

#include "NitrogenRuntime_structs.hpp"
#include "NitrogenUI_structs.hpp"


namespace SDK::Params
{

// Function NitrogenUI.NitrogenWidgetBase.HandleNitrogenGamePhaseChanged
// 0x0001 (0x0001 - 0x0000)
struct NitrogenWidgetBase_HandleNitrogenGamePhaseChanged final
{
public:
	ENitrogenGamePhase                            NewGamePhase;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenWidgetBase_HandleNitrogenGamePhaseChanged) == 0x000001, "Wrong alignment on NitrogenWidgetBase_HandleNitrogenGamePhaseChanged");
static_assert(sizeof(NitrogenWidgetBase_HandleNitrogenGamePhaseChanged) == 0x000001, "Wrong size on NitrogenWidgetBase_HandleNitrogenGamePhaseChanged");
static_assert(offsetof(NitrogenWidgetBase_HandleNitrogenGamePhaseChanged, NewGamePhase) == 0x000000, "Member 'NitrogenWidgetBase_HandleNitrogenGamePhaseChanged::NewGamePhase' has a wrong offset!");

// Function NitrogenUI.NitrogenFareBonusWidget.OnActiveBonusUpdated
// 0x0138 (0x0138 - 0x0000)
struct NitrogenFareBonusWidget_OnActiveBonusUpdated final
{
public:
	struct FNitrogenBonusStat                     BonusStat;                                         // 0x0000(0x0130)(Parm, OutParm, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0130(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldAwardBonus;                                  // 0x0134(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4264[0x3];                                     // 0x0135(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NitrogenFareBonusWidget_OnActiveBonusUpdated) == 0x000008, "Wrong alignment on NitrogenFareBonusWidget_OnActiveBonusUpdated");
static_assert(sizeof(NitrogenFareBonusWidget_OnActiveBonusUpdated) == 0x000138, "Wrong size on NitrogenFareBonusWidget_OnActiveBonusUpdated");
static_assert(offsetof(NitrogenFareBonusWidget_OnActiveBonusUpdated, BonusStat) == 0x000000, "Member 'NitrogenFareBonusWidget_OnActiveBonusUpdated::BonusStat' has a wrong offset!");
static_assert(offsetof(NitrogenFareBonusWidget_OnActiveBonusUpdated, Value) == 0x000130, "Member 'NitrogenFareBonusWidget_OnActiveBonusUpdated::Value' has a wrong offset!");
static_assert(offsetof(NitrogenFareBonusWidget_OnActiveBonusUpdated, ShouldAwardBonus) == 0x000134, "Member 'NitrogenFareBonusWidget_OnActiveBonusUpdated::ShouldAwardBonus' has a wrong offset!");

// Function NitrogenUI.NitrogenFareBonusWidget.OnEndFare
// 0x0001 (0x0001 - 0x0000)
struct NitrogenFareBonusWidget_OnEndFare final
{
public:
	bool                                          bFareCompleted;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareBonusWidget_OnEndFare) == 0x000001, "Wrong alignment on NitrogenFareBonusWidget_OnEndFare");
static_assert(sizeof(NitrogenFareBonusWidget_OnEndFare) == 0x000001, "Wrong size on NitrogenFareBonusWidget_OnEndFare");
static_assert(offsetof(NitrogenFareBonusWidget_OnEndFare, bFareCompleted) == 0x000000, "Member 'NitrogenFareBonusWidget_OnEndFare::bFareCompleted' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.BonusProgressUpdate
// 0x0004 (0x0004 - 0x0000)
struct NitrogenFareMeterWidget_BonusProgressUpdate final
{
public:
	float                                         BonusProgressRatio;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_BonusProgressUpdate) == 0x000004, "Wrong alignment on NitrogenFareMeterWidget_BonusProgressUpdate");
static_assert(sizeof(NitrogenFareMeterWidget_BonusProgressUpdate) == 0x000004, "Wrong size on NitrogenFareMeterWidget_BonusProgressUpdate");
static_assert(offsetof(NitrogenFareMeterWidget_BonusProgressUpdate, BonusProgressRatio) == 0x000000, "Member 'NitrogenFareMeterWidget_BonusProgressUpdate::BonusProgressRatio' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.FastDeliveryTimeUpdate
// 0x0004 (0x0004 - 0x0000)
struct NitrogenFareMeterWidget_FastDeliveryTimeUpdate final
{
public:
	float                                         RemainingTimeRatio;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_FastDeliveryTimeUpdate) == 0x000004, "Wrong alignment on NitrogenFareMeterWidget_FastDeliveryTimeUpdate");
static_assert(sizeof(NitrogenFareMeterWidget_FastDeliveryTimeUpdate) == 0x000004, "Wrong size on NitrogenFareMeterWidget_FastDeliveryTimeUpdate");
static_assert(offsetof(NitrogenFareMeterWidget_FastDeliveryTimeUpdate, RemainingTimeRatio) == 0x000000, "Member 'NitrogenFareMeterWidget_FastDeliveryTimeUpdate::RemainingTimeRatio' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.OnActiveBonusUpdated
// 0x0138 (0x0138 - 0x0000)
struct NitrogenFareMeterWidget_OnActiveBonusUpdated final
{
public:
	struct FNitrogenBonusStat                     BonusStat;                                         // 0x0000(0x0130)(Parm, OutParm, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0130(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldAwardBonus;                                 // 0x0134(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4266[0x3];                                     // 0x0135(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NitrogenFareMeterWidget_OnActiveBonusUpdated) == 0x000008, "Wrong alignment on NitrogenFareMeterWidget_OnActiveBonusUpdated");
static_assert(sizeof(NitrogenFareMeterWidget_OnActiveBonusUpdated) == 0x000138, "Wrong size on NitrogenFareMeterWidget_OnActiveBonusUpdated");
static_assert(offsetof(NitrogenFareMeterWidget_OnActiveBonusUpdated, BonusStat) == 0x000000, "Member 'NitrogenFareMeterWidget_OnActiveBonusUpdated::BonusStat' has a wrong offset!");
static_assert(offsetof(NitrogenFareMeterWidget_OnActiveBonusUpdated, Value) == 0x000130, "Member 'NitrogenFareMeterWidget_OnActiveBonusUpdated::Value' has a wrong offset!");
static_assert(offsetof(NitrogenFareMeterWidget_OnActiveBonusUpdated, bShouldAwardBonus) == 0x000134, "Member 'NitrogenFareMeterWidget_OnActiveBonusUpdated::bShouldAwardBonus' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.OnEndFare
// 0x0001 (0x0001 - 0x0000)
struct NitrogenFareMeterWidget_OnEndFare final
{
public:
	bool                                          bFareCompleted;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_OnEndFare) == 0x000001, "Wrong alignment on NitrogenFareMeterWidget_OnEndFare");
static_assert(sizeof(NitrogenFareMeterWidget_OnEndFare) == 0x000001, "Wrong size on NitrogenFareMeterWidget_OnEndFare");
static_assert(offsetof(NitrogenFareMeterWidget_OnEndFare, bFareCompleted) == 0x000000, "Member 'NitrogenFareMeterWidget_OnEndFare::bFareCompleted' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.OnFareBonusFinshed
// 0x0001 (0x0001 - 0x0000)
struct NitrogenFareMeterWidget_OnFareBonusFinshed final
{
public:
	bool                                          BonusCompleted;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_OnFareBonusFinshed) == 0x000001, "Wrong alignment on NitrogenFareMeterWidget_OnFareBonusFinshed");
static_assert(sizeof(NitrogenFareMeterWidget_OnFareBonusFinshed) == 0x000001, "Wrong size on NitrogenFareMeterWidget_OnFareBonusFinshed");
static_assert(offsetof(NitrogenFareMeterWidget_OnFareBonusFinshed, BonusCompleted) == 0x000000, "Member 'NitrogenFareMeterWidget_OnFareBonusFinshed::BonusCompleted' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.SetCurrentFareBaseRewardValue
// 0x0004 (0x0004 - 0x0000)
struct NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue) == 0x000004, "Wrong alignment on NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue");
static_assert(sizeof(NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue) == 0x000004, "Wrong size on NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue");
static_assert(offsetof(NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue, Num) == 0x000000, "Member 'NitrogenFareMeterWidget_SetCurrentFareBaseRewardValue::Num' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.SetCurrentFareBonusObjectiveState
// 0x0002 (0x0002 - 0x0000)
struct NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState final
{
public:
	ENitrogenFareObjectiveDisplayState            DisplayState;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayAnimation;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState) == 0x000001, "Wrong alignment on NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState");
static_assert(sizeof(NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState) == 0x000002, "Wrong size on NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState");
static_assert(offsetof(NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState, DisplayState) == 0x000000, "Member 'NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState::DisplayState' has a wrong offset!");
static_assert(offsetof(NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState, bPlayAnimation) == 0x000001, "Member 'NitrogenFareMeterWidget_SetCurrentFareBonusObjectiveState::bPlayAnimation' has a wrong offset!");

// Function NitrogenUI.NitrogenFareMeterWidget.SetCurrentFareTimedDeliveryObjectiveState
// 0x0002 (0x0002 - 0x0000)
struct NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState final
{
public:
	ENitrogenFareObjectiveDisplayState            DisplayState;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayAnimation;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState) == 0x000001, "Wrong alignment on NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState");
static_assert(sizeof(NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState) == 0x000002, "Wrong size on NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState");
static_assert(offsetof(NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState, DisplayState) == 0x000000, "Member 'NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState::DisplayState' has a wrong offset!");
static_assert(offsetof(NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState, bPlayAnimation) == 0x000001, "Member 'NitrogenFareMeterWidget_SetCurrentFareTimedDeliveryObjectiveState::bPlayAnimation' has a wrong offset!");

// Function NitrogenUI.NitrogenLeaderboardWidget.UpdateLeaderboardUI
// 0x0018 (0x0018 - 0x0000)
struct NitrogenLeaderboardWidget_UpdateLeaderboardUI final
{
public:
	TArray<struct FNitrogenLeaderboardData>       LeaderboardInfo;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GoalScore;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4268[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NitrogenLeaderboardWidget_UpdateLeaderboardUI) == 0x000008, "Wrong alignment on NitrogenLeaderboardWidget_UpdateLeaderboardUI");
static_assert(sizeof(NitrogenLeaderboardWidget_UpdateLeaderboardUI) == 0x000018, "Wrong size on NitrogenLeaderboardWidget_UpdateLeaderboardUI");
static_assert(offsetof(NitrogenLeaderboardWidget_UpdateLeaderboardUI, LeaderboardInfo) == 0x000000, "Member 'NitrogenLeaderboardWidget_UpdateLeaderboardUI::LeaderboardInfo' has a wrong offset!");
static_assert(offsetof(NitrogenLeaderboardWidget_UpdateLeaderboardUI, GoalScore) == 0x000010, "Member 'NitrogenLeaderboardWidget_UpdateLeaderboardUI::GoalScore' has a wrong offset!");

// Function NitrogenUI.NitrogenObjectiveWidget.HandleVehicleEntered
// 0x0008 (0x0008 - 0x0000)
struct NitrogenObjectiveWidget_HandleVehicleEntered final
{
public:
	class AFortAthenaVehicle*                     NewVehicle;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenObjectiveWidget_HandleVehicleEntered) == 0x000008, "Wrong alignment on NitrogenObjectiveWidget_HandleVehicleEntered");
static_assert(sizeof(NitrogenObjectiveWidget_HandleVehicleEntered) == 0x000008, "Wrong size on NitrogenObjectiveWidget_HandleVehicleEntered");
static_assert(offsetof(NitrogenObjectiveWidget_HandleVehicleEntered, NewVehicle) == 0x000000, "Member 'NitrogenObjectiveWidget_HandleVehicleEntered::NewVehicle' has a wrong offset!");

// Function NitrogenUI.NitrogenObjectiveWidget.OnEndFare
// 0x0001 (0x0001 - 0x0000)
struct NitrogenObjectiveWidget_OnEndFare final
{
public:
	bool                                          bFareCompleted;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenObjectiveWidget_OnEndFare) == 0x000001, "Wrong alignment on NitrogenObjectiveWidget_OnEndFare");
static_assert(sizeof(NitrogenObjectiveWidget_OnEndFare) == 0x000001, "Wrong size on NitrogenObjectiveWidget_OnEndFare");
static_assert(offsetof(NitrogenObjectiveWidget_OnEndFare, bFareCompleted) == 0x000000, "Member 'NitrogenObjectiveWidget_OnEndFare::bFareCompleted' has a wrong offset!");

// Function NitrogenUI.NitrogenObjectiveWidget.SetShouldBeHidden
// 0x0001 (0x0001 - 0x0000)
struct NitrogenObjectiveWidget_SetShouldBeHidden final
{
public:
	bool                                          bInShouldBeHidden;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenObjectiveWidget_SetShouldBeHidden) == 0x000001, "Wrong alignment on NitrogenObjectiveWidget_SetShouldBeHidden");
static_assert(sizeof(NitrogenObjectiveWidget_SetShouldBeHidden) == 0x000001, "Wrong size on NitrogenObjectiveWidget_SetShouldBeHidden");
static_assert(offsetof(NitrogenObjectiveWidget_SetShouldBeHidden, bInShouldBeHidden) == 0x000000, "Member 'NitrogenObjectiveWidget_SetShouldBeHidden::bInShouldBeHidden' has a wrong offset!");

// Function NitrogenUI.NitrogenObjectiveWidget.UpdateWidgetState
// 0x0001 (0x0001 - 0x0000)
struct NitrogenObjectiveWidget_UpdateWidgetState final
{
public:
	ENitrogenObjectiveWidgetState                 NewObjectiveWidgetState;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenObjectiveWidget_UpdateWidgetState) == 0x000001, "Wrong alignment on NitrogenObjectiveWidget_UpdateWidgetState");
static_assert(sizeof(NitrogenObjectiveWidget_UpdateWidgetState) == 0x000001, "Wrong size on NitrogenObjectiveWidget_UpdateWidgetState");
static_assert(offsetof(NitrogenObjectiveWidget_UpdateWidgetState, NewObjectiveWidgetState) == 0x000000, "Member 'NitrogenObjectiveWidget_UpdateWidgetState::NewObjectiveWidgetState' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.HandleScoreChanged
// 0x0004 (0x0004 - 0x0000)
struct NitrogenPlacementWidget_HandleScoreChanged final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_HandleScoreChanged) == 0x000004, "Wrong alignment on NitrogenPlacementWidget_HandleScoreChanged");
static_assert(sizeof(NitrogenPlacementWidget_HandleScoreChanged) == 0x000004, "Wrong size on NitrogenPlacementWidget_HandleScoreChanged");
static_assert(offsetof(NitrogenPlacementWidget_HandleScoreChanged, Score) == 0x000000, "Member 'NitrogenPlacementWidget_HandleScoreChanged::Score' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.OnEndFare
// 0x0001 (0x0001 - 0x0000)
struct NitrogenPlacementWidget_OnEndFare final
{
public:
	bool                                          bFareCompleted;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_OnEndFare) == 0x000001, "Wrong alignment on NitrogenPlacementWidget_OnEndFare");
static_assert(sizeof(NitrogenPlacementWidget_OnEndFare) == 0x000001, "Wrong size on NitrogenPlacementWidget_OnEndFare");
static_assert(offsetof(NitrogenPlacementWidget_OnEndFare, bFareCompleted) == 0x000000, "Member 'NitrogenPlacementWidget_OnEndFare::bFareCompleted' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.OnPlayerFareComplete
// 0x0004 (0x0004 - 0x0000)
struct NitrogenPlacementWidget_OnPlayerFareComplete final
{
public:
	int32                                         StarsGained;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_OnPlayerFareComplete) == 0x000004, "Wrong alignment on NitrogenPlacementWidget_OnPlayerFareComplete");
static_assert(sizeof(NitrogenPlacementWidget_OnPlayerFareComplete) == 0x000004, "Wrong size on NitrogenPlacementWidget_OnPlayerFareComplete");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerFareComplete, StarsGained) == 0x000000, "Member 'NitrogenPlacementWidget_OnPlayerFareComplete::StarsGained' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.OnPlayerPlacementChanged
// 0x0008 (0x0008 - 0x0000)
struct NitrogenPlacementWidget_OnPlayerPlacementChanged final
{
public:
	int32                                         NewPlacement;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldPlacement;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_OnPlayerPlacementChanged) == 0x000004, "Wrong alignment on NitrogenPlacementWidget_OnPlayerPlacementChanged");
static_assert(sizeof(NitrogenPlacementWidget_OnPlayerPlacementChanged) == 0x000008, "Wrong size on NitrogenPlacementWidget_OnPlayerPlacementChanged");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerPlacementChanged, NewPlacement) == 0x000000, "Member 'NitrogenPlacementWidget_OnPlayerPlacementChanged::NewPlacement' has a wrong offset!");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerPlacementChanged, OldPlacement) == 0x000004, "Member 'NitrogenPlacementWidget_OnPlayerPlacementChanged::OldPlacement' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.OnPlayerScoreChanged
// 0x0004 (0x0004 - 0x0000)
struct NitrogenPlacementWidget_OnPlayerScoreChanged final
{
public:
	int32                                         NewScore;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_OnPlayerScoreChanged) == 0x000004, "Wrong alignment on NitrogenPlacementWidget_OnPlayerScoreChanged");
static_assert(sizeof(NitrogenPlacementWidget_OnPlayerScoreChanged) == 0x000004, "Wrong size on NitrogenPlacementWidget_OnPlayerScoreChanged");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerScoreChanged, NewScore) == 0x000000, "Member 'NitrogenPlacementWidget_OnPlayerScoreChanged::NewScore' has a wrong offset!");

// Function NitrogenUI.NitrogenPlacementWidget.OnPlayerScoringUpdate
// 0x0020 (0x0020 - 0x0000)
struct NitrogenPlacementWidget_OnPlayerScoringUpdate final
{
public:
	int32                                         CurrentPlayerTeamScore;                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentPlayerTeamPlacement;                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GoalScore;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_426C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 SortedTeamScores;                                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenPlacementWidget_OnPlayerScoringUpdate) == 0x000008, "Wrong alignment on NitrogenPlacementWidget_OnPlayerScoringUpdate");
static_assert(sizeof(NitrogenPlacementWidget_OnPlayerScoringUpdate) == 0x000020, "Wrong size on NitrogenPlacementWidget_OnPlayerScoringUpdate");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerScoringUpdate, CurrentPlayerTeamScore) == 0x000000, "Member 'NitrogenPlacementWidget_OnPlayerScoringUpdate::CurrentPlayerTeamScore' has a wrong offset!");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerScoringUpdate, CurrentPlayerTeamPlacement) == 0x000004, "Member 'NitrogenPlacementWidget_OnPlayerScoringUpdate::CurrentPlayerTeamPlacement' has a wrong offset!");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerScoringUpdate, GoalScore) == 0x000008, "Member 'NitrogenPlacementWidget_OnPlayerScoringUpdate::GoalScore' has a wrong offset!");
static_assert(offsetof(NitrogenPlacementWidget_OnPlayerScoringUpdate, SortedTeamScores) == 0x000010, "Member 'NitrogenPlacementWidget_OnPlayerScoringUpdate::SortedTeamScores' has a wrong offset!");

// Function NitrogenUI.NitrogenScoreEventWidget.DisplayLeadChangedEvent
// 0x0001 (0x0001 - 0x0000)
struct NitrogenScoreEventWidget_DisplayLeadChangedEvent final
{
public:
	bool                                          bInLead;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenScoreEventWidget_DisplayLeadChangedEvent) == 0x000001, "Wrong alignment on NitrogenScoreEventWidget_DisplayLeadChangedEvent");
static_assert(sizeof(NitrogenScoreEventWidget_DisplayLeadChangedEvent) == 0x000001, "Wrong size on NitrogenScoreEventWidget_DisplayLeadChangedEvent");
static_assert(offsetof(NitrogenScoreEventWidget_DisplayLeadChangedEvent, bInLead) == 0x000000, "Member 'NitrogenScoreEventWidget_DisplayLeadChangedEvent::bInLead' has a wrong offset!");

// Function NitrogenUI.NitrogenScoreEventWidget.DisplayScoreEvent
// 0x0001 (0x0001 - 0x0000)
struct NitrogenScoreEventWidget_DisplayScoreEvent final
{
public:
	ENitrogenScoreReason                          ScoreReason;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NitrogenScoreEventWidget_DisplayScoreEvent) == 0x000001, "Wrong alignment on NitrogenScoreEventWidget_DisplayScoreEvent");
static_assert(sizeof(NitrogenScoreEventWidget_DisplayScoreEvent) == 0x000001, "Wrong size on NitrogenScoreEventWidget_DisplayScoreEvent");
static_assert(offsetof(NitrogenScoreEventWidget_DisplayScoreEvent, ScoreReason) == 0x000000, "Member 'NitrogenScoreEventWidget_DisplayScoreEvent::ScoreReason' has a wrong offset!");

}

