#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_ChBrowserDeviceTile

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.ExecuteUbergraph_Cr_ChBrowserDeviceTile
// 0x01E0 (0x01E0 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0128(0x00B0)()
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelected_ReturnValue_1;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile) == 0x0001E0, "Wrong size on Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, EntryPoint) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, K2Node_Event_MyGeometry) == 0x000004, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000120, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, K2Node_MakeStruct_GameplayEventData) == 0x000128, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, CallFunc_GetSelected_ReturnValue) == 0x0001D8, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile, CallFunc_GetSelected_ReturnValue_1) == 0x0001D9, "Member 'Cr_ChBrowserDeviceTile_C_ExecuteUbergraph_Cr_ChBrowserDeviceTile::CallFunc_GetSelected_ReturnValue_1' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_OnMouseLeave) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_OnMouseLeave");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_OnMouseLeave) == 0x000070, "Wrong size on Cr_ChBrowserDeviceTile_C_OnMouseLeave");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_OnMouseEnter) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_OnMouseEnter");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_OnMouseEnter) == 0x0000A8, "Wrong size on Cr_ChBrowserDeviceTile_C_OnMouseEnter");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'Cr_ChBrowserDeviceTile_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.Populate
// 0x00C8 (0x00C8 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_Populate final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FText>                           InTxMessages;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           InRxMessages;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79FC[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCr_ChBrowserMessage_C*                 CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79FD[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCr_ChBrowserMessage_C*                 CallFunc_Create_ReturnValue_1;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FE[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FF[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_Populate) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_Populate");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_Populate) == 0x0000C8, "Wrong size on Cr_ChBrowserDeviceTile_C_Populate");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, InName) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_Populate::InName' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, InTxMessages) == 0x000018, "Member 'Cr_ChBrowserDeviceTile_C_Populate::InTxMessages' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, InRxMessages) == 0x000028, "Member 'Cr_ChBrowserDeviceTile_C_Populate::InRxMessages' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Cr_ChBrowserDeviceTile_C_Populate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'Cr_ChBrowserDeviceTile_C_Populate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'Cr_ChBrowserDeviceTile_C_Populate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'Cr_ChBrowserDeviceTile_C_Populate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Create_ReturnValue) == 0x000058, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000060, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000070, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Create_ReturnValue_1) == 0x000078, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Array_Get_Item) == 0x000080, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Populate, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x0000C0, "Member 'Cr_ChBrowserDeviceTile_C_Populate::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.AddTxMessage
// 0x0048 (0x0048 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_AddTxMessage final
{
public:
	class FText                                   InMessage;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InChannel;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCr_ChBrowserMessage_C*                 CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_AddTxMessage) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_AddTxMessage");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_AddTxMessage) == 0x000048, "Wrong size on Cr_ChBrowserDeviceTile_C_AddTxMessage");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_AddTxMessage, InMessage) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_AddTxMessage::InMessage' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_AddTxMessage, InChannel) == 0x000018, "Member 'Cr_ChBrowserDeviceTile_C_AddTxMessage::InChannel' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_AddTxMessage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'Cr_ChBrowserDeviceTile_C_AddTxMessage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_AddTxMessage, CallFunc_Create_ReturnValue) == 0x000038, "Member 'Cr_ChBrowserDeviceTile_C_AddTxMessage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_AddTxMessage, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000040, "Member 'Cr_ChBrowserDeviceTile_C_AddTxMessage::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.Add Rx Message
// 0x0048 (0x0048 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_Add_Rx_Message final
{
public:
	class FText                                   InMessage;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InChannel;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCr_ChBrowserMessage_C*                 CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_Add_Rx_Message");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message) == 0x000048, "Wrong size on Cr_ChBrowserDeviceTile_C_Add_Rx_Message");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message, InMessage) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_Add_Rx_Message::InMessage' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message, InChannel) == 0x000018, "Member 'Cr_ChBrowserDeviceTile_C_Add_Rx_Message::InChannel' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'Cr_ChBrowserDeviceTile_C_Add_Rx_Message::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message, CallFunc_Create_ReturnValue) == 0x000038, "Member 'Cr_ChBrowserDeviceTile_C_Add_Rx_Message::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_Add_Rx_Message, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000040, "Member 'Cr_ChBrowserDeviceTile_C_Add_Rx_Message::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.UpdateName
// 0x0018 (0x0018 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_UpdateName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_UpdateName) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_UpdateName");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_UpdateName) == 0x000018, "Wrong size on Cr_ChBrowserDeviceTile_C_UpdateName");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_UpdateName, InName) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_UpdateName::InName' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.UpdateArt
// 0x0090 (0x0090 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_UpdateArt final
{
public:
	class UTexture2D*                             InTexture2D;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            InSlateBrush;                                      // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_UpdateArt) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_UpdateArt");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_UpdateArt) == 0x000090, "Wrong size on Cr_ChBrowserDeviceTile_C_UpdateArt");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_UpdateArt, InTexture2D) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_UpdateArt::InTexture2D' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_UpdateArt, InSlateBrush) == 0x000008, "Member 'Cr_ChBrowserDeviceTile_C_UpdateArt::InSlateBrush' has a wrong offset!");

// Function Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C.BeginFlying
// 0x0030 (0x0030 - 0x0000)
struct Cr_ChBrowserDeviceTile_C_BeginFlying final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A00[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Cr_ChBrowserDeviceTile_C_BeginFlying) == 0x000008, "Wrong alignment on Cr_ChBrowserDeviceTile_C_BeginFlying");
static_assert(sizeof(Cr_ChBrowserDeviceTile_C_BeginFlying) == 0x000030, "Wrong size on Cr_ChBrowserDeviceTile_C_BeginFlying");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000008, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x000020, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, CallFunc_HasAuthority_ReturnValue) == 0x000029, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserDeviceTile_C_BeginFlying, CallFunc_HasAuthority_ReturnValue_1) == 0x00002A, "Member 'Cr_ChBrowserDeviceTile_C_BeginFlying::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");

}

