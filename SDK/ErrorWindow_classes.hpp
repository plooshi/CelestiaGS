#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ErrorWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ErrorWindow.ErrorWindow_C
// 0x0080 (0x0560 - 0x04E0)
class UErrorWindow_C final : public UFortErrorWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Llama_3;                                           // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Llama_2;                                           // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro_1;                                           // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Llama_1;                                           // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UErrorLlama_C*                          ErrorLlama_0;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UErrorLlama_C*                          ErrorLlama_C_0;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UErrorLlama_C*                          ErrorLlama_C_1;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Separator_Down;                              // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Separator_Up;                                // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       CurLlamaAnim;                                      // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UErrorLlama_C*>                  LlamaArray;                                        // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FTimerHandle                           LlamaReverseTimer;                                 // 0x0550(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AmbientLlamaPlayTimer;                             // 0x0558(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	struct FEventReply OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent);
	void Initialize_Close_Button();
	void Construct();
	void Destruct();
	void OnBeginOutro();
	void OnBeginIntro();
	void BP_OnActivated();
	void HandleLlamaAnimFinish();
	void LlamaReverse();
	void HandleLlamaCycleFinished();
	void PlayRandomAmbientLlama();
	void StartAmbientLlamaSequence();
	void ResetLlamas();
	void OnOverrideCloseButtonText(const class FText& OverrideText);
	void ExecuteUbergraph_ErrorWindow(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ErrorWindow_C">();
	}
	static class UErrorWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UErrorWindow_C>();
	}
};
static_assert(alignof(UErrorWindow_C) == 0x000008, "Wrong alignment on UErrorWindow_C");
static_assert(sizeof(UErrorWindow_C) == 0x000560, "Wrong size on UErrorWindow_C");
static_assert(offsetof(UErrorWindow_C, UberGraphFrame) == 0x0004E0, "Member 'UErrorWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Llama_3) == 0x0004E8, "Member 'UErrorWindow_C::Llama_3' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Llama_2) == 0x0004F0, "Member 'UErrorWindow_C::Llama_2' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Intro_1) == 0x0004F8, "Member 'UErrorWindow_C::Intro_1' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Llama_1) == 0x000500, "Member 'UErrorWindow_C::Llama_1' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, ErrorLlama_0) == 0x000508, "Member 'UErrorWindow_C::ErrorLlama_0' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, ErrorLlama_C_0) == 0x000510, "Member 'UErrorWindow_C::ErrorLlama_C_0' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, ErrorLlama_C_1) == 0x000518, "Member 'UErrorWindow_C::ErrorLlama_C_1' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Image_Separator_Down) == 0x000520, "Member 'UErrorWindow_C::Image_Separator_Down' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Image_Separator_Up) == 0x000528, "Member 'UErrorWindow_C::Image_Separator_Up' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, Lightbox) == 0x000530, "Member 'UErrorWindow_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, CurLlamaAnim) == 0x000538, "Member 'UErrorWindow_C::CurLlamaAnim' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, LlamaArray) == 0x000540, "Member 'UErrorWindow_C::LlamaArray' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, LlamaReverseTimer) == 0x000550, "Member 'UErrorWindow_C::LlamaReverseTimer' has a wrong offset!");
static_assert(offsetof(UErrorWindow_C, AmbientLlamaPlayTimer) == 0x000558, "Member 'UErrorWindow_C::AmbientLlamaPlayTimer' has a wrong offset!");

}

