#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeatballVehicle_L

#include "Basic.hpp"

#include "MeatballVehicle_L_classes.hpp"
#include "MeatballVehicle_L_parameters.hpp"


namespace SDK
{

// Function MeatballVehicle_L.MeatballVehicle_L_C.ExecuteUbergraph_MeatballVehicle_L
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ExecuteUbergraph_MeatballVehicle_L(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ExecuteUbergraph_MeatballVehicle_L");

	Params::MeatballVehicle_L_C_ExecuteUbergraph_MeatballVehicle_L Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_5_OnPontoonEnteredWater__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FSphericalPontoon                Pontoon                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMeatballVehicle_L_C::BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_5_OnPontoonEnteredWater__DelegateSignature(const struct FSphericalPontoon& Pontoon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_5_OnPontoonEnteredWater__DelegateSignature");

	Params::MeatballVehicle_L_C_BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_5_OnPontoonEnteredWater__DelegateSignature Parms{};

	Parms.Pontoon = move(Pontoon);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_3_OnPontoonExitedWater__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FSphericalPontoon                Pontoon                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMeatballVehicle_L_C::BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_3_OnPontoonExitedWater__DelegateSignature(const struct FSphericalPontoon& Pontoon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_3_OnPontoonExitedWater__DelegateSignature");

	Params::MeatballVehicle_L_C_BndEvt__PontoonsComponent_K2Node_ComponentBoundEvent_3_OnPontoonExitedWater__DelegateSignature Parms{};

	Parms.Pontoon = move(Pontoon);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnEnteredWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnEnteredWaterVolume");

	Params::MeatballVehicle_L_C_OnEnteredWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnExitedWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnExitedWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnExitedWaterVolume");

	Params::MeatballVehicle_L_C_OnExitedWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.FireFF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortGameplayAbility*             GameplayAbility                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            AbilityTags                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void AMeatballVehicle_L_C::FireFF(class UFortGameplayAbility* GameplayAbility, const struct FGameplayTagContainer& AbilityTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "FireFF");

	Params::MeatballVehicle_L_C_FireFF Parms{};

	Parms.GameplayAbility = GameplayAbility;
	Parms.AbilityTags = move(AbilityTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StopStartupRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StopStartupRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StopStartupRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StopTurnRumbleBP
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StopTurnRumbleBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StopTurnRumbleBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StartTurnRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StartTurnRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StartTurnRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.PlayStartupFF
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::PlayStartupFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "PlayStartupFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StartLandRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StartLandRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StartLandRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StopLandRumbleBP
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StopLandRumbleBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StopLandRumbleBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.LandDamage
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::LandDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "LandDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.LandDamageEvent
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::LandDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "LandDamageEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnLandShakeEnd
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::OnLandShakeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnLandShakeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnLandShake
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::OnLandShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnLandShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AMeatballVehicle_L_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnDeathPlayEffects");

	Params::MeatballVehicle_L_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMeatballVehicle_L_C::BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::MeatballVehicle_L_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = move(NormalImpulse);
	Parms.Hit = move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.HitWithPickaxe
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::HitWithPickaxe(const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "HitWithPickaxe");

	Params::MeatballVehicle_L_C_HitWithPickaxe Parms{};

	Parms.HitDirection = move(HitDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnDamaged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnDamaged");

	Params::MeatballVehicle_L_C_OnDamaged Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.EffectContext = move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.RefreshDamageState
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::RefreshDamageState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "RefreshDamageState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMeatballVehicle_L_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.EventOnHealthChanged
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::EventOnHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "EventOnHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.UpdateDamageState
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::UpdateDamageState(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "UpdateDamageState");

	Params::MeatballVehicle_L_C_UpdateDamageState Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Check for Boost Ready
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Check_for_Boost_Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Check for Boost Ready");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Entered_Water_Mid
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Entered_Water_Mid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Entered_Water_Mid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Entered_Water_Engine
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Entered_Water_Engine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Entered_Water_Engine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Exited_Water_Engine
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Exited_Water_Engine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Exited_Water_Engine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Exited_Water_Mid
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Exited_Water_Mid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Exited_Water_Mid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Audio Tick Update
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::Audio_Tick_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Audio Tick Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnHoldExitStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnHoldExitStopped(class AFortPawn* ExitingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnHoldExitStopped");

	Params::MeatballVehicle_L_C_OnHoldExitStopped Parms{};

	Parms.ExitingPawn = ExitingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnHoldExitStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExitDuration                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnHoldExitStarted");

	Params::MeatballVehicle_L_C_OnHoldExitStarted Parms{};

	Parms.ExitingPawn = ExitingPawn;
	Parms.ExitDuration = ExitDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.LightningSpark
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::LightningSpark(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "LightningSpark");

	Params::MeatballVehicle_L_C_LightningSpark Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = move(Location);
	Parms.Velocity = move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BoostCameraReverse
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::BoostCameraReverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BoostCameraReverse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StartBoostRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StartBoostRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StartBoostRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BoostRumbleEnd
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::BoostRumbleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BoostRumbleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.UpdateBoostRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::UpdateBoostRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "UpdateBoostRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ReverseBoostTimeline
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::ReverseBoostTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ReverseBoostTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnPawnEnterVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SeatIdx                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnPawnEnterVehicle");

	Params::MeatballVehicle_L_C_OnPawnEnterVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.SeatIdx = SeatIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnPawnExitVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ExitSocketName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnPawnExitVehicle");

	Params::MeatballVehicle_L_C_OnPawnExitVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.ExitSocketName = ExitSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnCollisionHitEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormalImpulse                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitFrictionImpulse                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        HitSurfaceType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor, EPhysicalSurface HitSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnCollisionHitEffects");

	Params::MeatballVehicle_L_C_OnCollisionHitEffects Parms{};

	Parms.HitLocation = move(HitLocation);
	Parms.HitNormalImpulse = move(HitNormalImpulse);
	Parms.HitFrictionImpulse = move(HitFrictionImpulse);
	Parms.HitNormal = move(HitNormal);
	Parms.HitActor = HitActor;
	Parms.HitSurfaceType = HitSurfaceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.CheckWater
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::CheckWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "CheckWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnBoostFailed
// (Event, Protected, BlueprintEvent)

void AMeatballVehicle_L_C::OnBoostFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnBoostFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnBoostFinished
// (Event, Protected, BlueprintEvent)

void AMeatballVehicle_L_C::OnBoostFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnBoostFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnBoostStarted
// (Event, Protected, BlueprintEvent)

void AMeatballVehicle_L_C::OnBoostStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnBoostStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ReceiveTick");

	Params::MeatballVehicle_L_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnStopTick
// (Event, Public, BlueprintEvent)

void AMeatballVehicle_L_C::OnStopTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnStopTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StopDriverCameraShakeBP
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StopDriverCameraShakeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StopDriverCameraShakeBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StartDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StartDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StartDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StopDriverRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StopDriverRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StopDriverRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.StartDriverRumble
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::StartDriverRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "StartDriverRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.K2_ApplyCosmeticWrap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaItemWrapDefinition*        LoadedWrap                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "K2_ApplyCosmeticWrap");

	Params::MeatballVehicle_L_C_K2_ApplyCosmeticWrap Parms{};

	Parms.LoadedWrap = LoadedWrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AMeatballVehicle_L_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AMeatballVehicle_L_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BoostTimeline__UpdateFunc
// (BlueprintEvent)

void AMeatballVehicle_L_C::BoostTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BoostTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.BoostTimeline__FinishedFunc
// (BlueprintEvent)

void AMeatballVehicle_L_C::BoostTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "BoostTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.SendDamageStateToMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_Value                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::SendDamageStateToMaterial(float Param_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "SendDamageStateToMaterial");

	Params::MeatballVehicle_L_C_SendDamageStateToMaterial Parms{};

	Parms.Param_Value = Param_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ManageStateDriverEnter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Param_DriverPawn                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ManageStateDriverEnter(class AFortPlayerPawn* Param_DriverPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ManageStateDriverEnter");

	Params::MeatballVehicle_L_C_ManageStateDriverEnter Parms{};

	Parms.Param_DriverPawn = Param_DriverPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ManageStatePassengerEnter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Param_PassengerPawn                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ManageStatePassengerEnter(class AFortPlayerPawn* Param_PassengerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ManageStatePassengerEnter");

	Params::MeatballVehicle_L_C_ManageStatePassengerEnter Parms{};

	Parms.Param_PassengerPawn = Param_PassengerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ManageStateDriverExit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ManageStateDriverExit(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ManageStateDriverExit");

	Params::MeatballVehicle_L_C_ManageStateDriverExit Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.ManageStatePassengerExit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::ManageStatePassengerExit(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "ManageStatePassengerExit");

	Params::MeatballVehicle_L_C_ManageStatePassengerExit Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.PlayHapticsOnHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HitMagnitude                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::PlayHapticsOnHit(float HitMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "PlayHapticsOnHit");

	Params::MeatballVehicle_L_C_PlayHapticsOnHit Parms{};

	Parms.HitMagnitude = HitMagnitude;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.UpdateDynamicCameraShake
// (Public, BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::UpdateDynamicCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "UpdateDynamicCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnRep_IsLegendary
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::OnRep_IsLegendary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnRep_IsLegendary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.IsNiagaraEffectsEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMeatballVehicle_L_C::IsNiagaraEffectsEnabled(bool* IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "IsNiagaraEffectsEnabled");

	Params::MeatballVehicle_L_C_IsNiagaraEffectsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.DetermineWaterMovementForLazyUpdateMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Forward_Dot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Right_Dot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Output__Vector                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::DetermineWaterMovementForLazyUpdateMesh(float Forward_Dot, float Right_Dot, struct FVector* Output__Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "DetermineWaterMovementForLazyUpdateMesh");

	Params::MeatballVehicle_L_C_DetermineWaterMovementForLazyUpdateMesh Parms{};

	Parms.Forward_Dot = Forward_Dot;
	Parms.Right_Dot = Right_Dot;

	UObject::ProcessEvent(Func, &Parms);

	if (Output__Vector != nullptr)
		*Output__Vector = move(Parms.Output__Vector);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.calculateTurnSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   TurnDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TurnSpeed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMeatballVehicle_L_C::CalculateTurnSpeed(float* TurnDirection, float* TurnSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "calculateTurnSpeed");

	Params::MeatballVehicle_L_C_CalculateTurnSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnDirection != nullptr)
		*TurnDirection = Parms.TurnDirection;

	if (TurnSpeed != nullptr)
		*TurnSpeed = Parms.TurnSpeed;
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.NiagaraUserVariables
// (Public, BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::NiagaraUserVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "NiagaraUserVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.CanDamageBuilding
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AMeatballVehicle_L_C::CanDamageBuilding(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "CanDamageBuilding");

	Params::MeatballVehicle_L_C_CanDamageBuilding Parms{};

	Parms.Hit = move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.IsOnGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AMeatballVehicle_L_C::IsOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "IsOnGround");

	Params::MeatballVehicle_L_C_IsOnGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MeatballVehicle_L.MeatballVehicle_L_C.OnRep_LandDamageFrequency
// (BlueprintCallable, BlueprintEvent)

void AMeatballVehicle_L_C::OnRep_LandDamageFrequency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeatballVehicle_L_C", "OnRep_LandDamageFrequency");

	UObject::ProcessEvent(Func, nullptr);
}

}

