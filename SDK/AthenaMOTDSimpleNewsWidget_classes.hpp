#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMOTDSimpleNewsWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaMOTDSimpleNewsWidget.AthenaMOTDSimpleNewsWidget_C
// 0x0058 (0x0368 - 0x0310)
class UAthenaMOTDSimpleNewsWidget_C final : public UFortAthenaMOTDSimpleNewsWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Backplate;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GlowBackground;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Border;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ColorFade;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxButtonSize;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FColor                                 DarkDefaultColor;                                  // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 LightDefaultColor;                                 // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 PreviewDarkColor;                                  // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TestPreviewColors;                                 // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B0D[0x3];                                     // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 PreviewLightColor;                                 // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetDynamicColors(const struct FColor& Dark, const struct FColor& Light);
	void PreConstruct(bool IsDesignTime);
	void OnPopulateNews(const struct FAthenaNewsEntry& NewsEntry);
	void BP_OnActivated();
	void ExecuteUbergraph_AthenaMOTDSimpleNewsWidget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaMOTDSimpleNewsWidget_C">();
	}
	static class UAthenaMOTDSimpleNewsWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaMOTDSimpleNewsWidget_C>();
	}
};
static_assert(alignof(UAthenaMOTDSimpleNewsWidget_C) == 0x000008, "Wrong alignment on UAthenaMOTDSimpleNewsWidget_C");
static_assert(sizeof(UAthenaMOTDSimpleNewsWidget_C) == 0x000368, "Wrong size on UAthenaMOTDSimpleNewsWidget_C");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, UberGraphFrame) == 0x000310, "Member 'UAthenaMOTDSimpleNewsWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, Intro) == 0x000318, "Member 'UAthenaMOTDSimpleNewsWidget_C::Intro' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, Backplate) == 0x000320, "Member 'UAthenaMOTDSimpleNewsWidget_C::Backplate' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, GlowBackground) == 0x000328, "Member 'UAthenaMOTDSimpleNewsWidget_C::GlowBackground' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, Image_Background) == 0x000330, "Member 'UAthenaMOTDSimpleNewsWidget_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, Image_Border) == 0x000338, "Member 'UAthenaMOTDSimpleNewsWidget_C::Image_Border' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, Image_ColorFade) == 0x000340, "Member 'UAthenaMOTDSimpleNewsWidget_C::Image_ColorFade' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, SizeBoxButtonSize) == 0x000348, "Member 'UAthenaMOTDSimpleNewsWidget_C::SizeBoxButtonSize' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, DarkDefaultColor) == 0x000350, "Member 'UAthenaMOTDSimpleNewsWidget_C::DarkDefaultColor' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, LightDefaultColor) == 0x000354, "Member 'UAthenaMOTDSimpleNewsWidget_C::LightDefaultColor' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, PreviewDarkColor) == 0x000358, "Member 'UAthenaMOTDSimpleNewsWidget_C::PreviewDarkColor' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, TestPreviewColors) == 0x00035C, "Member 'UAthenaMOTDSimpleNewsWidget_C::TestPreviewColors' has a wrong offset!");
static_assert(offsetof(UAthenaMOTDSimpleNewsWidget_C, PreviewLightColor) == 0x000360, "Member 'UAthenaMOTDSimpleNewsWidget_C::PreviewLightColor' has a wrong offset!");

}

