#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaLocalPlayerHitPointInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaLocalPlayerHitPointInfo.AthenaLocalPlayerHitPointInfo_C
// 0x0050 (0x02F8 - 0x02A8)
class UAthenaLocalPlayerHitPointInfo_C final : public UAthenaPlayerHitPointInfo
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeVehicle;                                       // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeStatus;                                        // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UAthenaCurieStatusWidget_C*             AthenaCurieStatusWidget;                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_CNStorm2_C*          AthenaHitPointBar_CNStorm2;                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarHealth;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarShield;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarVehicleHealth;                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Use_Large_Format;                                  // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BA2[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VehicleHealthBarWidthOverride;                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleHealthBarHeightOverride;                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InVehicle;                                         // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFaded;                                           // 0x02F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Fade_on_Full;                                      // 0x02F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnCreativeModeEnabledChanged(bool Param_bIsEnabled);
	void OnCreativeQuickbarEquippedChanged(bool bIsEquipped);
	void HandleExitVehicle();
	void HandleEnterVehicle();
	void Construct();
	void OnPawnHealthChanged_Event();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_AthenaLocalPlayerHitPointInfo(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaLocalPlayerHitPointInfo_C">();
	}
	static class UAthenaLocalPlayerHitPointInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaLocalPlayerHitPointInfo_C>();
	}
};
static_assert(alignof(UAthenaLocalPlayerHitPointInfo_C) == 0x000008, "Wrong alignment on UAthenaLocalPlayerHitPointInfo_C");
static_assert(sizeof(UAthenaLocalPlayerHitPointInfo_C) == 0x0002F8, "Wrong size on UAthenaLocalPlayerHitPointInfo_C");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, UberGraphFrame) == 0x0002A8, "Member 'UAthenaLocalPlayerHitPointInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FadeVehicle) == 0x0002B0, "Member 'UAthenaLocalPlayerHitPointInfo_C::FadeVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FadeStatus) == 0x0002B8, "Member 'UAthenaLocalPlayerHitPointInfo_C::FadeStatus' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, AthenaCurieStatusWidget) == 0x0002C0, "Member 'UAthenaLocalPlayerHitPointInfo_C::AthenaCurieStatusWidget' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, AthenaHitPointBar_CNStorm2) == 0x0002C8, "Member 'UAthenaLocalPlayerHitPointInfo_C::AthenaHitPointBar_CNStorm2' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarHealth) == 0x0002D0, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarHealth' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarShield) == 0x0002D8, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarShield' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarVehicleHealth) == 0x0002E0, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarVehicleHealth' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, Use_Large_Format) == 0x0002E8, "Member 'UAthenaLocalPlayerHitPointInfo_C::Use_Large_Format' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, VehicleHealthBarWidthOverride) == 0x0002EC, "Member 'UAthenaLocalPlayerHitPointInfo_C::VehicleHealthBarWidthOverride' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, VehicleHealthBarHeightOverride) == 0x0002F0, "Member 'UAthenaLocalPlayerHitPointInfo_C::VehicleHealthBarHeightOverride' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, InVehicle) == 0x0002F4, "Member 'UAthenaLocalPlayerHitPointInfo_C::InVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, IsFaded) == 0x0002F5, "Member 'UAthenaLocalPlayerHitPointInfo_C::IsFaded' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, Fade_on_Full) == 0x0002F6, "Member 'UAthenaLocalPlayerHitPointInfo_C::Fade_on_Full' has a wrong offset!");

}

