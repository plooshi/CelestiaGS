#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeasonalFirework

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SeasonalFirework.BP_SeasonalFirework_C.ExecuteUbergraph_BP_SeasonalFirework
// 0x01C8 (0x01C8 - 0x0000)
struct BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7616[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7617[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0068(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7618[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7619[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761A[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0138(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework) == 0x000008, "Wrong alignment on BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework");
static_assert(sizeof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework) == 0x0001C8, "Wrong size on BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, EntryPoint) == 0x000000, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_K2_SetTimer_ReturnValue) == 0x000020, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_MyComp) == 0x000028, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_Other) == 0x000030, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_OtherComp) == 0x000038, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_bSelfMoved) == 0x000040, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_HitLocation) == 0x000044, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_HitNormal) == 0x000050, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_NormalImpulse) == 0x00005C, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_Event_Hit) == 0x000068, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F4, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, K2Node_SwitchInteger_CmpSuccess) == 0x000100, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000108, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_GetController_ReturnValue) == 0x000118, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000128, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_EvaluateCurveTableRow_OutXY) == 0x00012C, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_EvaluateCurveTableRow_ReturnValue) == 0x000130, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_EvaluateCurveTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_FTrunc_ReturnValue) == 0x000134, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework, CallFunc_MakeHitResult_ReturnValue) == 0x000138, "Member 'BP_SeasonalFirework_C_ExecuteUbergraph_BP_SeasonalFirework::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function BP_SeasonalFirework.BP_SeasonalFirework_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SeasonalFirework_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SeasonalFirework_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_SeasonalFirework_C_ReceiveHit");
static_assert(sizeof(BP_SeasonalFirework_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_SeasonalFirework_C_ReceiveHit");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_SeasonalFirework_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, Other) == 0x000008, "Member 'BP_SeasonalFirework_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_SeasonalFirework_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_SeasonalFirework_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_SeasonalFirework_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_SeasonalFirework_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_SeasonalFirework_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_SeasonalFirework_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_SeasonalFirework_C_ReceiveHit::Hit' has a wrong offset!");

}

