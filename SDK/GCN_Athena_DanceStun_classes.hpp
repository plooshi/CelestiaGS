#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Athena_DanceStun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Athena_DanceStun.GCN_Athena_DanceStun_C
// 0x0048 (0x0360 - 0x0318)
class AGCN_Athena_DanceStun_C final : public AFortGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AnimPivot;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  PlayerPawn;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeRemaining;                                     // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72D9[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Duration;                                          // 0x0340(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GCN_Athena_DanceStun(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Athena_DanceStun_C">();
	}
	static class AGCN_Athena_DanceStun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Athena_DanceStun_C>();
	}
};
static_assert(alignof(AGCN_Athena_DanceStun_C) == 0x000008, "Wrong alignment on AGCN_Athena_DanceStun_C");
static_assert(sizeof(AGCN_Athena_DanceStun_C) == 0x000360, "Wrong size on AGCN_Athena_DanceStun_C");
static_assert(offsetof(AGCN_Athena_DanceStun_C, UberGraphFrame) == 0x000318, "Member 'AGCN_Athena_DanceStun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_DanceStun_C, StaticMesh) == 0x000320, "Member 'AGCN_Athena_DanceStun_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_DanceStun_C, AnimPivot) == 0x000328, "Member 'AGCN_Athena_DanceStun_C::AnimPivot' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_DanceStun_C, PlayerPawn) == 0x000330, "Member 'AGCN_Athena_DanceStun_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_DanceStun_C, TimeRemaining) == 0x000338, "Member 'AGCN_Athena_DanceStun_C::TimeRemaining' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_DanceStun_C, Duration) == 0x000340, "Member 'AGCN_Athena_DanceStun_C::Duration' has a wrong offset!");

}

