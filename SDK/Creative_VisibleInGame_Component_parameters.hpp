#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Creative_VisibleInGame_Component

#include "Basic.hpp"

#include "Enum_ForcedValueDuringGame_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "EVisibleInGameState_structs.hpp"


namespace SDK::Params
{

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.On Visibility Changed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature) == 0x000001, "Wrong alignment on Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature");
static_assert(sizeof(Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature) == 0x000001, "Wrong size on Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature");
static_assert(offsetof(Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature, Visible) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_On_Visibility_Changed__DelegateSignature::Visible' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.ExecuteUbergraph_Creative_VisibleInGame_Component
// 0x0088 (0x0088 - 0x0000)
struct Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6506[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6507[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          K2Node_CustomEvent_Minigame_1;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsInPlayMode;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6508[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameFromVolume_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6509[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, bool bIsInPlayMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_650A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          K2Node_CustomEvent_Minigame;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            K2Node_CustomEvent_MinigameState;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_650B[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component");
static_assert(sizeof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component) == 0x000088, "Wrong size on Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, EntryPoint) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_GetVolumeManager_OutIsValid) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CustomEvent_Minigame_1) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CustomEvent_Minigame_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CustomEvent_bIsInPlayMode) == 0x000020, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CustomEvent_bIsInPlayMode' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_GetMinigameFromVolume_ReturnValue) == 0x000030, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_GetMinigameFromVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CustomEvent_Minigame) == 0x000068, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CustomEvent_Minigame' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CustomEvent_MinigameState) == 0x000070, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CustomEvent_MinigameState' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, K2Node_CreateDelegate_OutputDelegate_2) == 0x000074, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'Creative_VisibleInGame_Component_C_ExecuteUbergraph_Creative_VisibleInGame_Component::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnMinigameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_OnMinigameStateChanged final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            MinigameState;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_OnMinigameStateChanged) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_OnMinigameStateChanged");
static_assert(sizeof(Creative_VisibleInGame_Component_C_OnMinigameStateChanged) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_OnMinigameStateChanged");
static_assert(offsetof(Creative_VisibleInGame_Component_C_OnMinigameStateChanged, Minigame) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_OnMinigameStateChanged::Minigame' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_OnMinigameStateChanged, MinigameState) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_OnMinigameStateChanged::MinigameState' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.OnPlayModeChangedDelegate
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInPlayMode;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate");
static_assert(sizeof(Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate");
static_assert(offsetof(Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate, Minigame) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate::Minigame' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate, bIsInPlayMode) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_OnPlayModeChangedDelegate::bIsInPlayMode' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Get Visibility Components
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_Get_Visibility_Components final
{
public:
	TArray<class USceneComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Get_Visibility_Components) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Get_Visibility_Components");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Get_Visibility_Components) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_Get_Visibility_Components");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Get_Visibility_Components, Components) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Get_Visibility_Components::Components' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Visibility
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Visibility final
{
public:
	TArray<class USceneComponent*>                CallFunc_Get_Visibility_Components_Components;     // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Visibility) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Visibility");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Visibility) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_Update_Visibility");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Visibility, CallFunc_Get_Visibility_Components_Components) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Visibility::CallFunc_Get_Visibility_Components_Components' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visiblity During Phase
// 0x0018 (0x0018 - 0x0000)
struct Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase final
{
public:
	EVisibleInGameState                           New_Visible_During_Phase;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_650C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase) == 0x000018, "Wrong size on Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase, New_Visible_During_Phase) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase::New_Visible_During_Phase' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Creative_VisibleInGame_Component_C_Set_Visiblity_During_Phase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Component Visibility
// 0x0040 (0x0040 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Component_Visibility final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650D[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               K2Node_DynamicCast_AsParticle_System_Component;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_DynamicCast_AsAudio_Component;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Component_Visibility) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Component_Visibility");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Component_Visibility) == 0x000040, "Wrong size on Creative_VisibleInGame_Component_C_Update_Component_Visibility");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, Component) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, Visible) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::Visible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_AsParticle_System_Component) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_AsParticle_System_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_AsAudio_Component) == 0x000020, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_AsAudio_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_AsPrimitive_Component) == 0x000030, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Component_Visibility, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'Creative_VisibleInGame_Component_C_Update_Component_Visibility::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Primitive Component Collision
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision final
{
public:
	class UPrimitiveComponent*                    Primitive_Component;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_Map_Find_Value;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, Primitive_Component) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::Primitive_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, Visible) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::Visible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, CallFunc_Map_Find_Value) == 0x00000A, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, CallFunc_Map_Find_ReturnValue) == 0x00000B, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, Temp_bool_Variable) == 0x00000C, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, Temp_bool_Variable_1) == 0x00000D, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, K2Node_Select_Default) == 0x00000E, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision, K2Node_Select_Default_1) == 0x00000F, "Member 'Creative_VisibleInGame_Component_C_Update_Primitive_Component_Collision::K2Node_Select_Default_1' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Audio Component
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Audio_Component final
{
public:
	class UAudioComponent*                        Audio_Component;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Audio_Component) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Audio_Component");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Audio_Component) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_Update_Audio_Component");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Audio_Component, Audio_Component) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Audio_Component::Audio_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Audio_Component, Visible) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Update_Audio_Component::Visible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Audio_Component, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Creative_VisibleInGame_Component_C_Update_Audio_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Particle Component
// 0x0010 (0x0010 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Particle_Component final
{
public:
	class UParticleSystemComponent*               Particle_Component;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Particle_Component) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Particle_Component");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Particle_Component) == 0x000010, "Wrong size on Creative_VisibleInGame_Component_C_Update_Particle_Component");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Particle_Component, Particle_Component) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Particle_Component::Particle_Component' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Particle_Component, Visible) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Update_Particle_Component::Visible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Particle_Component, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Creative_VisibleInGame_Component_C_Update_Particle_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Is In Play Mode
// 0x0040 (0x0040 - 0x0000)
struct Creative_VisibleInGame_Component_C_Is_In_Play_Mode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6510[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6511[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6512[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForActor_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadOnly_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Is_In_Play_Mode");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode) == 0x000040, "Wrong size on Creative_VisibleInGame_Component_C_Is_In_Play_Mode");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, ReturnValue) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_GetVolumeManager_OutIsValid) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_GetVolumeForActor_ReturnValue) == 0x000028, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_GetVolumeForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000030, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_IsReadOnly_ReturnValue) == 0x000038, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_IsReadOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_IsInPlayMode_ReturnValue) == 0x00003B, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Is_In_Play_Mode, CallFunc_BooleanOR_ReturnValue_1) == 0x00003D, "Member 'Creative_VisibleInGame_Component_C_Is_In_Play_Mode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visibility Components
// 0x0020 (0x0020 - 0x0000)
struct Creative_VisibleInGame_Component_C_Set_Visibility_Components final
{
public:
	TArray<class USceneComponent*>                Scene_Components;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<ECollisionEnabled>                     Local_Collision_List;                              // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Set_Visibility_Components) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Set_Visibility_Components");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Set_Visibility_Components) == 0x000020, "Wrong size on Creative_VisibleInGame_Component_C_Set_Visibility_Components");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visibility_Components, Scene_Components) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Set_Visibility_Components::Scene_Components' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visibility_Components, Local_Collision_List) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Set_Visibility_Components::Local_Collision_List' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Should Be Visible
// 0x000E (0x000E - 0x0000)
struct Creative_VisibleInGame_Component_C_Should_Be_Visible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_In_Play_Mode_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ForcedValueDuringGame                    Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Should_Be_Visible) == 0x000001, "Wrong alignment on Creative_VisibleInGame_Component_C_Should_Be_Visible");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Should_Be_Visible) == 0x00000E, "Wrong size on Creative_VisibleInGame_Component_C_Should_Be_Visible");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, Visible) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::Visible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, Temp_bool_Variable) == 0x000001, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_Is_In_Play_Mode_ReturnValue) == 0x000002, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_Is_In_Play_Mode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, Temp_bool_Variable_1) == 0x000003, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, Temp_byte_Variable) == 0x000005, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000009, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, CallFunc_BooleanOR_ReturnValue_1) == 0x00000C, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Should_Be_Visible, K2Node_Select_Default) == 0x00000D, "Member 'Creative_VisibleInGame_Component_C_Should_Be_Visible::K2Node_Select_Default' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Set Visibility Components with Collision
// 0x0060 (0x0060 - 0x0000)
struct Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision final
{
public:
	TMap<class USceneComponent*, ECollisionEnabled> Collision_Overrides;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision) == 0x000060, "Wrong size on Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision, Collision_Overrides) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision::Collision_Overrides' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'Creative_VisibleInGame_Component_C_Set_Visibility_Components_with_Collision::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Array Visibility
// 0x0040 (0x0040 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Array_Visibility final
{
public:
	TArray<class USceneComponent*>                Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CacheVisible;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6513[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6514[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6515[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Be_Visible_Visible;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Array_Visibility) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Array_Visibility");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Array_Visibility) == 0x000040, "Wrong size on Creative_VisibleInGame_Component_C_Update_Array_Visibility");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, Array) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::Array' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CacheVisible) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CacheVisible' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Conv_IntToBool_ReturnValue) == 0x000020, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Array_Visibility, CallFunc_Should_Be_Visible_Visible) == 0x00003C, "Member 'Creative_VisibleInGame_Component_C_Update_Array_Visibility::CallFunc_Should_Be_Visible_Visible' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.SetForcedVisibilityDuringGame
// 0x0020 (0x0020 - 0x0000)
struct Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame final
{
public:
	Enum_ForcedValueDuringGame                    NewForcedVisibilityDuringGame;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6516[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame");
static_assert(sizeof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame) == 0x000020, "Wrong size on Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, NewForcedVisibilityDuringGame) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::NewForcedVisibilityDuringGame' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'Creative_VisibleInGame_Component_C_SetForcedVisibilityDuringGame::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_VisibleInGame_Component.Creative_VisibleInGame_Component_C.Update Foliage
// 0x0020 (0x0020 - 0x0000)
struct Creative_VisibleInGame_Component_C_Update_Foliage final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6517[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_VisibleInGame_Component_C_Update_Foliage) == 0x000008, "Wrong alignment on Creative_VisibleInGame_Component_C_Update_Foliage");
static_assert(sizeof(Creative_VisibleInGame_Component_C_Update_Foliage) == 0x000020, "Wrong size on Creative_VisibleInGame_Component_C_Update_Foliage");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Foliage, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'Creative_VisibleInGame_Component_C_Update_Foliage::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Foliage, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Creative_VisibleInGame_Component_C_Update_Foliage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Foliage, K2Node_DynamicCast_AsBuilding_Actor) == 0x000010, "Member 'Creative_VisibleInGame_Component_C_Update_Foliage::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(Creative_VisibleInGame_Component_C_Update_Foliage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Creative_VisibleInGame_Component_C_Update_Foliage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

