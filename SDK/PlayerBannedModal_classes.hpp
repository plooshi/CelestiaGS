#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBannedModal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerBannedModal.PlayerBannedModal_C
// 0x00F8 (0x0540 - 0x0448)
class UPlayerBannedModal_C final : public UFortPlayerBanned
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BanMessage;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CloseButton;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Disclaimer;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Severe;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimeRemaining;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Title;                                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_1;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_2;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_3;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_SeverityImage;                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          AckSucceeded;                                      // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D0[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BanInformation;                                    // 0x04B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnCloseSucceeded;                                  // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         TryCount;                                          // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWarning;                                        // 0x04DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D1[0x3];                                     // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMcpBanInfo                            McpBanInfo;                                        // 0x04E0(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BanType;                                           // 0x0520(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsCompetitiveBan;                                 // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsTeamingWithCheaterBan;                          // 0x0539(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void HandleCloseAttempted();
	void RemoveModal();
	class FText BanEnumToText(EPlayerBanReasons Param_Index, const class FString& ExploitProgramName, EPlayerCompetitiveBanReasons Competitive_Ban_Reason, bool Param_bIsCompetitiveBan);
	void OnBanAck(bool Success);
	void UpdateTimeRemaining(const class FText& Time);
	void DisableButton(bool Param_DisableButton);
	void UpdateText(const class FText& Param_Title, const class FText& Content);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_16_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BP_OnActivated();
	void ExecuteUbergraph_PlayerBannedModal(int32 EntryPoint);
	void OnCloseSucceeded__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerBannedModal_C">();
	}
	static class UPlayerBannedModal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBannedModal_C>();
	}
};
static_assert(alignof(UPlayerBannedModal_C) == 0x000008, "Wrong alignment on UPlayerBannedModal_C");
static_assert(sizeof(UPlayerBannedModal_C) == 0x000540, "Wrong size on UPlayerBannedModal_C");
static_assert(offsetof(UPlayerBannedModal_C, UberGraphFrame) == 0x000448, "Member 'UPlayerBannedModal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanMessage) == 0x000450, "Member 'UPlayerBannedModal_C::BanMessage' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, CloseButton) == 0x000458, "Member 'UPlayerBannedModal_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Disclaimer) == 0x000460, "Member 'UPlayerBannedModal_C::Disclaimer' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Image_Severe) == 0x000468, "Member 'UPlayerBannedModal_C::Image_Severe' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Lightbox) == 0x000470, "Member 'UPlayerBannedModal_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, TimeRemaining) == 0x000478, "Member 'UPlayerBannedModal_C::TimeRemaining' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Title) == 0x000480, "Member 'UPlayerBannedModal_C::Title' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_1) == 0x000488, "Member 'UPlayerBannedModal_C::Triangles_1' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_2) == 0x000490, "Member 'UPlayerBannedModal_C::Triangles_2' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_3) == 0x000498, "Member 'UPlayerBannedModal_C::Triangles_3' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, WidgetSwitcher_SeverityImage) == 0x0004A0, "Member 'UPlayerBannedModal_C::WidgetSwitcher_SeverityImage' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, AckSucceeded) == 0x0004A8, "Member 'UPlayerBannedModal_C::AckSucceeded' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanInformation) == 0x0004B0, "Member 'UPlayerBannedModal_C::BanInformation' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, OnCloseSucceeded) == 0x0004C8, "Member 'UPlayerBannedModal_C::OnCloseSucceeded' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, TryCount) == 0x0004D8, "Member 'UPlayerBannedModal_C::TryCount' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsWarning) == 0x0004DC, "Member 'UPlayerBannedModal_C::bIsWarning' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, McpBanInfo) == 0x0004E0, "Member 'UPlayerBannedModal_C::McpBanInfo' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanType) == 0x000520, "Member 'UPlayerBannedModal_C::BanType' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsCompetitiveBan) == 0x000538, "Member 'UPlayerBannedModal_C::bIsCompetitiveBan' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsTeamingWithCheaterBan) == 0x000539, "Member 'UPlayerBannedModal_C::bIsTeamingWithCheaterBan' has a wrong offset!");

}

