#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDetails

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TournamentDetails.TournamentDetails_C.CreateScoringWidgets
// 0x0098 (0x0098 - 0x0000)
struct TournamentDetails_C_CreateScoringWidgets final
{
public:
	class FString                                 TournamentSeriesId;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TournamentId;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFortShowdownScoringRuleInfo>   CallFunc_FindTournamentScoringRules_ReturnValue;   // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortShowdownScoringRuleInfo           CallFunc_Array_Get_Item;                           // 0x0038(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76D9[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76DA[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76DB[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShowdownTournamentDetailsScoringRule_C* CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76DC[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76DD[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_CreateScoringWidgets) == 0x000008, "Wrong alignment on TournamentDetails_C_CreateScoringWidgets");
static_assert(sizeof(TournamentDetails_C_CreateScoringWidgets) == 0x000098, "Wrong size on TournamentDetails_C_CreateScoringWidgets");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, TournamentSeriesId) == 0x000000, "Member 'TournamentDetails_C_CreateScoringWidgets::TournamentSeriesId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, TournamentId) == 0x000010, "Member 'TournamentDetails_C_CreateScoringWidgets::TournamentId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_FindTournamentScoringRules_ReturnValue) == 0x000020, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_FindTournamentScoringRules_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_int_Array_Index_Variable) == 0x000030, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Array_Get_Item) == 0x000038, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Divide_IntInt_ReturnValue) == 0x000058, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00005C, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_Create_ReturnValue) == 0x000070, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_bool_Variable) == 0x000078, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, K2Node_Select_Default) == 0x00007C, "Member 'TournamentDetails_C_CreateScoringWidgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000080, "Member 'TournamentDetails_C_CreateScoringWidgets::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_int_Variable) == 0x000088, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_int_Variable_1) == 0x00008C, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, Temp_bool_Variable_1) == 0x000090, "Member 'TournamentDetails_C_CreateScoringWidgets::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_CreateScoringWidgets, K2Node_Select_Default_1) == 0x000094, "Member 'TournamentDetails_C_CreateScoringWidgets::K2Node_Select_Default_1' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.OnHandleBack
// 0x0002 (0x0002 - 0x0000)
struct TournamentDetails_C_OnHandleBack final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Back_Passthrough;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_OnHandleBack) == 0x000001, "Wrong alignment on TournamentDetails_C_OnHandleBack");
static_assert(sizeof(TournamentDetails_C_OnHandleBack) == 0x000002, "Wrong size on TournamentDetails_C_OnHandleBack");
static_assert(offsetof(TournamentDetails_C_OnHandleBack, bResult) == 0x000000, "Member 'TournamentDetails_C_OnHandleBack::bResult' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_OnHandleBack, CallFunc_Handle_Back_Passthrough) == 0x000001, "Member 'TournamentDetails_C_OnHandleBack::CallFunc_Handle_Back_Passthrough' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.RefreshViolators
// 0x00C0 (0x00C0 - 0x0000)
struct TournamentDetails_C_RefreshViolators final
{
public:
	class UShowdownEventTile_C*                   FocusedEvent;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumEventRounds_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76DE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWindowRoundDisplayString_ReturnValue;  // 0x0010(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0028(0x0018)()
	int32                                         CallFunc_GetEventWindowRoundNumber_ReturnValue;    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNullItem_Is_Null_Item;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNullItem_Is_Null_Item_1;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76DF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0068(0x0018)()
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76E0[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76E1[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76E2[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76E3[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEventWindowRoundNumber_ReturnValue_1;  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_RefreshViolators) == 0x000008, "Wrong alignment on TournamentDetails_C_RefreshViolators");
static_assert(sizeof(TournamentDetails_C_RefreshViolators) == 0x0000C0, "Wrong size on TournamentDetails_C_RefreshViolators");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, FocusedEvent) == 0x000000, "Member 'TournamentDetails_C_RefreshViolators::FocusedEvent' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetNumEventRounds_ReturnValue) == 0x000008, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetNumEventRounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetWindowRoundDisplayString_ReturnValue) == 0x000010, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetWindowRoundDisplayString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_TextToUpper_ReturnValue) == 0x000028, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetEventWindowRoundNumber_ReturnValue) == 0x000040, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetEventWindowRoundNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_IsNullItem_Is_Null_Item) == 0x000044, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_IsNullItem_Is_Null_Item' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_IsNullItem_Is_Null_Item_1) == 0x000045, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_IsNullItem_Is_Null_Item_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_BooleanOR_ReturnValue) == 0x000046, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_Not_PreBool_ReturnValue) == 0x000047, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_TextToUpper_ReturnValue_1) == 0x000068, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, K2Node_DynamicCast_AsShowdown_Event_Tile) == 0x000080, "Member 'TournamentDetails_C_RefreshViolators::K2Node_DynamicCast_AsShowdown_Event_Tile' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'TournamentDetails_C_RefreshViolators::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, Temp_int_Variable) == 0x00008C, "Member 'TournamentDetails_C_RefreshViolators::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetChildAt_ReturnValue) == 0x000098, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetChildrenCount_ReturnValue) == 0x0000A0, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, K2Node_DynamicCast_AsShowdown_Event_Tile_1) == 0x0000A8, "Member 'TournamentDetails_C_RefreshViolators::K2Node_DynamicCast_AsShowdown_Event_Tile_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'TournamentDetails_C_RefreshViolators::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B1, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_GetEventWindowRoundNumber_ReturnValue_1) == 0x0000B4, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_GetEventWindowRoundNumber_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshViolators, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'TournamentDetails_C_RefreshViolators::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.Handle_Back
// 0x000C (0x000C - 0x0000)
struct TournamentDetails_C_Handle_Back final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76E4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_Handle_Back) == 0x000004, "Wrong alignment on TournamentDetails_C_Handle_Back");
static_assert(sizeof(TournamentDetails_C_Handle_Back) == 0x00000C, "Wrong size on TournamentDetails_C_Handle_Back");
static_assert(offsetof(TournamentDetails_C_Handle_Back, PassThrough) == 0x000000, "Member 'TournamentDetails_C_Handle_Back::PassThrough' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Handle_Back, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'TournamentDetails_C_Handle_Back::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Handle_Back, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'TournamentDetails_C_Handle_Back::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Handle_Back, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'TournamentDetails_C_Handle_Back::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Handle_Back, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00000A, "Member 'TournamentDetails_C_Handle_Back::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.RefreshDetailsPanel
// 0x0180 (0x0180 - 0x0000)
struct TournamentDetails_C_RefreshDetailsPanel final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULeaderboardListViewWrapper_C*          K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76E5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UEventsSimpleButton_C*>          K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76E6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76E7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76E8[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76E9[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76EA[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76EB[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00B0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76EC[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D0(0x0018)()
	float                                         CallFunc_BreakColor_R;                             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_H;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_S;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_V;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_A;                               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76ED[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0120(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0148(0x0028)()
	class FString                                 CallFunc_GetTournamentId_ReturnValue;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_RefreshDetailsPanel) == 0x000008, "Wrong alignment on TournamentDetails_C_RefreshDetailsPanel");
static_assert(sizeof(TournamentDetails_C_RefreshDetailsPanel) == 0x000180, "Wrong size on TournamentDetails_C_RefreshDetailsPanel");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetEffectMaterial_ReturnValue) == 0x000000, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper) == 0x000008, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, Temp_int_Array_Index_Variable) == 0x000014, "Member 'TournamentDetails_C_RefreshDetailsPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_MakeArray_Array) == 0x000018, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Array_Get_Item) == 0x000028, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000038, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, Temp_byte_Variable) == 0x000048, "Member 'TournamentDetails_C_RefreshDetailsPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetEffectMaterial_ReturnValue_1) == 0x000050, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetEffectMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, Temp_byte_Variable_1) == 0x000058, "Member 'TournamentDetails_C_RefreshDetailsPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'TournamentDetails_C_RefreshDetailsPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000060, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, Temp_bool_Variable) == 0x000070, "Member 'TournamentDetails_C_RefreshDetailsPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_TextToUpper_ReturnValue) == 0x0000B0, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_Select_Default) == 0x0000C8, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D0, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_BreakColor_R) == 0x0000E8, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_BreakColor_G) == 0x0000EC, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_BreakColor_B) == 0x0000F0, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_BreakColor_A) == 0x0000F4, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_MakeColor_ReturnValue) == 0x0000F8, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_RGBToHSV_H) == 0x000108, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_RGBToHSV_H' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_RGBToHSV_S) == 0x00010C, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_RGBToHSV_S' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_RGBToHSV_V) == 0x000110, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_RGBToHSV_V' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_RGBToHSV_A) == 0x000114, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_RGBToHSV_A' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_Less_FloatFloat_ReturnValue) == 0x000118, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_MakeStruct_SlateColor) == 0x000120, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, K2Node_MakeStruct_SlateColor_1) == 0x000148, "Member 'TournamentDetails_C_RefreshDetailsPanel::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshDetailsPanel, CallFunc_GetTournamentId_ReturnValue) == 0x000170, "Member 'TournamentDetails_C_RefreshDetailsPanel::CallFunc_GetTournamentId_ReturnValue' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.RefreshOverviewPanel
// 0x03C0 (0x03C0 - 0x0000)
struct TournamentDetails_C_RefreshOverviewPanel final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76EE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	EFortShowdownMatchType                        Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76EF[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F0[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00D8(0x0018)()
	EFortShowdownEventState                       Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76F1[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_9;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01B8(0x0018)()
	EFortShowdownEventState                       CallFunc_GetTournamentTimeState_ReturnValue;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortShowdownMatchType                        CallFunc_GetTournamentMatchType_ReturnValue;       // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76F2[0x5];                                     // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x01D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x01E8(0x0018)()
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0210(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0228(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0240(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0258(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_2;                // 0x0270(0x0018)()
	struct FTimespan                              CallFunc_GetTournamentTimeLeft_ReturnValue;        // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEventTimespanAsText_ReturnValue;       // 0x0290(0x0018)()
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76F3[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F4[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0308(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F5[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0320(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0338(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0350(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0368(0x0018)()
	class FString                                 CallFunc_GetTournamentId_ReturnValue;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0390(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_3;                // 0x03A8(0x0018)()
};
static_assert(alignof(TournamentDetails_C_RefreshOverviewPanel) == 0x000008, "Wrong alignment on TournamentDetails_C_RefreshOverviewPanel");
static_assert(sizeof(TournamentDetails_C_RefreshOverviewPanel) == 0x0003C0, "Wrong size on TournamentDetails_C_RefreshOverviewPanel");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable) == 0x000000, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_1) == 0x000018, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_bool_Variable) == 0x000030, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_2) == 0x000038, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_3) == 0x000050, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_byte_Variable) == 0x000068, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_4) == 0x000070, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_5) == 0x000088, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_6) == 0x0000A0, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_7) == 0x0000B8, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_bool_Variable_1) == 0x0000D0, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_8) == 0x0000D8, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_byte_Variable_1) == 0x0000F0, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_9) == 0x0000F8, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_10) == 0x000110, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_11) == 0x000128, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_12) == 0x000140, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_13) == 0x000158, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_14) == 0x000170, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_15) == 0x000188, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_16) == 0x0001A0, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_text_Variable_17) == 0x0001B8, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_GetTournamentTimeState_ReturnValue) == 0x0001D0, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_GetTournamentTimeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, Temp_bool_Variable_2) == 0x0001D1, "Member 'TournamentDetails_C_RefreshOverviewPanel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_GetTournamentMatchType_ReturnValue) == 0x0001D2, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_GetTournamentMatchType_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_ParseIntoArray_ReturnValue) == 0x0001D8, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_Select_Default) == 0x0001E8, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_JoinStringArray_ReturnValue) == 0x000200, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_TextToUpper_ReturnValue) == 0x000210, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_Conv_StringToText_ReturnValue) == 0x000228, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000240, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_TextToUpper_ReturnValue_1) == 0x000258, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_TextToUpper_ReturnValue_2) == 0x000270, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_TextToUpper_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_GetTournamentTimeLeft_ReturnValue) == 0x000288, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_GetTournamentTimeLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_GetEventTimespanAsText_ReturnValue) == 0x000290, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_GetEventTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_BreakTimespan_Days) == 0x0002A8, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_BreakTimespan_Hours) == 0x0002AC, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_BreakTimespan_Minutes) == 0x0002B0, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_BreakTimespan_Seconds) == 0x0002B4, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_BreakTimespan_Milliseconds) == 0x0002B8, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_MakeStruct_FormatArgumentData) == 0x0002C0, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000300, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_MakeArray_Array) == 0x000308, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000318, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_Select_Default_1) == 0x000320, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_Select_Default_2) == 0x000338, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_Select_Default_3) == 0x000350, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, K2Node_Select_Default_4) == 0x000368, "Member 'TournamentDetails_C_RefreshOverviewPanel::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_GetTournamentId_ReturnValue) == 0x000380, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_GetTournamentId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_Format_ReturnValue) == 0x000390, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshOverviewPanel, CallFunc_TextToUpper_ReturnValue_3) == 0x0003A8, "Member 'TournamentDetails_C_RefreshOverviewPanel::CallFunc_TextToUpper_ReturnValue_3' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.RefreshScoringRules
// 0x0020 (0x0020 - 0x0000)
struct TournamentDetails_C_RefreshScoringRules final
{
public:
	class FString                                 CallFunc_GetTournamentId_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_RefreshScoringRules) == 0x000008, "Wrong alignment on TournamentDetails_C_RefreshScoringRules");
static_assert(sizeof(TournamentDetails_C_RefreshScoringRules) == 0x000020, "Wrong size on TournamentDetails_C_RefreshScoringRules");
static_assert(offsetof(TournamentDetails_C_RefreshScoringRules, CallFunc_GetTournamentId_ReturnValue) == 0x000000, "Member 'TournamentDetails_C_RefreshScoringRules::CallFunc_GetTournamentId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshScoringRules, K2Node_DynamicCast_AsShowdown_Event_Tile) == 0x000010, "Member 'TournamentDetails_C_RefreshScoringRules::K2Node_DynamicCast_AsShowdown_Event_Tile' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshScoringRules, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TournamentDetails_C_RefreshScoringRules::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.RefreshEvents
// 0x0078 (0x0078 - 0x0000)
struct TournamentDetails_C_RefreshEvents final
{
public:
	class UShowdownEventTile_C*                   CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButton* Button)>  K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTournamentId_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F6[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UShowdownEventEmptySpacer_C*            CallFunc_Create_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetTournamentEvents_ReturnValue;          // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_RefreshEvents) == 0x000008, "Wrong alignment on TournamentDetails_C_RefreshEvents");
static_assert(sizeof(TournamentDetails_C_RefreshEvents) == 0x000078, "Wrong size on TournamentDetails_C_RefreshEvents");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Create_ReturnValue) == 0x000000, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TournamentDetails_C_RefreshEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'TournamentDetails_C_RefreshEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_GetTournamentId_ReturnValue) == 0x000020, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_GetTournamentId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, Temp_int_Array_Index_Variable) == 0x000030, "Member 'TournamentDetails_C_RefreshEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Create_ReturnValue_1) == 0x000038, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_GetTournamentEvents_ReturnValue) == 0x000040, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_GetTournamentEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Array_Get_Item) == 0x000050, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_AddChild_ReturnValue_1) == 0x000068, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_RefreshEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'TournamentDetails_C_RefreshEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.Refresh
// 0x0020 (0x0020 - 0x0000)
struct TournamentDetails_C_Refresh final
{
public:
	class FString                                 CallFunc_GetTournamentId_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTournamentNextEvent_ReturnValue;       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_Refresh) == 0x000008, "Wrong alignment on TournamentDetails_C_Refresh");
static_assert(sizeof(TournamentDetails_C_Refresh) == 0x000020, "Wrong size on TournamentDetails_C_Refresh");
static_assert(offsetof(TournamentDetails_C_Refresh, CallFunc_GetTournamentId_ReturnValue) == 0x000000, "Member 'TournamentDetails_C_Refresh::CallFunc_GetTournamentId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Refresh, CallFunc_GetTournamentNextEvent_ReturnValue) == 0x000010, "Member 'TournamentDetails_C_Refresh::CallFunc_GetTournamentNextEvent_ReturnValue' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventShowWindowDetails
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_EventShowWindowDetails final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_EventShowWindowDetails) == 0x000008, "Wrong alignment on TournamentDetails_C_EventShowWindowDetails");
static_assert(sizeof(TournamentDetails_C_EventShowWindowDetails) == 0x000008, "Wrong size on TournamentDetails_C_EventShowWindowDetails");
static_assert(offsetof(TournamentDetails_C_EventShowWindowDetails, Button) == 0x000000, "Member 'TournamentDetails_C_EventShowWindowDetails::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TournamentDetails_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_PreConstruct) == 0x000001, "Wrong alignment on TournamentDetails_C_PreConstruct");
static_assert(sizeof(TournamentDetails_C_PreConstruct) == 0x000001, "Wrong size on TournamentDetails_C_PreConstruct");
static_assert(offsetof(TournamentDetails_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TournamentDetails_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.AnimTransition
// 0x0018 (0x0018 - 0x0000)
struct TournamentDetails_C_AnimTransition final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlaySpeed;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_AnimTransition) == 0x000008, "Wrong alignment on TournamentDetails_C_AnimTransition");
static_assert(sizeof(TournamentDetails_C_AnimTransition) == 0x000018, "Wrong size on TournamentDetails_C_AnimTransition");
static_assert(offsetof(TournamentDetails_C_AnimTransition, In) == 0x000000, "Member 'TournamentDetails_C_AnimTransition::In' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_AnimTransition, Animation) == 0x000008, "Member 'TournamentDetails_C_AnimTransition::Animation' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_AnimTransition, PlaySpeed) == 0x000010, "Member 'TournamentDetails_C_AnimTransition::PlaySpeed' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventDeselectWindows
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_EventDeselectWindows final
{
public:
	class UWidget*                                SelectedWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_EventDeselectWindows) == 0x000008, "Wrong alignment on TournamentDetails_C_EventDeselectWindows");
static_assert(sizeof(TournamentDetails_C_EventDeselectWindows) == 0x000008, "Wrong size on TournamentDetails_C_EventDeselectWindows");
static_assert(offsetof(TournamentDetails_C_EventDeselectWindows, SelectedWidget) == 0x000000, "Member 'TournamentDetails_C_EventDeselectWindows::SelectedWidget' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventCenterEventWindow
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_EventCenterEventWindow final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_EventCenterEventWindow) == 0x000008, "Wrong alignment on TournamentDetails_C_EventCenterEventWindow");
static_assert(sizeof(TournamentDetails_C_EventCenterEventWindow) == 0x000008, "Wrong size on TournamentDetails_C_EventCenterEventWindow");
static_assert(offsetof(TournamentDetails_C_EventCenterEventWindow, Widget) == 0x000000, "Member 'TournamentDetails_C_EventCenterEventWindow::Widget' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.Tick
// 0x003C (0x003C - 0x0000)
struct TournamentDetails_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_Tick) == 0x000004, "Wrong alignment on TournamentDetails_C_Tick");
static_assert(sizeof(TournamentDetails_C_Tick) == 0x00003C, "Wrong size on TournamentDetails_C_Tick");
static_assert(offsetof(TournamentDetails_C_Tick, MyGeometry) == 0x000000, "Member 'TournamentDetails_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_Tick, InDeltaTime) == 0x000038, "Member 'TournamentDetails_C_Tick::InDeltaTime' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__Button_ViewLeaderboard_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventViewFullLeaderboard
// 0x0020 (0x0020 - 0x0000)
struct TournamentDetails_C_EventViewFullLeaderboard final
{
public:
	class FString                                 TournamentId;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventId;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_EventViewFullLeaderboard) == 0x000008, "Wrong alignment on TournamentDetails_C_EventViewFullLeaderboard");
static_assert(sizeof(TournamentDetails_C_EventViewFullLeaderboard) == 0x000020, "Wrong size on TournamentDetails_C_EventViewFullLeaderboard");
static_assert(offsetof(TournamentDetails_C_EventViewFullLeaderboard, TournamentId) == 0x000000, "Member 'TournamentDetails_C_EventViewFullLeaderboard::TournamentId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_EventViewFullLeaderboard, EventId) == 0x000010, "Member 'TournamentDetails_C_EventViewFullLeaderboard::EventId' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventToggleFullScreenContent
// 0x0001 (0x0001 - 0x0000)
struct TournamentDetails_C_EventToggleFullScreenContent final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TournamentDetails_C_EventToggleFullScreenContent) == 0x000001, "Wrong alignment on TournamentDetails_C_EventToggleFullScreenContent");
static_assert(sizeof(TournamentDetails_C_EventToggleFullScreenContent) == 0x000001, "Wrong size on TournamentDetails_C_EventToggleFullScreenContent");
static_assert(offsetof(TournamentDetails_C_EventToggleFullScreenContent, In) == 0x000000, "Member 'TournamentDetails_C_EventToggleFullScreenContent::In' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.EventViewPayout
// 0x0020 (0x0020 - 0x0000)
struct TournamentDetails_C_EventViewPayout final
{
public:
	class FString                                 EventWindowId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventId;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_EventViewPayout) == 0x000008, "Wrong alignment on TournamentDetails_C_EventViewPayout");
static_assert(sizeof(TournamentDetails_C_EventViewPayout) == 0x000020, "Wrong size on TournamentDetails_C_EventViewPayout");
static_assert(offsetof(TournamentDetails_C_EventViewPayout, EventWindowId) == 0x000000, "Member 'TournamentDetails_C_EventViewPayout::EventWindowId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_EventViewPayout, EventId) == 0x000010, "Member 'TournamentDetails_C_EventViewPayout::EventId' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TournamentDetails.TournamentDetails_C.ExecuteUbergraph_TournamentDetails
// 0x0370 (0x0370 - 0x0000)
struct TournamentDetails_C_ExecuteUbergraph_TournamentDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortShowdownEventState                       Temp_byte_Variable;                                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76F8[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_CustomEvent_Button;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_In_1;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76F9[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_CustomEvent_Animation;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PlaySpeed;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetStartTime_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76FA[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76FB[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_76FC[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76FD[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EventWindowId, const class FString& EventId)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76FE[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76FF[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_1;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7700[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortShowdownEventState                       CallFunc_GetEventTimeState_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7701[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7702[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_2;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7703[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue_2;           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                K2Node_CustomEvent_SelectedWidget;                 // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_3;           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& TournamentId, const class FString& EventId)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor)
	class UWidget*                                K2Node_CustomEvent_Widget;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_3;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7704[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_DynamicCast_AsCommon_Button;                // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7705[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7706[0x2];                                     // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_GetSafeZonePadding_SafePadding;           // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSafeZonePadding_SafePaddingScale;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7707[0x8];                                     // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_GetSafeZonePadding_SpillOverPadding;      // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7708[0x2];                                     // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7709[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_770A[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_770B[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_5;               // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_4;               // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_3;               // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_770C[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_2;                 // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_770D[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_4;        // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_770E[0x1];                                     // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_TournamentId;                   // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventId_1;                      // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_In;                             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_770F[0x5];                                     // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7710[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7711[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnableMultiFactorAuthModalBP_C*        CallFunc_Create_ReturnValue;                       // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7712[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QueueModal_ReturnValue;                   // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoCalloutMFARequirement_ReturnValue;      // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7713[0x5];                                     // 0x0313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventWindowId;                  // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventId;                        // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7714[0x2];                                     // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7715[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_3;                 // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   K2Node_DynamicCast_AsShowdown_Event_Tile_5;        // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7716[0x2];                                     // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7717[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails) == 0x000010, "Wrong alignment on TournamentDetails_C_ExecuteUbergraph_TournamentDetails");
static_assert(sizeof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails) == 0x000370, "Wrong size on TournamentDetails_C_ExecuteUbergraph_TournamentDetails");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, EntryPoint) == 0x000000, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::EntryPoint' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_int_Variable) == 0x000024, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_bool_Variable) == 0x00002C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable) == 0x00002E, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_Button) == 0x000030, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile) == 0x000038, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Event_IsDesignTime) == 0x000041, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_In_1) == 0x000042, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_In_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_Animation) == 0x000048, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_Animation' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_PlaySpeed) == 0x000050, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_PlaySpeed' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_PauseAnimation_ReturnValue) == 0x000054, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetStartTime_ReturnValue) == 0x000068, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_PauseAnimation_ReturnValue_1) == 0x00006C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_PauseAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetEndTime_ReturnValue) == 0x000078, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_3) == 0x00008C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_1) == 0x0000B8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000BC, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_2) == 0x0000CC, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildrenCount_ReturnValue) == 0x0000D0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D4, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_int_Variable_1) == 0x0000D8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_bool_Variable_1) == 0x0000DC, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildAt_ReturnValue) == 0x0000E0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile_1) == 0x0000E8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F1, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetEventTimeState_ReturnValue) == 0x0000F8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetEventTimeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildrenCount_ReturnValue_1) == 0x0000FC, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildAt_ReturnValue_1) == 0x000100, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x000108, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile_2) == 0x000110, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildrenCount_ReturnValue_2) == 0x00011C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildrenCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000120, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Not_PreBool_ReturnValue_1) == 0x000124, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000125, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000126, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_BooleanAND_ReturnValue) == 0x000127, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_SelectedWidget) == 0x000128, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_SelectedWidget' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildIndex_ReturnValue) == 0x000130, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_6) == 0x000134, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildrenCount_ReturnValue_3) == 0x000144, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildrenCount_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_7) == 0x000148, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_8) == 0x000158, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CreateDelegate_OutputDelegate_9) == 0x000168, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_Widget) == 0x000178, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile_3) == 0x000180, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsCommon_Button) == 0x000190, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsCommon_Button' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_3) == 0x000199, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_float_Variable) == 0x00019C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_4) == 0x0001A0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_5) == 0x0001A1, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Event_MyGeometry) == 0x0001A4, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Event_InDeltaTime) == 0x0001DC, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetSafeZonePadding_SafePadding) == 0x0001E0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetSafeZonePadding_SafePadding' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetSafeZonePadding_SafePaddingScale) == 0x0001F0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetSafeZonePadding_SafePaddingScale' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetSafeZonePadding_SpillOverPadding) == 0x000200, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetSafeZonePadding_SpillOverPadding' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000210, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_6) == 0x000218, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_7) == 0x000219, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00021C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000220, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000224, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000228, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_MakeStruct_Margin) == 0x00022C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000240, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_8) == 0x000248, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000250, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_9) == 0x000258, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button_5) == 0x000260, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button_4) == 0x000268, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button_3) == 0x000270, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button_2) == 0x000278, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_10) == 0x000280, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_int_Variable_2) == 0x000284, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildAt_ReturnValue_2) == 0x000288, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildAt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000290, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile_4) == 0x000298, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile_4' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_5) == 0x0002A0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetSelected_ReturnValue) == 0x0002A1, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002A2, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002A4, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_TournamentId) == 0x0002A8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_TournamentId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_EventId_1) == 0x0002B8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_EventId_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_In) == 0x0002C8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_In' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_11) == 0x0002C9, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_12) == 0x0002CA, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetActiveWidget_ReturnValue) == 0x0002D0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002D8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button_1) == 0x0002E0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_bool_Variable_2) == 0x0002E8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002F0, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Create_ReturnValue) == 0x0002F8, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Select_Default) == 0x000300, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_PlayAnimation_ReturnValue_2) == 0x000308, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_QueueModal_ReturnValue) == 0x000310, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_QueueModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_DoCalloutMFARequirement_ReturnValue) == 0x000311, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_DoCalloutMFARequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Select_Default_1) == 0x000312, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_EventWindowId) == 0x000318, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_EventWindowId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_CustomEvent_EventId) == 0x000328, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_CustomEvent_EventId' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_byte_Variable_13) == 0x000338, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_Select_Default_2) == 0x000339, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, Temp_int_Variable_3) == 0x00033C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_IsValid_ReturnValue) == 0x000340, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_GetChildAt_ReturnValue_3) == 0x000348, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_GetChildAt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_AsShowdown_Event_Tile_5) == 0x000350, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_AsShowdown_Event_Tile_5' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_DynamicCast_bSuccess_6) == 0x000358, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000359, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_Add_IntInt_ReturnValue_3) == 0x00035C, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, CallFunc_IsValid_ReturnValue_1) == 0x000360, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TournamentDetails_C_ExecuteUbergraph_TournamentDetails, K2Node_ComponentBoundEvent_Button) == 0x000368, "Member 'TournamentDetails_C_ExecuteUbergraph_TournamentDetails::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

}

