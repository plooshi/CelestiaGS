#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scoreboard_UI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Scoreboard_UI.Scoreboard_UI_C.GetTargetPlayerState
// 0x0038 (0x0038 - 0x0000)
struct Scoreboard_UI_C_GetTargetPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASpectatorPawn*                         SpectatorPawn;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      OwningPlayer;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_GetTargetPlayerState) == 0x000008, "Wrong alignment on Scoreboard_UI_C_GetTargetPlayerState");
static_assert(sizeof(Scoreboard_UI_C_GetTargetPlayerState) == 0x000038, "Wrong size on Scoreboard_UI_C_GetTargetPlayerState");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, PlayerState) == 0x000000, "Member 'Scoreboard_UI_C_GetTargetPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, SpectatorPawn) == 0x000008, "Member 'Scoreboard_UI_C_GetTargetPlayerState::SpectatorPawn' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, OwningPlayer) == 0x000010, "Member 'Scoreboard_UI_C_GetTargetPlayerState::OwningPlayer' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_GetTargetPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000020, "Member 'Scoreboard_UI_C_GetTargetPlayerState::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'Scoreboard_UI_C_GetTargetPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetPlayerState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'Scoreboard_UI_C_GetTargetPlayerState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.GetTargetScoreRow
// 0x0070 (0x0070 - 0x0000)
struct Scoreboard_UI_C_GetTargetScoreRow final
{
public:
	class APlayerState*                           TargetPlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_Team_Widget_C*              K2Node_DynamicCast_AsScoreboard_Team_Widget;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetWidgetForPlayerState_Widget;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_UI_Row_C*                   K2Node_DynamicCast_AsScoreboard_UI_Row;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_GetTargetScoreRow) == 0x000008, "Wrong alignment on Scoreboard_UI_C_GetTargetScoreRow");
static_assert(sizeof(Scoreboard_UI_C_GetTargetScoreRow) == 0x000070, "Wrong size on Scoreboard_UI_C_GetTargetScoreRow");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, TargetPlayerState) == 0x000000, "Member 'Scoreboard_UI_C_GetTargetScoreRow::TargetPlayerState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, Widget) == 0x000008, "Member 'Scoreboard_UI_C_GetTargetScoreRow::Widget' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Scoreboard_UI_C_GetTargetScoreRow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Scoreboard_UI_C_GetTargetScoreRow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_Array_Get_Item) == 0x000038, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, K2Node_DynamicCast_AsScoreboard_Team_Widget) == 0x000048, "Member 'Scoreboard_UI_C_GetTargetScoreRow::K2Node_DynamicCast_AsScoreboard_Team_Widget' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Scoreboard_UI_C_GetTargetScoreRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_GetWidgetForPlayerState_Widget) == 0x000058, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_GetWidgetForPlayerState_Widget' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, K2Node_DynamicCast_AsScoreboard_UI_Row) == 0x000060, "Member 'Scoreboard_UI_C_GetTargetScoreRow::K2Node_DynamicCast_AsScoreboard_UI_Row' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'Scoreboard_UI_C_GetTargetScoreRow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetTargetScoreRow, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006A, "Member 'Scoreboard_UI_C_GetTargetScoreRow::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.ShowTargetPlayerStateInScrollBox
// 0x0020 (0x0020 - 0x0000)
struct Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox final
{
public:
	class APlayerState*                           TargetPlayerState;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetTargetPlayerState_PlayerState;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTargetScoreRow_Widget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox) == 0x000008, "Wrong alignment on Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox");
static_assert(sizeof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox) == 0x000020, "Wrong size on Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox");
static_assert(offsetof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox, TargetPlayerState) == 0x000000, "Member 'Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox::TargetPlayerState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox, CallFunc_GetTargetPlayerState_PlayerState) == 0x000008, "Member 'Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox::CallFunc_GetTargetPlayerState_PlayerState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox, CallFunc_GetTargetScoreRow_Widget) == 0x000010, "Member 'Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox::CallFunc_GetTargetScoreRow_Widget' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Scoreboard_UI_C_ShowTargetPlayerStateInScrollBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.AnimateBacking
// 0x0008 (0x0008 - 0x0000)
struct Scoreboard_UI_C_AnimateBacking final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_AnimateBacking) == 0x000008, "Wrong alignment on Scoreboard_UI_C_AnimateBacking");
static_assert(sizeof(Scoreboard_UI_C_AnimateBacking) == 0x000008, "Wrong size on Scoreboard_UI_C_AnimateBacking");
static_assert(offsetof(Scoreboard_UI_C_AnimateBacking, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'Scoreboard_UI_C_AnimateBacking::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.ShowWinnerDisplay
// 0x0050 (0x0050 - 0x0000)
struct Scoreboard_UI_C_ShowWinnerDisplay final
{
public:
	class FText                                   Winner_Name;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Win_Description;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          GameHasWinner;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EC8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_ShowWinnerDisplay) == 0x000008, "Wrong alignment on Scoreboard_UI_C_ShowWinnerDisplay");
static_assert(sizeof(Scoreboard_UI_C_ShowWinnerDisplay) == 0x000050, "Wrong size on Scoreboard_UI_C_ShowWinnerDisplay");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, Winner_Name) == 0x000000, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::Winner_Name' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, Win_Description) == 0x000018, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::Win_Description' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, GameHasWinner) == 0x000030, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::GameHasWinner' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000040, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowWinnerDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'Scoreboard_UI_C_ShowWinnerDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.SetCountdownText
// 0x0018 (0x0018 - 0x0000)
struct Scoreboard_UI_C_SetCountdownText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Scoreboard_UI_C_SetCountdownText) == 0x000008, "Wrong alignment on Scoreboard_UI_C_SetCountdownText");
static_assert(sizeof(Scoreboard_UI_C_SetCountdownText) == 0x000018, "Wrong size on Scoreboard_UI_C_SetCountdownText");
static_assert(offsetof(Scoreboard_UI_C_SetCountdownText, Text) == 0x000000, "Member 'Scoreboard_UI_C_SetCountdownText::Text' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.UpdateRoundDisplay
// 0x01B0 (0x01B0 - 0x0000)
struct Scoreboard_UI_C_UpdateRoundDisplay final
{
public:
	bool                                          GameEnd;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMinigameScoreboardStates                     ScoreboardState;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ECA[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	bool                                          CallFunc_IsLastRound_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECB[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0160(0x0018)()
	EMinigameScoreboardStates                     Temp_byte_Variable_2;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ECC[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0180(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0198(0x0018)()
};
static_assert(alignof(Scoreboard_UI_C_UpdateRoundDisplay) == 0x000008, "Wrong alignment on Scoreboard_UI_C_UpdateRoundDisplay");
static_assert(sizeof(Scoreboard_UI_C_UpdateRoundDisplay) == 0x0001B0, "Wrong size on Scoreboard_UI_C_UpdateRoundDisplay");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, GameEnd) == 0x000000, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::GameEnd' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, ScoreboardState) == 0x000001, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::ScoreboardState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable) == 0x000008, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable_1) == 0x000020, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable_2) == 0x000038, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_bool_Variable) == 0x000050, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_byte_Variable) == 0x000051, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_byte_Variable_1) == 0x000052, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_bool_Variable_1) == 0x000053, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_Select_Default) == 0x000054, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable_3) == 0x000058, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable_4) == 0x000070, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_text_Variable_5) == 0x000088, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_IsLastRound_ReturnValue) == 0x0000A0, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_IsLastRound_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A2, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_BooleanAND_ReturnValue) == 0x0000A3, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_MakeArray_Array) == 0x0000E8, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_Format_ReturnValue) == 0x000138, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_MakeArray_Array_1) == 0x000150, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, CallFunc_Format_ReturnValue_1) == 0x000160, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, Temp_byte_Variable_2) == 0x000178, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_Select_Default_1) == 0x000180, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateRoundDisplay, K2Node_Select_Default_2) == 0x000198, "Member 'Scoreboard_UI_C_UpdateRoundDisplay::K2Node_Select_Default_2' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.SetStatsColumns
// 0x0028 (0x0028 - 0x0000)
struct Scoreboard_UI_C_SetStatsColumns final
{
public:
	TArray<class FText>                           ScoreboardStatNames;                               // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECD[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetScoreboardStateNames_OutNames;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_SetStatsColumns) == 0x000008, "Wrong alignment on Scoreboard_UI_C_SetStatsColumns");
static_assert(sizeof(Scoreboard_UI_C_SetStatsColumns) == 0x000028, "Wrong size on Scoreboard_UI_C_SetStatsColumns");
static_assert(offsetof(Scoreboard_UI_C_SetStatsColumns, ScoreboardStatNames) == 0x000000, "Member 'Scoreboard_UI_C_SetStatsColumns::ScoreboardStatNames' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_SetStatsColumns, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Scoreboard_UI_C_SetStatsColumns::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_SetStatsColumns, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'Scoreboard_UI_C_SetStatsColumns::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_SetStatsColumns, CallFunc_GetScoreboardStateNames_OutNames) == 0x000018, "Member 'Scoreboard_UI_C_SetStatsColumns::CallFunc_GetScoreboardStateNames_OutNames' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.IntroAnim
// 0x0008 (0x0008 - 0x0000)
struct Scoreboard_UI_C_IntroAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_IntroAnim) == 0x000008, "Wrong alignment on Scoreboard_UI_C_IntroAnim");
static_assert(sizeof(Scoreboard_UI_C_IntroAnim) == 0x000008, "Wrong size on Scoreboard_UI_C_IntroAnim");
static_assert(offsetof(Scoreboard_UI_C_IntroAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'Scoreboard_UI_C_IntroAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.HideUnusedRows
// 0x0058 (0x0058 - 0x0000)
struct Scoreboard_UI_C_HideUnusedRows final
{
public:
	bool                                          bTeamGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ECE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBuckets;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ECF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_UI_Row_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED1[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_Team_Widget_C*              CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_HideUnusedRows) == 0x000008, "Wrong alignment on Scoreboard_UI_C_HideUnusedRows");
static_assert(sizeof(Scoreboard_UI_C_HideUnusedRows) == 0x000058, "Wrong size on Scoreboard_UI_C_HideUnusedRows");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, bTeamGame) == 0x000000, "Member 'Scoreboard_UI_C_HideUnusedRows::bTeamGame' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, NumBuckets) == 0x000004, "Member 'Scoreboard_UI_C_HideUnusedRows::NumBuckets' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_byte_Variable) == 0x000008, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_bool_Variable) == 0x000009, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_byte_Variable_1) == 0x00000A, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_byte_Variable_2) == 0x00000B, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_byte_Variable_3) == 0x000010, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Less_IntInt_ReturnValue_1) == 0x000022, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_bool_Variable_1) == 0x000025, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, K2Node_Select_Default) == 0x000026, "Member 'Scoreboard_UI_C_HideUnusedRows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, K2Node_Select_Default_1) == 0x000027, "Member 'Scoreboard_UI_C_HideUnusedRows::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'Scoreboard_UI_C_HideUnusedRows::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Array_Get_Item) == 0x000030, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Less_IntInt_ReturnValue_2) == 0x00003C, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HideUnusedRows, CallFunc_Less_IntInt_ReturnValue_3) == 0x000050, "Member 'Scoreboard_UI_C_HideUnusedRows::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.MakeTeamScoreboardRow
// 0x0078 (0x0078 - 0x0000)
struct Scoreboard_UI_C_MakeTeamScoreboardRow final
{
public:
	struct FMinigameScoreboardBucketRow           MinigameScoreboardBucketRow;                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Param_IsRoundsGame;                                // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED2[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_Team_Widget_C*              ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED3[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_Team_Widget_C*              CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_MakeTeamScoreboardRow) == 0x000008, "Wrong alignment on Scoreboard_UI_C_MakeTeamScoreboardRow");
static_assert(sizeof(Scoreboard_UI_C_MakeTeamScoreboardRow) == 0x000078, "Wrong size on Scoreboard_UI_C_MakeTeamScoreboardRow");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, MinigameScoreboardBucketRow) == 0x000000, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::MinigameScoreboardBucketRow' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, Param_IsRoundsGame) == 0x000050, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::Param_IsRoundsGame' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, ReturnValue) == 0x000058, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakeTeamScoreboardRow, CallFunc_Create_ReturnValue) == 0x000070, "Member 'Scoreboard_UI_C_MakeTeamScoreboardRow::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.ResetScoreDisplays
// 0x0020 (0x0020 - 0x0000)
struct Scoreboard_UI_C_ResetScoreDisplays final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_Team_Widget_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_ResetScoreDisplays) == 0x000008, "Wrong alignment on Scoreboard_UI_C_ResetScoreDisplays");
static_assert(sizeof(Scoreboard_UI_C_ResetScoreDisplays) == 0x000020, "Wrong size on Scoreboard_UI_C_ResetScoreDisplays");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Scoreboard_UI_C_ResetScoreDisplays::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Scoreboard_UI_C_ResetScoreDisplays::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Scoreboard_UI_C_ResetScoreDisplays::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Scoreboard_UI_C_ResetScoreDisplays::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, CallFunc_Array_Get_Item) == 0x000010, "Member 'Scoreboard_UI_C_ResetScoreDisplays::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ResetScoreDisplays, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_ResetScoreDisplays::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.HandleScoreboardColumnsData
// 0x0030 (0x0030 - 0x0000)
struct Scoreboard_UI_C_HandleScoreboardColumnsData final
{
public:
	TArray<class FText>                           ScoreboardStatNames;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bTeamGame;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDisplayingWins;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED4[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_UI_ColumnLabels_C*          CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_HandleScoreboardColumnsData) == 0x000008, "Wrong alignment on Scoreboard_UI_C_HandleScoreboardColumnsData");
static_assert(sizeof(Scoreboard_UI_C_HandleScoreboardColumnsData) == 0x000030, "Wrong size on Scoreboard_UI_C_HandleScoreboardColumnsData");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, ScoreboardStatNames) == 0x000000, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::ScoreboardStatNames' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, bTeamGame) == 0x000010, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::bTeamGame' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, bDisplayingWins) == 0x000011, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::bDisplayingWins' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_HandleScoreboardColumnsData, CallFunc_Create_ReturnValue) == 0x000028, "Member 'Scoreboard_UI_C_HandleScoreboardColumnsData::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.MakePlayerScoreboardRow
// 0x0090 (0x0090 - 0x0000)
struct Scoreboard_UI_C_MakePlayerScoreboardRow final
{
public:
	struct FMinigameScoreboardPlayerRow           PlayerRow;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         PlayerIndex;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowWins;                                          // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED5[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPlayers;                                        // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Standing;                                          // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_UI_Row_C*                   ScoreboardRow;                                     // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED6[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED7[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_UI_Row_C*                   CallFunc_Create_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_MakePlayerScoreboardRow) == 0x000008, "Wrong alignment on Scoreboard_UI_C_MakePlayerScoreboardRow");
static_assert(sizeof(Scoreboard_UI_C_MakePlayerScoreboardRow) == 0x000090, "Wrong size on Scoreboard_UI_C_MakePlayerScoreboardRow");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, PlayerRow) == 0x000000, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::PlayerRow' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, PlayerIndex) == 0x000040, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::PlayerIndex' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, ShowWins) == 0x000044, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::ShowWins' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, NumPlayers) == 0x000048, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::NumPlayers' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, Standing) == 0x00004C, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::Standing' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, ScoreboardRow) == 0x000050, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::ScoreboardRow' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, K2Node_MakeStruct_LinearColor) == 0x000058, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, Temp_bool_Variable) == 0x000069, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, K2Node_Select_Default) == 0x00006C, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_MakePlayerScoreboardRow, CallFunc_Create_ReturnValue) == 0x000088, "Member 'Scoreboard_UI_C_MakePlayerScoreboardRow::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.GetScoreboardStateNames
// 0x0048 (0x0048 - 0x0000)
struct Scoreboard_UI_C_GetScoreboardStateNames final
{
public:
	TArray<class FText>                           OutNames;                                          // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FText>                           NamesArray;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_GetScoreboardStateNames) == 0x000008, "Wrong alignment on Scoreboard_UI_C_GetScoreboardStateNames");
static_assert(sizeof(Scoreboard_UI_C_GetScoreboardStateNames) == 0x000048, "Wrong size on Scoreboard_UI_C_GetScoreboardStateNames");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, OutNames) == 0x000000, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::OutNames' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, NamesArray) == 0x000010, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::NamesArray' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_Array_Get_Item) == 0x000030, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_GetScoreboardStateNames, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'Scoreboard_UI_C_GetScoreboardStateNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.UpdateStats
// 0x01C0 (0x01C0 - 0x0000)
struct Scoreboard_UI_C_UpdateStats final
{
public:
	bool                                          ShowGameTotals;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMinigameScoreboardStates                     ScoreboardState;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EDA[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBuckets;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMinigameScoreboardBucketRow           CurrentBucket;                                     // 0x0008(0x0050)(Edit, BlueprintVisible)
	TArray<struct FMinigameScoreboardBucketRow>   ScoreboardBucketRows;                              // 0x0058(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRoundsGame;                                     // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDB[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMinigameStatRow>               StatRows;                                          // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UVerticalBox*                           CurrentPlayerBox;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           ScoreboardStatNames;                               // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EDC[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_Team_Widget_C*              CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDD[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_UI_Row_C*                   CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMinigameScoreboardBucketRow>   CallFunc_GetScoreboardRows_OutScoreboardRows;      // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EDE[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinigameScoreboardBucketRow           CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0050)()
	struct FMinigameScoreboardPlayerRow           CallFunc_Array_Get_Item_3;                         // 0x0128(0x0040)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EDF[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_UI_Row_C*                   CallFunc_MakePlayerScoreboardRow_ScoreboardRow;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE0[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE1[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE2[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_Team_Widget_C*              CallFunc_MakeTeamScoreboardRow_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE3[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE4[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_UpdateStats) == 0x000008, "Wrong alignment on Scoreboard_UI_C_UpdateStats");
static_assert(sizeof(Scoreboard_UI_C_UpdateStats) == 0x0001C0, "Wrong size on Scoreboard_UI_C_UpdateStats");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, ShowGameTotals) == 0x000000, "Member 'Scoreboard_UI_C_UpdateStats::ShowGameTotals' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, ScoreboardState) == 0x000001, "Member 'Scoreboard_UI_C_UpdateStats::ScoreboardState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, NumBuckets) == 0x000004, "Member 'Scoreboard_UI_C_UpdateStats::NumBuckets' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CurrentBucket) == 0x000008, "Member 'Scoreboard_UI_C_UpdateStats::CurrentBucket' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, ScoreboardBucketRows) == 0x000058, "Member 'Scoreboard_UI_C_UpdateStats::ScoreboardBucketRows' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CurrentIndex) == 0x000068, "Member 'Scoreboard_UI_C_UpdateStats::CurrentIndex' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, bIsRoundsGame) == 0x00006C, "Member 'Scoreboard_UI_C_UpdateStats::bIsRoundsGame' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, StatRows) == 0x000070, "Member 'Scoreboard_UI_C_UpdateStats::StatRows' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CurrentPlayerBox) == 0x000080, "Member 'Scoreboard_UI_C_UpdateStats::CurrentPlayerBox' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, ScoreboardStatNames) == 0x000088, "Member 'Scoreboard_UI_C_UpdateStats::ScoreboardStatNames' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, Temp_int_Array_Index_Variable) == 0x000098, "Member 'Scoreboard_UI_C_UpdateStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'Scoreboard_UI_C_UpdateStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'Scoreboard_UI_C_UpdateStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_GetScoreboardRows_OutScoreboardRows) == 0x0000C0, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_GetScoreboardRows_OutScoreboardRows' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000D1, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Get_Item_3) == 0x000128, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_MakePlayerScoreboardRow_ScoreboardRow) == 0x000170, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_MakePlayerScoreboardRow_ScoreboardRow' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_AddChild_ReturnValue) == 0x000180, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Add_ReturnValue) == 0x00018C, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Length_ReturnValue_2) == 0x000190, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_MakeTeamScoreboardRow_ReturnValue) == 0x000198, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_MakeTeamScoreboardRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, Temp_int_Loop_Counter_Variable_1) == 0x0001A0, "Member 'Scoreboard_UI_C_UpdateStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_AddChild_ReturnValue_1) == 0x0001A8, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B0, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B4, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_UpdateStats, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'Scoreboard_UI_C_UpdateStats::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Scoreboard_UI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_PreConstruct) == 0x000001, "Wrong alignment on Scoreboard_UI_C_PreConstruct");
static_assert(sizeof(Scoreboard_UI_C_PreConstruct) == 0x000001, "Wrong size on Scoreboard_UI_C_PreConstruct");
static_assert(offsetof(Scoreboard_UI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Scoreboard_UI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.ShowMinigameEndUI
// 0x0008 (0x0008 - 0x0000)
struct Scoreboard_UI_C_ShowMinigameEndUI final
{
public:
	bool                                          ShowGameTotals;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMinigameScoreboardStates                     ScoreboardState;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplayTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_ShowMinigameEndUI) == 0x000004, "Wrong alignment on Scoreboard_UI_C_ShowMinigameEndUI");
static_assert(sizeof(Scoreboard_UI_C_ShowMinigameEndUI) == 0x000008, "Wrong size on Scoreboard_UI_C_ShowMinigameEndUI");
static_assert(offsetof(Scoreboard_UI_C_ShowMinigameEndUI, ShowGameTotals) == 0x000000, "Member 'Scoreboard_UI_C_ShowMinigameEndUI::ShowGameTotals' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowMinigameEndUI, ScoreboardState) == 0x000001, "Member 'Scoreboard_UI_C_ShowMinigameEndUI::ScoreboardState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ShowMinigameEndUI, DisplayTime) == 0x000004, "Member 'Scoreboard_UI_C_ShowMinigameEndUI::DisplayTime' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.FullscreenMapToggle
// 0x0001 (0x0001 - 0x0000)
struct Scoreboard_UI_C_FullscreenMapToggle final
{
public:
	bool                                          bFullscreenMapVisible;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Scoreboard_UI_C_FullscreenMapToggle) == 0x000001, "Wrong alignment on Scoreboard_UI_C_FullscreenMapToggle");
static_assert(sizeof(Scoreboard_UI_C_FullscreenMapToggle) == 0x000001, "Wrong size on Scoreboard_UI_C_FullscreenMapToggle");
static_assert(offsetof(Scoreboard_UI_C_FullscreenMapToggle, bFullscreenMapVisible) == 0x000000, "Member 'Scoreboard_UI_C_FullscreenMapToggle::bFullscreenMapVisible' has a wrong offset!");

// Function Scoreboard_UI.Scoreboard_UI_C.ExecuteUbergraph_Scoreboard_UI
// 0x0158 (0x0158 - 0x0000)
struct Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ShowGameTotals;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMinigameScoreboardStates                     K2Node_CustomEvent_ScoreboardState;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DisplayTime;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE6[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bFullscreenMapVisible)>   K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bFullscreenMapVisible;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE7[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMinigameFullscreenMapWidgetType              CallFunc_GetMinigameMapPanelDisplayType_ReturnValue; // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EE8[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EE9[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EEA[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinigameScoreboardPlayerRow           CallFunc_Array_Get_Item;                           // 0x00F8(0x0040)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EEB[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboard_UI_Row_C*                   CallFunc_MakePlayerScoreboardRow_ScoreboardRow;    // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI) == 0x000008, "Wrong alignment on Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI");
static_assert(sizeof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI) == 0x000158, "Wrong size on Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, EntryPoint) == 0x000000, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_Event_IsDesignTime) == 0x000005, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CustomEvent_ShowGameTotals) == 0x000006, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CustomEvent_ShowGameTotals' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CustomEvent_ScoreboardState) == 0x000007, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CustomEvent_ScoreboardState' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CustomEvent_DisplayTime) == 0x000008, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CustomEvent_DisplayTime' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_MakeArray_Array) == 0x000050, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Format_ReturnValue) == 0x000060, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_GetOwningPlayer_ReturnValue) == 0x000078, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000080, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CreateDelegate_OutputDelegate_1) == 0x00009C, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CustomEvent_bFullscreenMapVisible) == 0x0000AC, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CustomEvent_bFullscreenMapVisible' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_GetMinigameMapPanelDisplayType_ReturnValue) == 0x0000B4, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_GetMinigameMapPanelDisplayType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C0, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D0, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000E0, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000E8, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_MakePlayerScoreboardRow_ScoreboardRow) == 0x000148, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_MakePlayerScoreboardRow_ScoreboardRow' has a wrong offset!");
static_assert(offsetof(Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI, CallFunc_AddChild_ReturnValue) == 0x000150, "Member 'Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

