#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CalendarDynamicPOISelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "MeshNetwork_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CalendarDynamicPOISelect.BP_CalendarDynamicPOISelect_C
// 0x0088 (0x02A8 - 0x0220)
class ABP_CalendarDynamicPOISelect_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABuildingFoundation*                    DefaultFoundation;                                 // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class ABuildingFoundation*> New;                                               // 0x0240(0x0050)(Edit, BlueprintVisible)
	class FString                                 DebugFoundation;                                   // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          LevelSetUp;                                        // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AlwaysLoadOnMesh;                                  // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreInCreative;                                  // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WaitForNavmeshUnlockBeforeLoading;                 // 0x02A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_CalendarDynamicPOISelect(int32 EntryPoint);
	void RuntimeDynamicFoundationDisble();
	void UnloadDynamicLevel(const class FString& Key);
	void DefaultFoundationDisabled();
	void DebugCalenderEvent(const class FString& A);
	void UnloadDefaultLevel();
	void RuntimeFoundationSwap();
	void TryLoadMap(const class FString& Key);
	void Break();
	void ReceiveBeginPlay();
	void OnEventActive_EBEEA8B44B6FE62EEE2F37B32715E837(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_EBEEA8B44B6FE62EEE2F37B32715E837(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_EBEEA8B44B6FE62EEE2F37B32715E837(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnReady_10FF4E234049809523083F9F922BAF96(EMeshNetworkNodeType NodeType);
	void OnReady_9041F2234DD8761E9FEDAA8CC7F22DF2(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnRep_NewVar_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CalendarDynamicPOISelect_C">();
	}
	static class ABP_CalendarDynamicPOISelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CalendarDynamicPOISelect_C>();
	}
};
static_assert(alignof(ABP_CalendarDynamicPOISelect_C) == 0x000008, "Wrong alignment on ABP_CalendarDynamicPOISelect_C");
static_assert(sizeof(ABP_CalendarDynamicPOISelect_C) == 0x0002A8, "Wrong size on ABP_CalendarDynamicPOISelect_C");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, UberGraphFrame) == 0x000220, "Member 'ABP_CalendarDynamicPOISelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, Scene) == 0x000228, "Member 'ABP_CalendarDynamicPOISelect_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, Billboard) == 0x000230, "Member 'ABP_CalendarDynamicPOISelect_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, DefaultFoundation) == 0x000238, "Member 'ABP_CalendarDynamicPOISelect_C::DefaultFoundation' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, New) == 0x000240, "Member 'ABP_CalendarDynamicPOISelect_C::New' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, DebugFoundation) == 0x000290, "Member 'ABP_CalendarDynamicPOISelect_C::DebugFoundation' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, LevelSetUp) == 0x0002A0, "Member 'ABP_CalendarDynamicPOISelect_C::LevelSetUp' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, AlwaysLoadOnMesh) == 0x0002A1, "Member 'ABP_CalendarDynamicPOISelect_C::AlwaysLoadOnMesh' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, IgnoreInCreative) == 0x0002A2, "Member 'ABP_CalendarDynamicPOISelect_C::IgnoreInCreative' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDynamicPOISelect_C, WaitForNavmeshUnlockBeforeLoading) == 0x0002A3, "Member 'ABP_CalendarDynamicPOISelect_C::WaitForNavmeshUnlockBeforeLoading' has a wrong offset!");

}

