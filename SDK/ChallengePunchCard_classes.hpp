#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengePunchCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengePunchCard.ChallengePunchCard_C
// 0x0138 (0x03F8 - 0x02C0)
class UChallengePunchCard_C final : public UAthenaChallengePunchCard
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Accent1;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Accent2;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base1;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base2;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base3;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base4;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base5;                                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Unknown;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         FortLazyImage_Background;                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_151;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Bang;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shadow;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_unknown;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_Progress;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Header;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Infos;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Punchcard_Width;                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_punchslots;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_CardNumber;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_punchcard;                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor01;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor02;                                       // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor03;                                       // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor04;                                       // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor05;                                       // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AccentColor01;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AccentColor02;                                     // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIngame;                                          // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bSetLazyParamName;                                 // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void SetUnkownState(bool bKnown);
	void SetProgressCount(int32 AchivedCount, int32 GoalCount);
	void Construct();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetStyle(const struct FFortChallengePunchCardStyles& PunchStyle);
	void HideProgressCount(bool bBundleCompleted);
	void PreConstruct(bool IsDesignTime);
	void SetUpEncodedName(const class FString& Param_Name, int32 Count);
	void SetBangState(bool bShowBang);
	void ExecuteUbergraph_ChallengePunchCard(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengePunchCard_C">();
	}
	static class UChallengePunchCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengePunchCard_C>();
	}
};
static_assert(alignof(UChallengePunchCard_C) == 0x000008, "Wrong alignment on UChallengePunchCard_C");
static_assert(sizeof(UChallengePunchCard_C) == 0x0003F8, "Wrong size on UChallengePunchCard_C");
static_assert(offsetof(UChallengePunchCard_C, UberGraphFrame) == 0x0002C0, "Member 'UChallengePunchCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Hover) == 0x0002C8, "Member 'UChallengePunchCard_C::Hover' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Accent1) == 0x0002D0, "Member 'UChallengePunchCard_C::Accent1' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Accent2) == 0x0002D8, "Member 'UChallengePunchCard_C::Accent2' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, base1) == 0x0002E0, "Member 'UChallengePunchCard_C::base1' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, base2) == 0x0002E8, "Member 'UChallengePunchCard_C::base2' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, base3) == 0x0002F0, "Member 'UChallengePunchCard_C::base3' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, base4) == 0x0002F8, "Member 'UChallengePunchCard_C::base4' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, base5) == 0x000300, "Member 'UChallengePunchCard_C::base5' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Border_Background) == 0x000308, "Member 'UChallengePunchCard_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Border_Unknown) == 0x000310, "Member 'UChallengePunchCard_C::Border_Unknown' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, FortLazyImage_Background) == 0x000318, "Member 'UChallengePunchCard_C::FortLazyImage_Background' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Image) == 0x000320, "Member 'UChallengePunchCard_C::Image' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Image_151) == 0x000328, "Member 'UChallengePunchCard_C::Image_151' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Image_Bang) == 0x000330, "Member 'UChallengePunchCard_C::Image_Bang' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Image_Shadow) == 0x000338, "Member 'UChallengePunchCard_C::Image_Shadow' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Overlay_unknown) == 0x000340, "Member 'UChallengePunchCard_C::Overlay_unknown' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, RichText_Progress) == 0x000348, "Member 'UChallengePunchCard_C::RichText_Progress' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, SizeBox_Header) == 0x000350, "Member 'UChallengePunchCard_C::SizeBox_Header' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, SizeBox_Infos) == 0x000358, "Member 'UChallengePunchCard_C::SizeBox_Infos' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, SizeBox_Punchcard_Width) == 0x000360, "Member 'UChallengePunchCard_C::SizeBox_Punchcard_Width' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, SizeBox_punchslots) == 0x000368, "Member 'UChallengePunchCard_C::SizeBox_punchslots' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, Text_CardNumber) == 0x000370, "Member 'UChallengePunchCard_C::Text_CardNumber' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, WidgetSwitcher_punchcard) == 0x000378, "Member 'UChallengePunchCard_C::WidgetSwitcher_punchcard' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, BaseColor01) == 0x000380, "Member 'UChallengePunchCard_C::BaseColor01' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, BaseColor02) == 0x000390, "Member 'UChallengePunchCard_C::BaseColor02' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, BaseColor03) == 0x0003A0, "Member 'UChallengePunchCard_C::BaseColor03' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, BaseColor04) == 0x0003B0, "Member 'UChallengePunchCard_C::BaseColor04' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, BaseColor05) == 0x0003C0, "Member 'UChallengePunchCard_C::BaseColor05' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, AccentColor01) == 0x0003D0, "Member 'UChallengePunchCard_C::AccentColor01' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, AccentColor02) == 0x0003E0, "Member 'UChallengePunchCard_C::AccentColor02' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, IsIngame) == 0x0003F0, "Member 'UChallengePunchCard_C::IsIngame' has a wrong offset!");
static_assert(offsetof(UChallengePunchCard_C, bSetLazyParamName) == 0x0003F1, "Member 'UChallengePunchCard_C::bSetLazyParamName' has a wrong offset!");

}

