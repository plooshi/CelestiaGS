#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_SilkyDino_Horizontal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_SilkyDino_Horizontal.BGA_SilkyDino_Horizontal_C
// 0x0088 (0x0838 - 0x07B0)
class ABGA_SilkyDino_Horizontal_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AmbientAudio;                                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallsBase;                                         // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Falls;                                             // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Faucet;                                            // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Faucet;                                         // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FX_FallsHeight;                                    // 0x07F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FX_BaseHeight;                                     // 0x07FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Vehicle_Tag_Check;                                 // 0x0808(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Safe_Zone_Check;                                   // 0x0810(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Storm_Hotfix;                                      // 0x0818(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BGA_SilkyDino_Horizontal(int32 EntryPoint);
	void OnComponentEndOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void OnReady_9918FC77440E5741CC285E967F3DD111(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_SilkyDino_Horizontal_C">();
	}
	static class ABGA_SilkyDino_Horizontal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_SilkyDino_Horizontal_C>();
	}
};
static_assert(alignof(ABGA_SilkyDino_Horizontal_C) == 0x000008, "Wrong alignment on ABGA_SilkyDino_Horizontal_C");
static_assert(sizeof(ABGA_SilkyDino_Horizontal_C) == 0x000838, "Wrong size on ABGA_SilkyDino_Horizontal_C");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, UberGraphFrame) == 0x0007B0, "Member 'ABGA_SilkyDino_Horizontal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, AmbientAudio) == 0x0007B8, "Member 'ABGA_SilkyDino_Horizontal_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, FallsBase) == 0x0007C0, "Member 'ABGA_SilkyDino_Horizontal_C::FallsBase' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Falls) == 0x0007C8, "Member 'ABGA_SilkyDino_Horizontal_C::Falls' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Capsule) == 0x0007D0, "Member 'ABGA_SilkyDino_Horizontal_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Faucet) == 0x0007D8, "Member 'ABGA_SilkyDino_Horizontal_C::Faucet' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, DefaultSceneRoot) == 0x0007E0, "Member 'ABGA_SilkyDino_Horizontal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, GE_Faucet) == 0x0007E8, "Member 'ABGA_SilkyDino_Horizontal_C::GE_Faucet' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, FX_FallsHeight) == 0x0007F0, "Member 'ABGA_SilkyDino_Horizontal_C::FX_FallsHeight' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, FX_BaseHeight) == 0x0007FC, "Member 'ABGA_SilkyDino_Horizontal_C::FX_BaseHeight' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Vehicle_Tag_Check) == 0x000808, "Member 'ABGA_SilkyDino_Horizontal_C::Vehicle_Tag_Check' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Safe_Zone_Check) == 0x000810, "Member 'ABGA_SilkyDino_Horizontal_C::Safe_Zone_Check' has a wrong offset!");
static_assert(offsetof(ABGA_SilkyDino_Horizontal_C, Storm_Hotfix) == 0x000818, "Member 'ABGA_SilkyDino_Horizontal_C::Storm_Hotfix' has a wrong offset!");

}

