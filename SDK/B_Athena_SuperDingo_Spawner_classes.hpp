#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_SuperDingo_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Enum_SuperDingo_SpawnerPOISize_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_SuperDingo_Spawner.B_Athena_SuperDingo_Spawner_C
// 0x00E8 (0x0308 - 0x0220)
class AB_Athena_SuperDingo_Spawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeSpawn;                                  // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heightoffset;                                      // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UEnvQuery*                              EQS;                                               // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmountToSpawn;                                  // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSpawnLimit;                                     // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_7794[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BonusMaxSpawnAmount;                               // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DespawnAndRespawnTime;                             // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AlwaysSpawn;                                       // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_7795[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_Enabled;                                       // 0x0260(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_FlyHeightMax;                                  // 0x0280(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FScalableFloat                         Row_FlyHeightMin;                                  // 0x02A0(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FScalableFloat                         Row_LeashDistance;                                 // 0x02C0(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FScalableFloat                         Row_MaxSpawnDistance;                              // 0x02E0(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         AmountToSpawnFromSheets;                           // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SuperDingo_SpawnerPOISize                POISize;                                           // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Athena_SuperDingo_Spawner(int32 EntryPoint);
	void RunEQS();
	void QueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void Spawn(const struct FTransform& SpawnTransform);
	void InitalSpawn(const TArray<struct FVector>& Locations);
	void ReceiveBeginPlay();
	void OnReady_B0BE7F084F1885AE13A829BB40DE8390(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void UserConstructionScript();
	void RollRarity(EFortRarity* RarityOut);
	void GetRowsForSpawn(float* HeightMax, float* HeightMin, float* LeashDistance);
	void SelectSpawnerPOISize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_SuperDingo_Spawner_C">();
	}
	static class AB_Athena_SuperDingo_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_SuperDingo_Spawner_C>();
	}
};
static_assert(alignof(AB_Athena_SuperDingo_Spawner_C) == 0x000008, "Wrong alignment on AB_Athena_SuperDingo_Spawner_C");
static_assert(sizeof(AB_Athena_SuperDingo_Spawner_C) == 0x000308, "Wrong size on AB_Athena_SuperDingo_Spawner_C");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, UberGraphFrame) == 0x000220, "Member 'AB_Athena_SuperDingo_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Billboard) == 0x000228, "Member 'AB_Athena_SuperDingo_Spawner_C::Billboard' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, DefaultSceneRoot) == 0x000230, "Member 'AB_Athena_SuperDingo_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, DelayBeforeSpawn) == 0x000238, "Member 'AB_Athena_SuperDingo_Spawner_C::DelayBeforeSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Heightoffset) == 0x00023C, "Member 'AB_Athena_SuperDingo_Spawner_C::Heightoffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, EQS) == 0x000240, "Member 'AB_Athena_SuperDingo_Spawner_C::EQS' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, MaxAmountToSpawn) == 0x000248, "Member 'AB_Athena_SuperDingo_Spawner_C::MaxAmountToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, HasSpawnLimit) == 0x00024C, "Member 'AB_Athena_SuperDingo_Spawner_C::HasSpawnLimit' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, BonusMaxSpawnAmount) == 0x000250, "Member 'AB_Athena_SuperDingo_Spawner_C::BonusMaxSpawnAmount' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, DespawnAndRespawnTime) == 0x000254, "Member 'AB_Athena_SuperDingo_Spawner_C::DespawnAndRespawnTime' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, AlwaysSpawn) == 0x000258, "Member 'AB_Athena_SuperDingo_Spawner_C::AlwaysSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Row_Enabled) == 0x000260, "Member 'AB_Athena_SuperDingo_Spawner_C::Row_Enabled' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Row_FlyHeightMax) == 0x000280, "Member 'AB_Athena_SuperDingo_Spawner_C::Row_FlyHeightMax' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Row_FlyHeightMin) == 0x0002A0, "Member 'AB_Athena_SuperDingo_Spawner_C::Row_FlyHeightMin' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Row_LeashDistance) == 0x0002C0, "Member 'AB_Athena_SuperDingo_Spawner_C::Row_LeashDistance' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, Row_MaxSpawnDistance) == 0x0002E0, "Member 'AB_Athena_SuperDingo_Spawner_C::Row_MaxSpawnDistance' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, AmountToSpawnFromSheets) == 0x000300, "Member 'AB_Athena_SuperDingo_Spawner_C::AmountToSpawnFromSheets' has a wrong offset!");
static_assert(offsetof(AB_Athena_SuperDingo_Spawner_C, POISize) == 0x000304, "Member 'AB_Athena_SuperDingo_Spawner_C::POISize' has a wrong offset!");

}

