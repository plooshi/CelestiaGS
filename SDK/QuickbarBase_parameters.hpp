#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarBase

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function QuickbarBase.QuickbarBase_C.UpdateInventoryCapacity
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_UpdateInventoryCapacity final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_UpdateInventoryCapacity) == 0x000008, "Wrong alignment on QuickbarBase_C_UpdateInventoryCapacity");
static_assert(sizeof(QuickbarBase_C_UpdateInventoryCapacity) == 0x000020, "Wrong size on QuickbarBase_C_UpdateInventoryCapacity");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_UpdateInventoryCapacity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_UpdateInventoryCapacity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_UpdateInventoryCapacity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_UpdateInventoryCapacity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_UpdateInventoryCapacity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_UpdateInventoryCapacity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateInventoryCapacity, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'QuickbarBase_C_UpdateInventoryCapacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.UpdateSlotVisibility
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_UpdateSlotVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_UpdateSlotVisibility) == 0x000008, "Wrong alignment on QuickbarBase_C_UpdateSlotVisibility");
static_assert(sizeof(QuickbarBase_C_UpdateSlotVisibility) == 0x000020, "Wrong size on QuickbarBase_C_UpdateSlotVisibility");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_UpdateSlotVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_UpdateSlotVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_UpdateSlotVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_UpdateSlotVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_UpdateSlotVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_UpdateSlotVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateSlotVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'QuickbarBase_C_UpdateSlotVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.StopUsingAllSlots
// 0x0030 (0x0030 - 0x0000)
struct QuickbarBase_C_StopUsingAllSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBacchusQuickbarSlot_C*                 K2Node_DynamicCast_AsBacchus_Quickbar_Slot;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_StopUsingAllSlots) == 0x000008, "Wrong alignment on QuickbarBase_C_StopUsingAllSlots");
static_assert(sizeof(QuickbarBase_C_StopUsingAllSlots) == 0x000030, "Wrong size on QuickbarBase_C_StopUsingAllSlots");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_StopUsingAllSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_StopUsingAllSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_StopUsingAllSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_StopUsingAllSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_StopUsingAllSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_StopUsingAllSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, K2Node_DynamicCast_AsBacchus_Quickbar_Slot) == 0x000020, "Member 'QuickbarBase_C_StopUsingAllSlots::K2Node_DynamicCast_AsBacchus_Quickbar_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_StopUsingAllSlots, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'QuickbarBase_C_StopUsingAllSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.HandleQuickbarContentChanged
// 0x0070 (0x0070 - 0x0000)
struct QuickbarBase_C_HandleQuickbarContentChanged final
{
public:
	EFortQuickBars                                QuickBarType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ChangedSlots;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42AB[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42AC[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42AD[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_HandleQuickbarContentChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_HandleQuickbarContentChanged");
static_assert(sizeof(QuickbarBase_C_HandleQuickbarContentChanged) == 0x000070, "Wrong size on QuickbarBase_C_HandleQuickbarContentChanged");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, QuickBarType) == 0x000000, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::QuickBarType' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, ChangedSlots) == 0x000008, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::ChangedSlots' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000030, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000040, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000048, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_IsDead_ReturnValue) == 0x000051, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Array_Get_Item) == 0x000058, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleQuickbarContentChanged, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'QuickbarBase_C_HandleQuickbarContentChanged::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.UpdateCurrentFocusedQuickbar
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_UpdateCurrentFocusedQuickbar final
{
public:
	EFortQuickBars                                PreviousFocusedQuickbar;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CurrentFocusedQuickbar;                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                PrevFocusedQuickbarIndex;                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AE[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_UpdateCurrentFocusedQuickbar) == 0x000008, "Wrong alignment on QuickbarBase_C_UpdateCurrentFocusedQuickbar");
static_assert(sizeof(QuickbarBase_C_UpdateCurrentFocusedQuickbar) == 0x000020, "Wrong size on QuickbarBase_C_UpdateCurrentFocusedQuickbar");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, PreviousFocusedQuickbar) == 0x000000, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::PreviousFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CurrentFocusedQuickbar) == 0x000001, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CurrentFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, PrevFocusedQuickbarIndex) == 0x000002, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::PrevFocusedQuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000010, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutSlot) == 0x000014, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000018, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x00001C, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.ShouldRefreshQuickbarItem
// 0x0030 (0x0030 - 0x0000)
struct QuickbarBase_C_ShouldRefreshQuickbarItem final
{
public:
	int32                                         RequestedSlot;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlot;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B1[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_ShouldRefreshQuickbarItem) == 0x000008, "Wrong alignment on QuickbarBase_C_ShouldRefreshQuickbarItem");
static_assert(sizeof(QuickbarBase_C_ShouldRefreshQuickbarItem) == 0x000030, "Wrong size on QuickbarBase_C_ShouldRefreshQuickbarItem");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, RequestedSlot) == 0x000000, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::RequestedSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CurrentSlot) == 0x000004, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CurrentSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, Result) == 0x000008, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::Result' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000019, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutSlot) == 0x00001C, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000020, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x000024, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.RefreshQuickbar
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_RefreshQuickbar final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_RefreshQuickbar) == 0x000008, "Wrong alignment on QuickbarBase_C_RefreshQuickbar");
static_assert(sizeof(QuickbarBase_C_RefreshQuickbar) == 0x000020, "Wrong size on QuickbarBase_C_RefreshQuickbar");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.HandleKeybindsChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_HandleKeybindsChanged final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_HandleKeybindsChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_HandleKeybindsChanged");
static_assert(sizeof(QuickbarBase_C_HandleKeybindsChanged) == 0x000020, "Wrong size on QuickbarBase_C_HandleKeybindsChanged");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Minimize
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_Minimize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Minimize) == 0x000008, "Wrong alignment on QuickbarBase_C_Minimize");
static_assert(sizeof(QuickbarBase_C_Minimize) == 0x000020, "Wrong size on QuickbarBase_C_Minimize");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_Minimize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_Minimize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_Minimize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_Minimize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Maximize
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_Maximize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B2[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Maximize) == 0x000008, "Wrong alignment on QuickbarBase_C_Maximize");
static_assert(sizeof(QuickbarBase_C_Maximize) == 0x000020, "Wrong size on QuickbarBase_C_Maximize");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_Maximize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_Maximize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_Maximize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_Maximize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'QuickbarBase_C_Maximize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Is Valid Slot
// 0x0030 (0x0030 - 0x0000)
struct QuickbarBase_C_Is_Valid_Slot final
{
public:
	int32                                         Param_Slot;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Array_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Is_Valid_Slot) == 0x000008, "Wrong alignment on QuickbarBase_C_Is_Valid_Slot");
static_assert(sizeof(QuickbarBase_C_Is_Valid_Slot) == 0x000030, "Wrong size on QuickbarBase_C_Is_Valid_Slot");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Param_Slot) == 0x000000, "Member 'QuickbarBase_C_Is_Valid_Slot::Param_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Is_Valid) == 0x000004, "Member 'QuickbarBase_C_Is_Valid_Slot::Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Array_Index) == 0x000008, "Member 'QuickbarBase_C_Is_Valid_Slot::Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Get_Item) == 0x000020, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnWorldItemListChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_OnWorldItemListChanged final
{
public:
	TArray<class UFortWorldItem*>                 ItemsAdded;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UFortWorldItem*>                 ItemsRemoved;                                      // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnWorldItemListChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_OnWorldItemListChanged");
static_assert(sizeof(QuickbarBase_C_OnWorldItemListChanged) == 0x000020, "Wrong size on QuickbarBase_C_OnWorldItemListChanged");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsAdded) == 0x000000, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsRemoved) == 0x000010, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsRemoved' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSlotFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSlotFocusChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Slot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, Param_Slot) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::Param_Slot' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarContentsChanged
// 0x0018 (0x0018 - 0x0000)
struct QuickbarBase_C_OnQuickbarContentsChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ChangedSlots;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000018, "Wrong size on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarContentsChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarContentsChanged::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarContentsChanged, ChangedSlots) == 0x000008, "Member 'QuickbarBase_C_OnQuickbarContentsChanged::ChangedSlots' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarForceFullUpdate
// 0x0001 (0x0001 - 0x0000)
struct QuickbarBase_C_OnQuickbarForceFullUpdate final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong alignment on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(sizeof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong size on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(offsetof(QuickbarBase_C_OnQuickbarForceFullUpdate, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarForceFullUpdate::QuickbarIndex' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSecondarySlotFocusChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0 final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Slot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, Param_Slot) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::Param_Slot' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnLocalPlayerDied
// 0x0078 (0x0078 - 0x0000)
struct QuickbarBase_C_OnLocalPlayerDied final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuickbarBase_C_OnLocalPlayerDied) == 0x000008, "Wrong alignment on QuickbarBase_C_OnLocalPlayerDied");
static_assert(sizeof(QuickbarBase_C_OnLocalPlayerDied) == 0x000078, "Wrong size on QuickbarBase_C_OnLocalPlayerDied");
static_assert(offsetof(QuickbarBase_C_OnLocalPlayerDied, DeathReport) == 0x000000, "Member 'QuickbarBase_C_OnLocalPlayerDied::DeathReport' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnClientEnterVolume
// 0x0010 (0x0010 - 0x0000)
struct QuickbarBase_C_OnClientEnterVolume final
{
public:
	class APlayerState*                           Client;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            Volume;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnClientEnterVolume) == 0x000008, "Wrong alignment on QuickbarBase_C_OnClientEnterVolume");
static_assert(sizeof(QuickbarBase_C_OnClientEnterVolume) == 0x000010, "Wrong size on QuickbarBase_C_OnClientEnterVolume");
static_assert(offsetof(QuickbarBase_C_OnClientEnterVolume, Client) == 0x000000, "Member 'QuickbarBase_C_OnClientEnterVolume::Client' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnClientEnterVolume, Volume) == 0x000008, "Member 'QuickbarBase_C_OnClientEnterVolume::Volume' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnClientExitVolume
// 0x0010 (0x0010 - 0x0000)
struct QuickbarBase_C_OnClientExitVolume final
{
public:
	class APlayerState*                           Client;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            Volume;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnClientExitVolume) == 0x000008, "Wrong alignment on QuickbarBase_C_OnClientExitVolume");
static_assert(sizeof(QuickbarBase_C_OnClientExitVolume) == 0x000010, "Wrong size on QuickbarBase_C_OnClientExitVolume");
static_assert(offsetof(QuickbarBase_C_OnClientExitVolume, Client) == 0x000000, "Member 'QuickbarBase_C_OnClientExitVolume::Client' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnClientExitVolume, Volume) == 0x000008, "Member 'QuickbarBase_C_OnClientExitVolume::Volume' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.ExecuteUbergraph_QuickbarBase
// 0x0390 (0x0390 - 0x0000)
struct QuickbarBase_C_ExecuteUbergraph_QuickbarBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsAdded;                     // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsRemoved;                   // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42BA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index_1;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex_3;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BB[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot_1;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid_2;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42BC[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index_2;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BD[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex_2;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BE[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_ChangedSlots;                   // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BF[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRefreshQuickbarItem_Result;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C0[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C1[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortPlayerDeathReport                 K2Node_CustomEvent_DeathReport;                    // 0x00C8(0x0078)(ConstParm)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, TArray<int32>& ChangedSlots)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar; // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar; // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C2[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C3[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue_1;                 // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C4[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_2;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C5[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue_3;                 // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C6[0x2];                                     // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x023C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_42C7[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Client_1;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            K2Node_CustomEvent_Volume_1;                       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C8[0x6];                                     // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Client;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            K2Node_CustomEvent_Volume;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue_1;       // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C9[0x2];                                     // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x02AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_42CA[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x02C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42CB[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForPlayerState_ReturnValue;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42CC[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue_4;                 // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x02F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x0308(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x031C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42CD[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuickBarSlotBase*                  CallFunc_Array_Get_Item_4;                         // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x0340(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ShouldRefreshQuickbarItem_Result_1;       // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42CE[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x0354(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x0364(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_42CF[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue_5;                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortQuickBars QuickbarIndex, TArray<int32>& ChangedSlots)> K2Node_CreateDelegate_OutputDelegate_23;           // 0x0380(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000008, "Wrong alignment on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(sizeof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000390, "Wrong size on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, EntryPoint) == 0x000000, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsAdded) == 0x000008, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsRemoved) == 0x000018, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsRemoved' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid) == 0x000038, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index) == 0x00003C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid_1) == 0x000040, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index_1) == 0x000044, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item) == 0x000048, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Array_Index_Variable) == 0x000068, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex_3) == 0x00006C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex_3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot_1) == 0x000070, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000074, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid_2) == 0x000075, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index_2) == 0x000078, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex_2) == 0x00008A, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ChangedSlots) == 0x000090, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ChangedSlots' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue) == 0x0000A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex_1) == 0x0000A8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex) == 0x0000A9, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot) == 0x0000AC, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_ShouldRefreshQuickbarItem_Result) == 0x0000B0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_ShouldRefreshQuickbarItem_Result' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_DeathReport) == 0x0000C8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_DeathReport' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000140, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x000150, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000160, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000170, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x000180, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_7) == 0x000190, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001B0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001C0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001D0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001E1, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar) == 0x0001E2, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar) == 0x0001E3, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Length_ReturnValue_1) == 0x0001E4, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001E8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetGameState_ReturnValue) == 0x0001F0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetObjectClass_ReturnValue) == 0x0001F8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_ClassIsChildOf_ReturnValue) == 0x000200, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Loop_Counter_Variable) == 0x000204, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue_1) == 0x000208, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Less_IntInt_ReturnValue) == 0x000210, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Add_IntInt_ReturnValue) == 0x000214, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue_2) == 0x000218, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000220, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetVolumeManager_OutIsValid) == 0x000228, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue_3) == 0x000230, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_SwitchEnum_CmpSuccess) == 0x000238, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue) == 0x000239, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_12) == 0x00023C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Client_1) == 0x000250, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Client_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Volume_1) == 0x000258, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Volume_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_13) == 0x000260, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000270, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_1) == 0x000278, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_2) == 0x000279, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Client) == 0x000280, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Client' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Volume) == 0x000288, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_14) == 0x000290, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetMinigameForVolume_ReturnValue_1) == 0x0002A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetMinigameForVolume_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_3) == 0x0002A8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_4) == 0x0002A9, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_15) == 0x0002AC, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002C0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_16) == 0x0002C8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_5) == 0x0002D8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetVolumeForPlayerState_ReturnValue) == 0x0002E0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetVolumeForPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_IsValid_ReturnValue_6) == 0x0002E8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue_4) == 0x0002F0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_17) == 0x0002F8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_18) == 0x000308, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Loop_Counter_Variable_1) == 0x000318, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_19) == 0x00031C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x00032C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000330, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Array_Index_Variable_1) == 0x000334, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item_4) == 0x000338, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_20) == 0x000340, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_ShouldRefreshQuickbarItem_Result_1) == 0x000350, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_ShouldRefreshQuickbarItem_Result_1' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_21) == 0x000354, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_22) == 0x000364, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue_5) == 0x000378, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate_23) == 0x000380, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");

}

