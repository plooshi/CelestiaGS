#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_FN_Bud

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_FN_Bud.AnimBP_FN_Bud_C
// 0x0FB0 (0x1320 - 0x0370)
class UAnimBP_FN_Bud_C final : public UFortAIAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0378(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x03C0(0x0188)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0688(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x06B0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0728(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0758(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x07D0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0800(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0878(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08A8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0920(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0950(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x09C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x09F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0A70(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0AA0(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0B50(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0B80(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0C20(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0CE8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0D10(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0DD0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0DF8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0E40(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0E68(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0F58(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F80(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0FF8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x1028(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1040(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1070(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1120(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x11C0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1288(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x12B0(0x0028)()
	class APawn*                                  NewVar_0;                                          // 0x12D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BaseRot;                                           // 0x12E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Yaw;                                               // 0x12EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimRot;                                            // 0x12F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         YawAim;                                            // 0x12FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchAim;                                          // 0x1300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x1304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimOffsetYaw;                                      // 0x1308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x130C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PItchOffsetYaw;                                    // 0x1310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDormant;                                         // 0x1314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCrouched;                                        // 0x1315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOrphaned;                                        // 0x1316(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DidWakeUp;                                         // 0x1317(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AnimBP_FN_Bud(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_TransitionResult_449E1E554ED82C51306546A2DA9BBE3A();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_RotationOffsetBlendSpace_3992DED9430BCC33FAE52BB2A36FFDE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_TransitionResult_9FDEEAAB4E852F52822155BCD100A28F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_TransitionResult_EAF54086452526F0EBFE5DA83591B0B6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_TransitionResult_E32A8ED74073E2B772FF03A594F55F64();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_FN_Bud_AnimGraphNode_BlendListByBool_A686ADE24E6B2BA666B27EBDA2B83FEA();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_FN_Bud_C">();
	}
	static class UAnimBP_FN_Bud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_FN_Bud_C>();
	}
};
static_assert(alignof(UAnimBP_FN_Bud_C) == 0x000010, "Wrong alignment on UAnimBP_FN_Bud_C");
static_assert(sizeof(UAnimBP_FN_Bud_C) == 0x001320, "Wrong size on UAnimBP_FN_Bud_C");
static_assert(offsetof(UAnimBP_FN_Bud_C, UberGraphFrame) == 0x000370, "Member 'UAnimBP_FN_Bud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_Slot_1) == 0x000378, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0003C0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_10) == 0x000548, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_9) == 0x000570, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_8) == 0x000598, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_7) == 0x0005C0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_6) == 0x0005E8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_5) == 0x000610, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_4) == 0x000638, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_3) == 0x000660, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_2) == 0x000688, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_6) == 0x0006B0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_7) == 0x000728, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_5) == 0x000758, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_6) == 0x0007D0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_4) == 0x000800, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_5) == 0x000878, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_3) == 0x0008A8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_4) == 0x000920, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_2) == 0x000950, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_3) == 0x0009C8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer_1) == 0x0009F8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_2) == 0x000A70, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateMachine_1) == 0x000AA0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_Root) == 0x000B50, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_BlendListByBool_1) == 0x000B80, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SaveCachedPose_1) == 0x000C20, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_UseCachedPose_4) == 0x000CE8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_LayeredBoneBlend) == 0x000D10, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_UseCachedPose_3) == 0x000DD0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_Slot) == 0x000DF8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_UseCachedPose_2) == 0x000E40, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_ApplyAdditive) == 0x000E68, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult_1) == 0x000F30, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_TransitionResult) == 0x000F58, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SequencePlayer) == 0x000F80, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult_1) == 0x000FF8, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_IdentityPose) == 0x001028, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateResult) == 0x001040, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_StateMachine) == 0x001070, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_BlendListByBool) == 0x001120, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_SaveCachedPose) == 0x0011C0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_UseCachedPose_1) == 0x001288, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AnimGraphNode_UseCachedPose) == 0x0012B0, "Member 'UAnimBP_FN_Bud_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, NewVar_0) == 0x0012D8, "Member 'UAnimBP_FN_Bud_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, BaseRot) == 0x0012E0, "Member 'UAnimBP_FN_Bud_C::BaseRot' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, Yaw) == 0x0012EC, "Member 'UAnimBP_FN_Bud_C::Yaw' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AimRot) == 0x0012F0, "Member 'UAnimBP_FN_Bud_C::AimRot' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, YawAim) == 0x0012FC, "Member 'UAnimBP_FN_Bud_C::YawAim' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, PitchAim) == 0x001300, "Member 'UAnimBP_FN_Bud_C::PitchAim' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, Pitch) == 0x001304, "Member 'UAnimBP_FN_Bud_C::Pitch' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, AimOffsetYaw) == 0x001308, "Member 'UAnimBP_FN_Bud_C::AimOffsetYaw' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, Size) == 0x00130C, "Member 'UAnimBP_FN_Bud_C::Size' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, PItchOffsetYaw) == 0x001310, "Member 'UAnimBP_FN_Bud_C::PItchOffsetYaw' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, IsDormant) == 0x001314, "Member 'UAnimBP_FN_Bud_C::IsDormant' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, IsCrouched) == 0x001315, "Member 'UAnimBP_FN_Bud_C::IsCrouched' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, IsOrphaned) == 0x001316, "Member 'UAnimBP_FN_Bud_C::IsOrphaned' has a wrong offset!");
static_assert(offsetof(UAnimBP_FN_Bud_C, DidWakeUp) == 0x001317, "Member 'UAnimBP_FN_Bud_C::DidWakeUp' has a wrong offset!");

}

