#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HeldObject_Parent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.ExecuteUbergraph_B_HeldObject_Parent
// 0x0028 (0x0028 - 0x0000)
struct B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6650[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6651[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent) == 0x000008, "Wrong alignment on B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent");
static_assert(sizeof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent) == 0x000028, "Wrong size on B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent");
static_assert(offsetof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent, EntryPoint) == 0x000000, "Member 'B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent, K2Node_Event_InteractingPawn) == 0x000008, "Member 'B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent, K2Node_Event_InteractionBeingAttempted) == 0x000010, "Member 'B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000018, "Member 'B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_HeldObject_Parent_C_ExecuteUbergraph_B_HeldObject_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct B_HeldObject_Parent_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Parent_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on B_HeldObject_Parent_C_BlueprintOnInteract");
static_assert(sizeof(B_HeldObject_Parent_C_BlueprintOnInteract) == 0x000010, "Wrong size on B_HeldObject_Parent_C_BlueprintOnInteract");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Parent_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Parent_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.OnRep_IsHeld
// 0x0094 (0x0094 - 0x0000)
struct B_HeldObject_Parent_C_OnRep_IsHeld final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0000(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x008C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Parent_C_OnRep_IsHeld) == 0x000004, "Wrong alignment on B_HeldObject_Parent_C_OnRep_IsHeld");
static_assert(sizeof(B_HeldObject_Parent_C_OnRep_IsHeld) == 0x000094, "Wrong size on B_HeldObject_Parent_C_OnRep_IsHeld");
static_assert(offsetof(B_HeldObject_Parent_C_OnRep_IsHeld, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000000, "Member 'B_HeldObject_Parent_C_OnRep_IsHeld::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_OnRep_IsHeld, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x00008C, "Member 'B_HeldObject_Parent_C_OnRep_IsHeld::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.OnRep_IsSocketed
// 0x0002 (0x0002 - 0x0000)
struct B_HeldObject_Parent_C_OnRep_IsSocketed final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_HeldObject_Parent_C_OnRep_IsSocketed) == 0x000001, "Wrong alignment on B_HeldObject_Parent_C_OnRep_IsSocketed");
static_assert(sizeof(B_HeldObject_Parent_C_OnRep_IsSocketed) == 0x000002, "Wrong size on B_HeldObject_Parent_C_OnRep_IsSocketed");
static_assert(offsetof(B_HeldObject_Parent_C_OnRep_IsSocketed, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_HeldObject_Parent_C_OnRep_IsSocketed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_OnRep_IsSocketed, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_HeldObject_Parent_C_OnRep_IsSocketed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct B_HeldObject_Parent_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_HeldObject_Parent_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on B_HeldObject_Parent_C_BlueprintCanInteract");
static_assert(sizeof(B_HeldObject_Parent_C_BlueprintCanInteract) == 0x000010, "Wrong size on B_HeldObject_Parent_C_BlueprintCanInteract");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Parent_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Parent_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'B_HeldObject_Parent_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'B_HeldObject_Parent_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'B_HeldObject_Parent_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_HeldObject_Parent.B_HeldObject_Parent_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct B_HeldObject_Parent_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6652[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(B_HeldObject_Parent_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on B_HeldObject_Parent_C_BlueprintGetInteractionString");
static_assert(sizeof(B_HeldObject_Parent_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on B_HeldObject_Parent_C_BlueprintGetInteractionString");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Parent_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Parent_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Parent_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'B_HeldObject_Parent_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

}

