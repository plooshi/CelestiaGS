#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ComicReader

#include "Basic.hpp"

#include "ComicReader_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ComicReader.FortComicReader.SetCurrentPage
// 0x0004 (0x0004 - 0x0000)
struct FortComicReader_SetCurrentPage final
{
public:
	int32                                         InPageIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_SetCurrentPage) == 0x000004, "Wrong alignment on FortComicReader_SetCurrentPage");
static_assert(sizeof(FortComicReader_SetCurrentPage) == 0x000004, "Wrong size on FortComicReader_SetCurrentPage");
static_assert(offsetof(FortComicReader_SetCurrentPage, InPageIndex) == 0x000000, "Member 'FortComicReader_SetCurrentPage::InPageIndex' has a wrong offset!");

// Function ComicReader.FortComicReader.GetCurrentPageIndex
// 0x0004 (0x0004 - 0x0000)
struct FortComicReader_GetCurrentPageIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetCurrentPageIndex) == 0x000004, "Wrong alignment on FortComicReader_GetCurrentPageIndex");
static_assert(sizeof(FortComicReader_GetCurrentPageIndex) == 0x000004, "Wrong size on FortComicReader_GetCurrentPageIndex");
static_assert(offsetof(FortComicReader_GetCurrentPageIndex, ReturnValue) == 0x000000, "Member 'FortComicReader_GetCurrentPageIndex::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicReader.GetCurrentPageNumber
// 0x0004 (0x0004 - 0x0000)
struct FortComicReader_GetCurrentPageNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetCurrentPageNumber) == 0x000004, "Wrong alignment on FortComicReader_GetCurrentPageNumber");
static_assert(sizeof(FortComicReader_GetCurrentPageNumber) == 0x000004, "Wrong size on FortComicReader_GetCurrentPageNumber");
static_assert(offsetof(FortComicReader_GetCurrentPageNumber, ReturnValue) == 0x000000, "Member 'FortComicReader_GetCurrentPageNumber::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicReader.GetCurrentPanelIndex
// 0x0004 (0x0004 - 0x0000)
struct FortComicReader_GetCurrentPanelIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetCurrentPanelIndex) == 0x000004, "Wrong alignment on FortComicReader_GetCurrentPanelIndex");
static_assert(sizeof(FortComicReader_GetCurrentPanelIndex) == 0x000004, "Wrong size on FortComicReader_GetCurrentPanelIndex");
static_assert(offsetof(FortComicReader_GetCurrentPanelIndex, ReturnValue) == 0x000000, "Member 'FortComicReader_GetCurrentPanelIndex::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicReader.GetNumPanelsOnPage
// 0x0008 (0x0008 - 0x0000)
struct FortComicReader_GetNumPanelsOnPage final
{
public:
	int32                                         InPageNum;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetNumPanelsOnPage) == 0x000004, "Wrong alignment on FortComicReader_GetNumPanelsOnPage");
static_assert(sizeof(FortComicReader_GetNumPanelsOnPage) == 0x000008, "Wrong size on FortComicReader_GetNumPanelsOnPage");
static_assert(offsetof(FortComicReader_GetNumPanelsOnPage, InPageNum) == 0x000000, "Member 'FortComicReader_GetNumPanelsOnPage::InPageNum' has a wrong offset!");
static_assert(offsetof(FortComicReader_GetNumPanelsOnPage, ReturnValue) == 0x000004, "Member 'FortComicReader_GetNumPanelsOnPage::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicReader.GetTotalPageNumber
// 0x0004 (0x0004 - 0x0000)
struct FortComicReader_GetTotalPageNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetTotalPageNumber) == 0x000004, "Wrong alignment on FortComicReader_GetTotalPageNumber");
static_assert(sizeof(FortComicReader_GetTotalPageNumber) == 0x000004, "Wrong size on FortComicReader_GetTotalPageNumber");
static_assert(offsetof(FortComicReader_GetTotalPageNumber, ReturnValue) == 0x000000, "Member 'FortComicReader_GetTotalPageNumber::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicReader.GetViewMode
// 0x0001 (0x0001 - 0x0000)
struct FortComicReader_GetViewMode final
{
public:
	EFortComicViewMode                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicReader_GetViewMode) == 0x000001, "Wrong alignment on FortComicReader_GetViewMode");
static_assert(sizeof(FortComicReader_GetViewMode) == 0x000001, "Wrong size on FortComicReader_GetViewMode");
static_assert(offsetof(FortComicReader_GetViewMode, ReturnValue) == 0x000000, "Member 'FortComicReader_GetViewMode::ReturnValue' has a wrong offset!");

// Function ComicReader.FortComicScreen.HandlePreprocessorNavInput
// 0x0001 (0x0001 - 0x0000)
struct FortComicScreen_HandlePreprocessorNavInput final
{
public:
	EUINavigation                                 InNavDirection;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicScreen_HandlePreprocessorNavInput) == 0x000001, "Wrong alignment on FortComicScreen_HandlePreprocessorNavInput");
static_assert(sizeof(FortComicScreen_HandlePreprocessorNavInput) == 0x000001, "Wrong size on FortComicScreen_HandlePreprocessorNavInput");
static_assert(offsetof(FortComicScreen_HandlePreprocessorNavInput, InNavDirection) == 0x000000, "Member 'FortComicScreen_HandlePreprocessorNavInput::InNavDirection' has a wrong offset!");

// Function ComicReader.FortComicScreen.OnPreProcessedNavInput
// 0x0001 (0x0001 - 0x0000)
struct FortComicScreen_OnPreProcessedNavInput final
{
public:
	EUINavigation                                 NavInput;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicScreen_OnPreProcessedNavInput) == 0x000001, "Wrong alignment on FortComicScreen_OnPreProcessedNavInput");
static_assert(sizeof(FortComicScreen_OnPreProcessedNavInput) == 0x000001, "Wrong size on FortComicScreen_OnPreProcessedNavInput");
static_assert(offsetof(FortComicScreen_OnPreProcessedNavInput, NavInput) == 0x000000, "Member 'FortComicScreen_OnPreProcessedNavInput::NavInput' has a wrong offset!");

// Function ComicReader.FortComicScreen.UpdateComicTitle
// 0x0010 (0x0010 - 0x0000)
struct FortComicScreen_UpdateComicTitle final
{
public:
	class FString                                 InComicTitle;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicScreen_UpdateComicTitle) == 0x000008, "Wrong alignment on FortComicScreen_UpdateComicTitle");
static_assert(sizeof(FortComicScreen_UpdateComicTitle) == 0x000010, "Wrong size on FortComicScreen_UpdateComicTitle");
static_assert(offsetof(FortComicScreen_UpdateComicTitle, InComicTitle) == 0x000000, "Member 'FortComicScreen_UpdateComicTitle::InComicTitle' has a wrong offset!");

// Function ComicReader.FortComicScreen.UpdateShowContinueOnLastPage
// 0x0001 (0x0001 - 0x0000)
struct FortComicScreen_UpdateShowContinueOnLastPage final
{
public:
	bool                                          InShowContinue;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComicScreen_UpdateShowContinueOnLastPage) == 0x000001, "Wrong alignment on FortComicScreen_UpdateShowContinueOnLastPage");
static_assert(sizeof(FortComicScreen_UpdateShowContinueOnLastPage) == 0x000001, "Wrong size on FortComicScreen_UpdateShowContinueOnLastPage");
static_assert(offsetof(FortComicScreen_UpdateShowContinueOnLastPage, InShowContinue) == 0x000000, "Member 'FortComicScreen_UpdateShowContinueOnLastPage::InShowContinue' has a wrong offset!");

}

