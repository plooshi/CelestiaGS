#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleItemTile

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SimpleItemTile.SimpleItemTile_C.ExecuteUbergraph_SimpleItemTile
// 0x00A0 (0x00A0 - 0x0000)
struct SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_CustomEvent_Rarity;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E87[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0008(0x0080)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Weapon_Icon;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_CustomEvent_Rarity_1;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile) == 0x000008, "Wrong alignment on SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile");
static_assert(sizeof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile) == 0x0000A0, "Wrong size on SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, EntryPoint) == 0x000000, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, K2Node_CustomEvent_Rarity) == 0x000004, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::K2Node_CustomEvent_Rarity' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, CallFunc_BPGetRarityData_ReturnValue) == 0x000008, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000088, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, K2Node_CustomEvent_Weapon_Icon) == 0x000090, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::K2Node_CustomEvent_Weapon_Icon' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, K2Node_CustomEvent_Rarity_1) == 0x000098, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::K2Node_CustomEvent_Rarity_1' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile, K2Node_Event_IsDesignTime) == 0x000099, "Member 'SimpleItemTile_C_ExecuteUbergraph_SimpleItemTile::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function SimpleItemTile.SimpleItemTile_C.Colorize
// 0x0001 (0x0001 - 0x0000)
struct SimpleItemTile_C_Colorize final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleItemTile_C_Colorize) == 0x000001, "Wrong alignment on SimpleItemTile_C_Colorize");
static_assert(sizeof(SimpleItemTile_C_Colorize) == 0x000001, "Wrong size on SimpleItemTile_C_Colorize");
static_assert(offsetof(SimpleItemTile_C_Colorize, Rarity) == 0x000000, "Member 'SimpleItemTile_C_Colorize::Rarity' has a wrong offset!");

// Function SimpleItemTile.SimpleItemTile_C.Set Icon
// 0x0010 (0x0010 - 0x0000)
struct SimpleItemTile_C_Set_Icon final
{
public:
	class UTexture2D*                             Weapon_Icon;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   Rarity;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleItemTile_C_Set_Icon) == 0x000008, "Wrong alignment on SimpleItemTile_C_Set_Icon");
static_assert(sizeof(SimpleItemTile_C_Set_Icon) == 0x000010, "Wrong size on SimpleItemTile_C_Set_Icon");
static_assert(offsetof(SimpleItemTile_C_Set_Icon, Weapon_Icon) == 0x000000, "Member 'SimpleItemTile_C_Set_Icon::Weapon_Icon' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_Set_Icon, Rarity) == 0x000008, "Member 'SimpleItemTile_C_Set_Icon::Rarity' has a wrong offset!");

// Function SimpleItemTile.SimpleItemTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SimpleItemTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SimpleItemTile_C_PreConstruct) == 0x000001, "Wrong alignment on SimpleItemTile_C_PreConstruct");
static_assert(sizeof(SimpleItemTile_C_PreConstruct) == 0x000001, "Wrong size on SimpleItemTile_C_PreConstruct");
static_assert(offsetof(SimpleItemTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SimpleItemTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SimpleItemTile.SimpleItemTile_C.SetShear
// 0x0050 (0x0050 - 0x0000)
struct SimpleItemTile_C_SetShear final
{
public:
	int32                                         ShearAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E88[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimpleItemTile_C_SetShear) == 0x000008, "Wrong alignment on SimpleItemTile_C_SetShear");
static_assert(sizeof(SimpleItemTile_C_SetShear) == 0x000050, "Wrong size on SimpleItemTile_C_SetShear");
static_assert(offsetof(SimpleItemTile_C_SetShear, ShearAmount) == 0x000000, "Member 'SimpleItemTile_C_SetShear::ShearAmount' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'SimpleItemTile_C_SetShear::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, K2Node_MakeStruct_Margin) == 0x000008, "Member 'SimpleItemTile_C_SetShear::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, K2Node_MakeStruct_Margin_1) == 0x000018, "Member 'SimpleItemTile_C_SetShear::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000028, "Member 'SimpleItemTile_C_SetShear::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, CallFunc_SlotAsBorderSlot_ReturnValue_1) == 0x000030, "Member 'SimpleItemTile_C_SetShear::CallFunc_SlotAsBorderSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, K2Node_MakeStruct_Margin_2) == 0x000038, "Member 'SimpleItemTile_C_SetShear::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(SimpleItemTile_C_SetShear, CallFunc_SlotAsBorderSlot_ReturnValue_2) == 0x000048, "Member 'SimpleItemTile_C_SetShear::CallFunc_SlotAsBorderSlot_ReturnValue_2' has a wrong offset!");

}

