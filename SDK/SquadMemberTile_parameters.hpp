#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadMemberTile

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function SquadMemberTile.SquadMemberTile_C.SetVisuals
// 0x0040 (0x0040 - 0x0000)
struct SquadMemberTile_C_SetVisuals final
{
public:
	EGameReadiness                                Member_Readiness;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_In_Frontend;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AFD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AFE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AFF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameReadiness                                Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B00[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_SetVisuals) == 0x000008, "Wrong alignment on SquadMemberTile_C_SetVisuals");
static_assert(sizeof(SquadMemberTile_C_SetVisuals) == 0x000040, "Wrong size on SquadMemberTile_C_SetVisuals");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Member_Readiness) == 0x000000, "Member 'SquadMemberTile_C_SetVisuals::Member_Readiness' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Is_In_Frontend) == 0x000001, "Member 'SquadMemberTile_C_SetVisuals::Is_In_Frontend' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Temp_object_Variable) == 0x000008, "Member 'SquadMemberTile_C_SetVisuals::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'SquadMemberTile_C_SetVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'SquadMemberTile_C_SetVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'SquadMemberTile_C_SetVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000013, "Member 'SquadMemberTile_C_SetVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Temp_object_Variable_1) == 0x000018, "Member 'SquadMemberTile_C_SetVisuals::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'SquadMemberTile_C_SetVisuals::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Temp_object_Variable_2) == 0x000028, "Member 'SquadMemberTile_C_SetVisuals::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, Temp_byte_Variable) == 0x000030, "Member 'SquadMemberTile_C_SetVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetVisuals, K2Node_Select_Default) == 0x000038, "Member 'SquadMemberTile_C_SetVisuals::K2Node_Select_Default' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.SetEmptyVisuals
// 0x0038 (0x0038 - 0x0000)
struct SquadMemberTile_C_SetEmptyVisuals final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_SetEmptyVisuals) == 0x000008, "Wrong alignment on SquadMemberTile_C_SetEmptyVisuals");
static_assert(sizeof(SquadMemberTile_C_SetEmptyVisuals) == 0x000038, "Wrong size on SquadMemberTile_C_SetEmptyVisuals");
static_assert(offsetof(SquadMemberTile_C_SetEmptyVisuals, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'SquadMemberTile_C_SetEmptyVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetEmptyVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'SquadMemberTile_C_SetEmptyVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetEmptyVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'SquadMemberTile_C_SetEmptyVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.SetSitOutVisuals
// 0x0038 (0x0038 - 0x0000)
struct SquadMemberTile_C_SetSitOutVisuals final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_SetSitOutVisuals) == 0x000008, "Wrong alignment on SquadMemberTile_C_SetSitOutVisuals");
static_assert(sizeof(SquadMemberTile_C_SetSitOutVisuals) == 0x000038, "Wrong size on SquadMemberTile_C_SetSitOutVisuals");
static_assert(offsetof(SquadMemberTile_C_SetSitOutVisuals, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'SquadMemberTile_C_SetSitOutVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetSitOutVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'SquadMemberTile_C_SetSitOutVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetSitOutVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'SquadMemberTile_C_SetSitOutVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.SetReadyVisuals
// 0x0038 (0x0038 - 0x0000)
struct SquadMemberTile_C_SetReadyVisuals final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_SetReadyVisuals) == 0x000008, "Wrong alignment on SquadMemberTile_C_SetReadyVisuals");
static_assert(sizeof(SquadMemberTile_C_SetReadyVisuals) == 0x000038, "Wrong size on SquadMemberTile_C_SetReadyVisuals");
static_assert(offsetof(SquadMemberTile_C_SetReadyVisuals, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'SquadMemberTile_C_SetReadyVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetReadyVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'SquadMemberTile_C_SetReadyVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetReadyVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'SquadMemberTile_C_SetReadyVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.SetNotReadyVisuals
// 0x0038 (0x0038 - 0x0000)
struct SquadMemberTile_C_SetNotReadyVisuals final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_SetNotReadyVisuals) == 0x000008, "Wrong alignment on SquadMemberTile_C_SetNotReadyVisuals");
static_assert(sizeof(SquadMemberTile_C_SetNotReadyVisuals) == 0x000038, "Wrong size on SquadMemberTile_C_SetNotReadyVisuals");
static_assert(offsetof(SquadMemberTile_C_SetNotReadyVisuals, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'SquadMemberTile_C_SetNotReadyVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetNotReadyVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'SquadMemberTile_C_SetNotReadyVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_SetNotReadyVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'SquadMemberTile_C_SetNotReadyVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7
// 0x0008 (0x0008 - 0x0000)
struct SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7) == 0x000008, "Wrong alignment on SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7");
static_assert(sizeof(SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7) == 0x000008, "Wrong size on SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7");
static_assert(offsetof(SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7, Loaded) == 0x000000, "Member 'SquadMemberTile_C_OnLoaded_A3B69DDA4214DBAA66546FAB9F43D5E7::Loaded' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SquadMemberTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadMemberTile_C_PreConstruct) == 0x000001, "Wrong alignment on SquadMemberTile_C_PreConstruct");
static_assert(sizeof(SquadMemberTile_C_PreConstruct) == 0x000001, "Wrong size on SquadMemberTile_C_PreConstruct");
static_assert(offsetof(SquadMemberTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SquadMemberTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.OnMemberGameReadinessChanged
// 0x0001 (0x0001 - 0x0000)
struct SquadMemberTile_C_OnMemberGameReadinessChanged final
{
public:
	EGameReadiness                                ReadyStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadMemberTile_C_OnMemberGameReadinessChanged) == 0x000001, "Wrong alignment on SquadMemberTile_C_OnMemberGameReadinessChanged");
static_assert(sizeof(SquadMemberTile_C_OnMemberGameReadinessChanged) == 0x000001, "Wrong size on SquadMemberTile_C_OnMemberGameReadinessChanged");
static_assert(offsetof(SquadMemberTile_C_OnMemberGameReadinessChanged, ReadyStatus) == 0x000000, "Member 'SquadMemberTile_C_OnMemberGameReadinessChanged::ReadyStatus' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.BP_OnTeamMemberEstablished
// 0x0001 (0x0001 - 0x0000)
struct SquadMemberTile_C_BP_OnTeamMemberEstablished final
{
public:
	bool                                          bHasValidMember;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadMemberTile_C_BP_OnTeamMemberEstablished) == 0x000001, "Wrong alignment on SquadMemberTile_C_BP_OnTeamMemberEstablished");
static_assert(sizeof(SquadMemberTile_C_BP_OnTeamMemberEstablished) == 0x000001, "Wrong size on SquadMemberTile_C_BP_OnTeamMemberEstablished");
static_assert(offsetof(SquadMemberTile_C_BP_OnTeamMemberEstablished, bHasValidMember) == 0x000000, "Member 'SquadMemberTile_C_BP_OnTeamMemberEstablished::bHasValidMember' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.OnMemberIsInFrontendChanged
// 0x0001 (0x0001 - 0x0000)
struct SquadMemberTile_C_OnMemberIsInFrontendChanged final
{
public:
	bool                                          bIsInFrontEnd;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadMemberTile_C_OnMemberIsInFrontendChanged) == 0x000001, "Wrong alignment on SquadMemberTile_C_OnMemberIsInFrontendChanged");
static_assert(sizeof(SquadMemberTile_C_OnMemberIsInFrontendChanged) == 0x000001, "Wrong size on SquadMemberTile_C_OnMemberIsInFrontendChanged");
static_assert(offsetof(SquadMemberTile_C_OnMemberIsInFrontendChanged, bIsInFrontEnd) == 0x000000, "Member 'SquadMemberTile_C_OnMemberIsInFrontendChanged::bIsInFrontEnd' has a wrong offset!");

// Function SquadMemberTile.SquadMemberTile_C.ExecuteUbergraph_SquadMemberTile
// 0x0100 (0x0100 - 0x0000)
struct SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameReadiness                                CallFunc_GetCurrentMemberGameReadiness_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B01[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAthenaTeamDisplayInfo                 CallFunc_GetSquadDisplayInfo_ReturnValue;          // 0x0020(0x0088)()
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentMemberLocal_ReturnValue;         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameReadiness                                K2Node_Event_ReadyStatus;                          // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B02[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasValidMember;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B03[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bIsInFrontend;                        // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentMemberInFrontend_ReturnValue;    // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile) == 0x000008, "Wrong alignment on SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile");
static_assert(sizeof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile) == 0x000100, "Wrong size on SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, EntryPoint) == 0x000000, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_GetCurrentMemberGameReadiness_ReturnValue) == 0x000004, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_GetCurrentMemberGameReadiness_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, Temp_object_Variable) == 0x000018, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_GetSquadDisplayInfo_ReturnValue) == 0x000020, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_GetSquadDisplayInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_DynamicCast_AsTexture) == 0x0000A8, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_IsCurrentMemberLocal_ReturnValue) == 0x0000B1, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_IsCurrentMemberLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_Event_IsDesignTime) == 0x0000B2, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_Event_ReadyStatus) == 0x0000B3, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_Event_ReadyStatus' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000B8, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C0, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000C8, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0000D0, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000D8, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_CustomEvent_Loaded) == 0x0000E0, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_Event_bHasValidMember) == 0x0000E8, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_Event_bHasValidMember' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, K2Node_Event_bIsInFrontend) == 0x0000FC, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::K2Node_Event_bIsInFrontend' has a wrong offset!");
static_assert(offsetof(SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile, CallFunc_IsCurrentMemberInFrontend_ReturnValue) == 0x0000FD, "Member 'SquadMemberTile_C_ExecuteUbergraph_SquadMemberTile::CallFunc_IsCurrentMemberInFrontend_ReturnValue' has a wrong offset!");

}

