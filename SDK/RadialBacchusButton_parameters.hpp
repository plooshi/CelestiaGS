#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialBacchusButton

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RadialBacchusButton.RadialBacchusButton_C.ExecuteUbergraph_RadialBacchusButton
// 0x0238 (0x0238 - 0x0000)
struct RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCursorModeEnabled;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ActionName;                     // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79DC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_CursorModeContentWidget;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DE[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListenedTag_Match;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsListenedTag_Match_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DF[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_EventName;                            // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_Event_EventType;                            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E0[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x00B0(0x00B8)(ConstParm, ContainsInstancedReference)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0170(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0190(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0198(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x01B8(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E1[0x1];                                     // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Remaining;                            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Duration;                             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton) == 0x000008, "Wrong alignment on RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton");
static_assert(sizeof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton) == 0x000238, "Wrong size on RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, EntryPoint) == 0x000000, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_CustomEvent_bCursorModeEnabled) == 0x000028, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_CustomEvent_bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_CustomEvent_ActionName) == 0x00002C, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_CustomEvent_ActionName' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_CustomEvent_CursorModeContentWidget) == 0x000038, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_CustomEvent_CursorModeContentWidget' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000050, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000060, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000070, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000074, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_FClamp_ReturnValue) == 0x00007C, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000080, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000088, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000090, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_GetContext_ReturnValue) == 0x000098, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_IsListenedTag_Match) == 0x0000A0, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_IsListenedTag_Match' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_IsListenedTag_Match_1) == 0x0000A1, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_IsListenedTag_Match_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_Event_EventName) == 0x0000A4, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_Event_EventName' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_Event_EventType) == 0x0000AC, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_Event_Parameters) == 0x0000B0, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000168, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x00016C, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000170, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000188, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000190, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000198, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x0001B8, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_Location) == 0x0001D8, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_Normal) == 0x0001E4, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_Instigator) == 0x0001F0, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x0001F8, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000200, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000208, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000210, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x000214, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000218, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_SwitchEnum_CmpSuccess) == 0x000220, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000221, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_SwitchName_CmpSuccess) == 0x000222, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_Event_Remaining) == 0x000224, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_Event_Remaining' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, K2Node_Event_Duration) == 0x000228, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00022C, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_FMax_ReturnValue) == 0x000230, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton, CallFunc_FClamp_ReturnValue_1) == 0x000234, "Member 'RadialBacchusButton_C_ExecuteUbergraph_RadialBacchusButton::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function RadialBacchusButton.RadialBacchusButton_C.UpdateDuration_Blueprint
// 0x0008 (0x0008 - 0x0000)
struct RadialBacchusButton_C_UpdateDuration_Blueprint final
{
public:
	float                                         Remaining;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Duration;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialBacchusButton_C_UpdateDuration_Blueprint) == 0x000004, "Wrong alignment on RadialBacchusButton_C_UpdateDuration_Blueprint");
static_assert(sizeof(RadialBacchusButton_C_UpdateDuration_Blueprint) == 0x000008, "Wrong size on RadialBacchusButton_C_UpdateDuration_Blueprint");
static_assert(offsetof(RadialBacchusButton_C_UpdateDuration_Blueprint, Remaining) == 0x000000, "Member 'RadialBacchusButton_C_UpdateDuration_Blueprint::Remaining' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_UpdateDuration_Blueprint, Param_Duration) == 0x000004, "Member 'RadialBacchusButton_C_UpdateDuration_Blueprint::Param_Duration' has a wrong offset!");

// Function RadialBacchusButton.RadialBacchusButton_C.ReceiveRadialProgressEvent_Blueprint
// 0x00C8 (0x00C8 - 0x0000)
struct RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             EventType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint) == 0x000008, "Wrong alignment on RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint");
static_assert(sizeof(RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint) == 0x0000C8, "Wrong size on RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint");
static_assert(offsetof(RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint, EventName) == 0x000000, "Member 'RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint::EventName' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint, EventType) == 0x000008, "Member 'RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint::EventType' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint, Parameters) == 0x000010, "Member 'RadialBacchusButton_C_ReceiveRadialProgressEvent_Blueprint::Parameters' has a wrong offset!");

// Function RadialBacchusButton.RadialBacchusButton_C.OnCursorModeChanged
// 0x0018 (0x0018 - 0x0000)
struct RadialBacchusButton_C_OnCursorModeChanged final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialBacchusButton_C_OnCursorModeChanged) == 0x000008, "Wrong alignment on RadialBacchusButton_C_OnCursorModeChanged");
static_assert(sizeof(RadialBacchusButton_C_OnCursorModeChanged) == 0x000018, "Wrong size on RadialBacchusButton_C_OnCursorModeChanged");
static_assert(offsetof(RadialBacchusButton_C_OnCursorModeChanged, bCursorModeEnabled) == 0x000000, "Member 'RadialBacchusButton_C_OnCursorModeChanged::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_OnCursorModeChanged, ActionName) == 0x000004, "Member 'RadialBacchusButton_C_OnCursorModeChanged::ActionName' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_OnCursorModeChanged, CursorModeContentWidget) == 0x000010, "Member 'RadialBacchusButton_C_OnCursorModeChanged::CursorModeContentWidget' has a wrong offset!");

// Function RadialBacchusButton.RadialBacchusButton_C.IsListenedTag
// 0x0018 (0x0018 - 0x0000)
struct RadialBacchusButton_C_IsListenedTag final
{
public:
	struct FGameplayTag                           MatchedTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Match;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetListenedGameplayTag_ReturnValue;       // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadialBacchusButton_C_IsListenedTag) == 0x000004, "Wrong alignment on RadialBacchusButton_C_IsListenedTag");
static_assert(sizeof(RadialBacchusButton_C_IsListenedTag) == 0x000018, "Wrong size on RadialBacchusButton_C_IsListenedTag");
static_assert(offsetof(RadialBacchusButton_C_IsListenedTag, MatchedTag) == 0x000000, "Member 'RadialBacchusButton_C_IsListenedTag::MatchedTag' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_IsListenedTag, Match) == 0x000008, "Member 'RadialBacchusButton_C_IsListenedTag::Match' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_IsListenedTag, CallFunc_GetListenedGameplayTag_ReturnValue) == 0x00000C, "Member 'RadialBacchusButton_C_IsListenedTag::CallFunc_GetListenedGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialBacchusButton_C_IsListenedTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000014, "Member 'RadialBacchusButton_C_IsListenedTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

}

