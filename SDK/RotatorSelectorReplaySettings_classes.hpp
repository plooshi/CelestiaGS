#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RotatorSelectorReplaySettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RotatorSelectorReplaySettings.RotatorSelectorReplaySettings_C
// 0x0070 (0x02C8 - 0x0258)
class URotatorSelectorReplaySettings_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIconTextButton_C*                      ButtonLeft;                                        // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRight;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisplayText;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LabelSizeBox;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextRotator_C*                         TextRotator;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7739[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HoverText;                                         // 0x0290(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             Selection_Changed;                                 // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCommonTextBlock*                       Tab_Tooltip_Text;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LabelWidth;                                        // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Selection_Changed__DelegateSignature(int32 Selected_Index);
	void ExecuteUbergraph_RotatorSelectorReplaySettings(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature(int32 Value);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void Update_Row_Selector(int32 Currently_Selected);
	void Initialize(const class FText& Display_Text, TArray<class FText>& Options, const class FText& Hover_Text, class UCommonTextBlock* Tab_Tooltip);
	void Center_On_Widget();
	void Update_Options(TArray<class FText>& Options);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RotatorSelectorReplaySettings_C">();
	}
	static class URotatorSelectorReplaySettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URotatorSelectorReplaySettings_C>();
	}
};
static_assert(alignof(URotatorSelectorReplaySettings_C) == 0x000008, "Wrong alignment on URotatorSelectorReplaySettings_C");
static_assert(sizeof(URotatorSelectorReplaySettings_C) == 0x0002C8, "Wrong size on URotatorSelectorReplaySettings_C");
static_assert(offsetof(URotatorSelectorReplaySettings_C, UberGraphFrame) == 0x000258, "Member 'URotatorSelectorReplaySettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, ButtonLeft) == 0x000260, "Member 'URotatorSelectorReplaySettings_C::ButtonLeft' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, ButtonRight) == 0x000268, "Member 'URotatorSelectorReplaySettings_C::ButtonRight' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, DisplayText) == 0x000270, "Member 'URotatorSelectorReplaySettings_C::DisplayText' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, LabelSizeBox) == 0x000278, "Member 'URotatorSelectorReplaySettings_C::LabelSizeBox' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, TextRotator) == 0x000280, "Member 'URotatorSelectorReplaySettings_C::TextRotator' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, SelectedIndex) == 0x000288, "Member 'URotatorSelectorReplaySettings_C::SelectedIndex' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, HoverText) == 0x000290, "Member 'URotatorSelectorReplaySettings_C::HoverText' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, Selection_Changed) == 0x0002A8, "Member 'URotatorSelectorReplaySettings_C::Selection_Changed' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, Tab_Tooltip_Text) == 0x0002B8, "Member 'URotatorSelectorReplaySettings_C::Tab_Tooltip_Text' has a wrong offset!");
static_assert(offsetof(URotatorSelectorReplaySettings_C, LabelWidth) == 0x0002C0, "Member 'URotatorSelectorReplaySettings_C::LabelWidth' has a wrong offset!");

}

