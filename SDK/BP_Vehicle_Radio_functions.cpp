#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vehicle_Radio

#include "Basic.hpp"

#include "BP_Vehicle_Radio_classes.hpp"
#include "BP_Vehicle_Radio_parameters.hpp"


namespace SDK
{

// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.ExecuteUbergraph_BP_Vehicle_Radio
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::ExecuteUbergraph_BP_Vehicle_Radio(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "ExecuteUbergraph_BP_Vehicle_Radio");

	Params::BP_Vehicle_Radio_C_ExecuteUbergraph_BP_Vehicle_Radio Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.StopRadio
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Radio_C::StopRadio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "StopRadio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioOpenFailed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FailedUrl                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::RadioOpenFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioOpenFailed");

	Params::BP_Vehicle_Radio_C_RadioOpenFailed Parms{};

	Parms.FailedUrl = move(FailedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioURLFailed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RetrievedUrl                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::RadioURLFailed(const class FString& RetrievedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioURLFailed");

	Params::BP_Vehicle_Radio_C_RadioURLFailed Parms{};

	Parms.RetrievedUrl = move(RetrievedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.PlayRadio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RetrievedUrl                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::PlayRadio(const class FString& RetrievedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "PlayRadio");

	Params::BP_Vehicle_Radio_C_PlayRadio Parms{};

	Parms.RetrievedUrl = move(RetrievedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.StartRadio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StationIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::StartRadio(int32 StationIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "StartRadio");

	Params::BP_Vehicle_Radio_C_StartRadio Parms{};

	Parms.StationIndex = StationIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Vehicle_Radio_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioPlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           URL                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Vehicle_Radio_C::RadioPlay(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioPlay");

	Params::BP_Vehicle_Radio_C_RadioPlay Parms{};

	Parms.URL = move(URL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioUnbindEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    JustURL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Vehicle_Radio_C::RadioUnbindEvents(bool JustURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioUnbindEvents");

	Params::BP_Vehicle_Radio_C_RadioUnbindEvents Parms{};

	Parms.JustURL = JustURL;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioRetry
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Radio_C::RadioRetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioRetry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Radio_C::RadioClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Radio.BP_Vehicle_Radio_C.RadioSendAnalytics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Radio_C::RadioSendAnalytics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Radio_C", "RadioSendAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}

}

