#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NitrogenRuntime

#include "Basic.hpp"

#include "NitrogenRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class NitrogenRuntime.FortAthenaMutator_Nitrogen
// 0x0D20 (0x1040 - 0x0320)
class AFortAthenaMutator_Nitrogen final : public AFortAthenaMutator_GameModeBase
{
public:
	uint8                                         Pad_4235[0x88];                                    // 0x0320(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PlayerSpecialActorTag;                             // 0x03A8(0x0008)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           PassengerSpecialActorTag;                          // 0x03B0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VehicleSpecialActorTag;                            // 0x03B8(0x0008)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNitrogenPOICombinationMap>     NitrogenPOICombinationList;                        // 0x03C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  MatchStartVehicleCleanupTags;                      // 0x03D0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MatchNearEndScoreRatio;                            // 0x03F0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bShouldPreStreamTeleportSpawnLocation;             // 0x0410(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         GPriorityAsyncLoadingExtraTimeMultiplier;          // 0x0430(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StreamInDistanceDuringLoadOverride;                // 0x0450(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UNitrogenPlayerComponent>   NitrogenPlayerComponentClass;                      // 0x0470(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FNitrogenPlayerGameplayAbilityOption> PlayerGameplayAbilityOptionList;                   // 0x0478(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FNitrogenPickupItemToDropOnDeath> PickupItemsToDropOnDeath;                          // 0x0488(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  VehicleInteractionAbilityTags;                     // 0x0498(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  DisallowedDamageTagsInSameVehicle;                 // 0x04B8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StormShieldRadiusCalculationMultiplier;            // 0x04D8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         StormShieldRadiusOffset;                           // 0x04F8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FVector>     OverridePOILocationsByTagMap;                      // 0x0518(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPrimaryAssetId                        NitrogenVehicleAssetId;                            // 0x0568(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         VehicleSpawnZOffset;                               // 0x0578(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ANavArrow>                  NavArrowClass;                                     // 0x0598(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NumOfExtraVehiclesToMaintain;                      // 0x05A0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            ExplosionDamageMultiplierGE;                       // 0x05C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSquadStartSearchParamData         SquadStartSearchParam;                             // 0x05C8(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RemoveLoadingScreenFailsafeTimerDuration;          // 0x0668(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortSquadStartSearchParamData         RespawnPointSearchParam;                           // 0x0688(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RespawnPointCooldownDuration;                      // 0x0728(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                                VehicleOverlapCheckBoxExtent;                      // 0x0748(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4236[0x4];                                     // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MinTeleportHeightAboveGround;                      // 0x0758(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   TeleportingPlayersText;                            // 0x0778(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ANitrogenFare>              NitrogenFareClass;                                 // 0x0790(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ANitrogenTraversePoint>     PickUpTraversePointClass;                          // 0x0798(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ANitrogenTraversePoint>     DropOffTraversePointClass;                         // 0x07A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bAllowSharedDropOffs;                              // 0x07A8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinimumDistanceBetweenPickupPoints;                // 0x07C8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bUseFarePortraitTextures;                          // 0x07E8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NumOfTopTeamsToShowOnMap;                          // 0x0808(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FNitrogenMapPlacementIcon>      PlacementBasedMapIcons;                            // 0x0828(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNitrogenMapIcon                       PickUpPointMapIcon;                                // 0x0838(0x00A8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNitrogenMapIcon                       DropOffPointMapIcon;                               // 0x08E0(0x00A8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNitrogenMapIcon                       VehicleMapIcon;                                    // 0x0988(0x00A8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NumOfFaresToShowOnCompass;                         // 0x0A30(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NumOfVehiclesToShowOnCompass;                      // 0x0A50(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaCompassIcon                 FareCompassIcon;                                   // 0x0A70(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaCompassIcon                 DropOffPointCompassIcon;                           // 0x0B10(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaCompassIcon                 VehicleCompassIcon;                                // 0x0BB0(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     DropOffWidgetActorClass;                           // 0x0C50(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     NearbyVehicleWidgetActorClass;                     // 0x0C58(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSquadStartSearchParamData         PickupCashbagSearchParam;                          // 0x0C60(0x00A0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CashbagSelectedPercentage;                         // 0x0D00(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FNitrogenPickupCashbagData> CashbagDataMap;                                    // 0x0D20(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PassengerDespawnDelay;                             // 0x0D70(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PlayerSpecialActorRepInterval;                     // 0x0D90(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           NitrogenVehicleTag;                                // 0x0DB0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4237[0x4];                                     // 0x0DB8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	ENitrogenGamePhase                            NitrogenGamePhase;                                 // 0x0DBC(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4238[0x33];                                    // 0x0DBD(0x0033)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNitrogenTeamData>              SortedTeamDataByScore;                             // 0x0DF0(0x0010)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AFortPlayerStateAthena*>         CacheLeadingReplicatedPlayerStates;                // 0x0E00(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                 NitrogenVehicleClass;                              // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FNitrogenVehicle>               NitrogenVehiclesList;                              // 0x0E18(0x0010)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AFortSquadStart*>                NitrogenSquadStarts;                               // 0x0E28(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FNitrogenSpawnData>             NitrogenSpawnInfo;                                 // 0x0E38(0x0010)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4239[0x18];                                    // 0x0E48(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaMutator_SynchronizedTeleport* TeleportMutator;                                   // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortAthenaMutator_GameStartCountdown*  GameStartCountdownMutator;                         // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortAthenaMutator_InventoryOverride*   InventoryMutator;                                  // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_423A[0x98];                                    // 0x0E78(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FNitrogenPOITraversePoints> UnassignedPickupPointsPerPOIMap;                   // 0x0F10(0x0050)(NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FNitrogenPOITraversePoints> UnassignedPOIBasedDropoffPointsMap;                // 0x0F60(0x0050)(NativeAccessSpecifierPrivate)
	TArray<class ANitrogenTraversePoint*>         UnassignedDistanceBasedDropoffPointsArray;         // 0x0FB0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_423B[0x10];                                    // 0x0FC0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ANavArrow*                              ClientNavArrow;                                    // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_423C[0x18];                                    // 0x0FD8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANitrogenFare*>                  CurrentFares;                                      // 0x0FF0(0x0010)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_423D[0x40];                                    // 0x1000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleGameStartCountdownEnd();
	void HandleGroupTeleportComplete();
	void HandlePlayerTeleportComplete(class AFortPlayerStateAthena* PlayerState);
	void OnNitrogenVehicleDestroyed(class AActor* VehicleDestroyed);
	void OnNitrogenVehicleDriverChanged(const class AFortPlayerControllerAthena* NewController, class AFortAthenaVehicle* Vehicle);
	void OnNitrogenVehiclePlayerExit(const class AFortPlayerControllerAthena* PlayerController, class AFortAthenaVehicle* Vehicle);
	void OnRep_CurrentFares();
	void OnRep_NitrogenGamePhase();
	void OnRep_NitrogenSpawnInfo();
	void OnRep_SortedTeamDataByScore();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_Nitrogen">();
	}
	static class AFortAthenaMutator_Nitrogen* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_Nitrogen>();
	}
};
static_assert(alignof(AFortAthenaMutator_Nitrogen) == 0x000008, "Wrong alignment on AFortAthenaMutator_Nitrogen");
static_assert(sizeof(AFortAthenaMutator_Nitrogen) == 0x001040, "Wrong size on AFortAthenaMutator_Nitrogen");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PlayerSpecialActorTag) == 0x0003A8, "Member 'AFortAthenaMutator_Nitrogen::PlayerSpecialActorTag' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PassengerSpecialActorTag) == 0x0003B0, "Member 'AFortAthenaMutator_Nitrogen::PassengerSpecialActorTag' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleSpecialActorTag) == 0x0003B8, "Member 'AFortAthenaMutator_Nitrogen::VehicleSpecialActorTag' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenPOICombinationList) == 0x0003C0, "Member 'AFortAthenaMutator_Nitrogen::NitrogenPOICombinationList' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, MatchStartVehicleCleanupTags) == 0x0003D0, "Member 'AFortAthenaMutator_Nitrogen::MatchStartVehicleCleanupTags' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, MatchNearEndScoreRatio) == 0x0003F0, "Member 'AFortAthenaMutator_Nitrogen::MatchNearEndScoreRatio' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, bShouldPreStreamTeleportSpawnLocation) == 0x000410, "Member 'AFortAthenaMutator_Nitrogen::bShouldPreStreamTeleportSpawnLocation' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, GPriorityAsyncLoadingExtraTimeMultiplier) == 0x000430, "Member 'AFortAthenaMutator_Nitrogen::GPriorityAsyncLoadingExtraTimeMultiplier' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, StreamInDistanceDuringLoadOverride) == 0x000450, "Member 'AFortAthenaMutator_Nitrogen::StreamInDistanceDuringLoadOverride' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenPlayerComponentClass) == 0x000470, "Member 'AFortAthenaMutator_Nitrogen::NitrogenPlayerComponentClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PlayerGameplayAbilityOptionList) == 0x000478, "Member 'AFortAthenaMutator_Nitrogen::PlayerGameplayAbilityOptionList' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PickupItemsToDropOnDeath) == 0x000488, "Member 'AFortAthenaMutator_Nitrogen::PickupItemsToDropOnDeath' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleInteractionAbilityTags) == 0x000498, "Member 'AFortAthenaMutator_Nitrogen::VehicleInteractionAbilityTags' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, DisallowedDamageTagsInSameVehicle) == 0x0004B8, "Member 'AFortAthenaMutator_Nitrogen::DisallowedDamageTagsInSameVehicle' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, StormShieldRadiusCalculationMultiplier) == 0x0004D8, "Member 'AFortAthenaMutator_Nitrogen::StormShieldRadiusCalculationMultiplier' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, StormShieldRadiusOffset) == 0x0004F8, "Member 'AFortAthenaMutator_Nitrogen::StormShieldRadiusOffset' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, OverridePOILocationsByTagMap) == 0x000518, "Member 'AFortAthenaMutator_Nitrogen::OverridePOILocationsByTagMap' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenVehicleAssetId) == 0x000568, "Member 'AFortAthenaMutator_Nitrogen::NitrogenVehicleAssetId' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleSpawnZOffset) == 0x000578, "Member 'AFortAthenaMutator_Nitrogen::VehicleSpawnZOffset' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NavArrowClass) == 0x000598, "Member 'AFortAthenaMutator_Nitrogen::NavArrowClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NumOfExtraVehiclesToMaintain) == 0x0005A0, "Member 'AFortAthenaMutator_Nitrogen::NumOfExtraVehiclesToMaintain' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, ExplosionDamageMultiplierGE) == 0x0005C0, "Member 'AFortAthenaMutator_Nitrogen::ExplosionDamageMultiplierGE' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, SquadStartSearchParam) == 0x0005C8, "Member 'AFortAthenaMutator_Nitrogen::SquadStartSearchParam' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, RemoveLoadingScreenFailsafeTimerDuration) == 0x000668, "Member 'AFortAthenaMutator_Nitrogen::RemoveLoadingScreenFailsafeTimerDuration' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, RespawnPointSearchParam) == 0x000688, "Member 'AFortAthenaMutator_Nitrogen::RespawnPointSearchParam' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, RespawnPointCooldownDuration) == 0x000728, "Member 'AFortAthenaMutator_Nitrogen::RespawnPointCooldownDuration' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleOverlapCheckBoxExtent) == 0x000748, "Member 'AFortAthenaMutator_Nitrogen::VehicleOverlapCheckBoxExtent' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, MinTeleportHeightAboveGround) == 0x000758, "Member 'AFortAthenaMutator_Nitrogen::MinTeleportHeightAboveGround' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, TeleportingPlayersText) == 0x000778, "Member 'AFortAthenaMutator_Nitrogen::TeleportingPlayersText' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenFareClass) == 0x000790, "Member 'AFortAthenaMutator_Nitrogen::NitrogenFareClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PickUpTraversePointClass) == 0x000798, "Member 'AFortAthenaMutator_Nitrogen::PickUpTraversePointClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, DropOffTraversePointClass) == 0x0007A0, "Member 'AFortAthenaMutator_Nitrogen::DropOffTraversePointClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, bAllowSharedDropOffs) == 0x0007A8, "Member 'AFortAthenaMutator_Nitrogen::bAllowSharedDropOffs' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, MinimumDistanceBetweenPickupPoints) == 0x0007C8, "Member 'AFortAthenaMutator_Nitrogen::MinimumDistanceBetweenPickupPoints' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, bUseFarePortraitTextures) == 0x0007E8, "Member 'AFortAthenaMutator_Nitrogen::bUseFarePortraitTextures' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NumOfTopTeamsToShowOnMap) == 0x000808, "Member 'AFortAthenaMutator_Nitrogen::NumOfTopTeamsToShowOnMap' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PlacementBasedMapIcons) == 0x000828, "Member 'AFortAthenaMutator_Nitrogen::PlacementBasedMapIcons' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PickUpPointMapIcon) == 0x000838, "Member 'AFortAthenaMutator_Nitrogen::PickUpPointMapIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, DropOffPointMapIcon) == 0x0008E0, "Member 'AFortAthenaMutator_Nitrogen::DropOffPointMapIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleMapIcon) == 0x000988, "Member 'AFortAthenaMutator_Nitrogen::VehicleMapIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NumOfFaresToShowOnCompass) == 0x000A30, "Member 'AFortAthenaMutator_Nitrogen::NumOfFaresToShowOnCompass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NumOfVehiclesToShowOnCompass) == 0x000A50, "Member 'AFortAthenaMutator_Nitrogen::NumOfVehiclesToShowOnCompass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, FareCompassIcon) == 0x000A70, "Member 'AFortAthenaMutator_Nitrogen::FareCompassIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, DropOffPointCompassIcon) == 0x000B10, "Member 'AFortAthenaMutator_Nitrogen::DropOffPointCompassIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, VehicleCompassIcon) == 0x000BB0, "Member 'AFortAthenaMutator_Nitrogen::VehicleCompassIcon' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, DropOffWidgetActorClass) == 0x000C50, "Member 'AFortAthenaMutator_Nitrogen::DropOffWidgetActorClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NearbyVehicleWidgetActorClass) == 0x000C58, "Member 'AFortAthenaMutator_Nitrogen::NearbyVehicleWidgetActorClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PickupCashbagSearchParam) == 0x000C60, "Member 'AFortAthenaMutator_Nitrogen::PickupCashbagSearchParam' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, CashbagSelectedPercentage) == 0x000D00, "Member 'AFortAthenaMutator_Nitrogen::CashbagSelectedPercentage' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, CashbagDataMap) == 0x000D20, "Member 'AFortAthenaMutator_Nitrogen::CashbagDataMap' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PassengerDespawnDelay) == 0x000D70, "Member 'AFortAthenaMutator_Nitrogen::PassengerDespawnDelay' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, PlayerSpecialActorRepInterval) == 0x000D90, "Member 'AFortAthenaMutator_Nitrogen::PlayerSpecialActorRepInterval' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenVehicleTag) == 0x000DB0, "Member 'AFortAthenaMutator_Nitrogen::NitrogenVehicleTag' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenGamePhase) == 0x000DBC, "Member 'AFortAthenaMutator_Nitrogen::NitrogenGamePhase' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, SortedTeamDataByScore) == 0x000DF0, "Member 'AFortAthenaMutator_Nitrogen::SortedTeamDataByScore' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, CacheLeadingReplicatedPlayerStates) == 0x000E00, "Member 'AFortAthenaMutator_Nitrogen::CacheLeadingReplicatedPlayerStates' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenVehicleClass) == 0x000E10, "Member 'AFortAthenaMutator_Nitrogen::NitrogenVehicleClass' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenVehiclesList) == 0x000E18, "Member 'AFortAthenaMutator_Nitrogen::NitrogenVehiclesList' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenSquadStarts) == 0x000E28, "Member 'AFortAthenaMutator_Nitrogen::NitrogenSquadStarts' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, NitrogenSpawnInfo) == 0x000E38, "Member 'AFortAthenaMutator_Nitrogen::NitrogenSpawnInfo' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, TeleportMutator) == 0x000E60, "Member 'AFortAthenaMutator_Nitrogen::TeleportMutator' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, GameStartCountdownMutator) == 0x000E68, "Member 'AFortAthenaMutator_Nitrogen::GameStartCountdownMutator' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, InventoryMutator) == 0x000E70, "Member 'AFortAthenaMutator_Nitrogen::InventoryMutator' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, UnassignedPickupPointsPerPOIMap) == 0x000F10, "Member 'AFortAthenaMutator_Nitrogen::UnassignedPickupPointsPerPOIMap' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, UnassignedPOIBasedDropoffPointsMap) == 0x000F60, "Member 'AFortAthenaMutator_Nitrogen::UnassignedPOIBasedDropoffPointsMap' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, UnassignedDistanceBasedDropoffPointsArray) == 0x000FB0, "Member 'AFortAthenaMutator_Nitrogen::UnassignedDistanceBasedDropoffPointsArray' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, ClientNavArrow) == 0x000FD0, "Member 'AFortAthenaMutator_Nitrogen::ClientNavArrow' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Nitrogen, CurrentFares) == 0x000FF0, "Member 'AFortAthenaMutator_Nitrogen::CurrentFares' has a wrong offset!");

// Class NitrogenRuntime.FortCheatManager_Nitrogen
// 0x0000 (0x0038 - 0x0038)
class UFortCheatManager_Nitrogen final : public UFortCheatManager_Coupled
{
public:
	void CompleteNitrogenFare();
	void SetNitrogenNavDestinationToCurrentLocation();
	void SetNitrogenScore(const int32 Score, const uint8 ScoreReason);
	void SpawnNitrogenFare(const float PickUpDistance, const float DropOffDistance);
	void TeleportToNitrogenRespawnActor(const int32 Param_Index);
	void TeleportToNitrogenSpawnActor(const int32 Param_Index);
	void TeleportToSquadStartAtIndex(const int32 Param_Index, const struct FFortSquadStartSearchParamData& SearchParam, class FString* TeleportReasonString);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCheatManager_Nitrogen">();
	}
	static class UFortCheatManager_Nitrogen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCheatManager_Nitrogen>();
	}
};
static_assert(alignof(UFortCheatManager_Nitrogen) == 0x000008, "Wrong alignment on UFortCheatManager_Nitrogen");
static_assert(sizeof(UFortCheatManager_Nitrogen) == 0x000038, "Wrong size on UFortCheatManager_Nitrogen");

// Class NitrogenRuntime.NitrogenFare
// 0x0838 (0x0A58 - 0x0220)
class ANitrogenFare final : public AActor
{
public:
	class AFortPlayerPawnAthena*                  Passenger;                                         // 0x0220(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ANitrogenTraversePoint*                 PickUpPoint;                                       // 0x0228(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ANitrogenTraversePoint*                 DropOffPoint;                                      // 0x0230(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DropOffPointLocation;                              // 0x0238(0x000C)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4240[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNitrogenBonusStats                    BonusStats;                                        // 0x0248(0x0738)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FastDeliveryKmph;                                  // 0x0980(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_4241[0x30];                                    // 0x09A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAthenaAIBotCustomizationData*      PassengerCustomizationData;                        // 0x09D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNitrogenPassengerPawnComponent> NitrogenPassengerPawnComponentClass;               // 0x09D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PassengerSeatIndex;                                // 0x09E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RewardValue;                                       // 0x09E4(0x0004)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FastDeliveryTime;                                  // 0x09E8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         FastDeliveryBonusPoints;                           // 0x09EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FastDeliveryMargin;                                // 0x09F0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         DistanceThresholdIndex;                            // 0x0A10(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFareGenerationMethod                         FareGenerationMethod;                              // 0x0A14(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4242[0x3];                                     // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bDisablePassengerCollision;                        // 0x0A18(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AFortPlayerStateAthena*                 AssignedPlayerState;                               // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPassengerPickedUp;                                // 0x0A40(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4243[0x17];                                    // 0x0A41(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DropOffPointOverlapped(class AAthenaTraversePoint* TraversePoint, class AFortPlayerStateAthena* PlayerState);
	void OnRep_PassengerPickedUp();
	void OnVehicleDestroyed(class AFortDagwoodVehicle* DestroyedVehicle);
	void OnVehicleDriverChanged(const class AFortPlayerControllerAthena* NewDriver, class AFortAthenaVehicle* Vehicle);
	void OnVehicleEndPlay(class AActor* DestroyedVehicle, EEndPlayReason EndPlayReason);
	void PickUpPointOverlapped(class AAthenaTraversePoint* TraversePoint, class AFortPlayerStateAthena* PlayerState);

	const int32 GetRewardValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenFare">();
	}
	static class ANitrogenFare* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenFare>();
	}
};
static_assert(alignof(ANitrogenFare) == 0x000008, "Wrong alignment on ANitrogenFare");
static_assert(sizeof(ANitrogenFare) == 0x000A58, "Wrong size on ANitrogenFare");
static_assert(offsetof(ANitrogenFare, Passenger) == 0x000220, "Member 'ANitrogenFare::Passenger' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, PickUpPoint) == 0x000228, "Member 'ANitrogenFare::PickUpPoint' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, DropOffPoint) == 0x000230, "Member 'ANitrogenFare::DropOffPoint' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, DropOffPointLocation) == 0x000238, "Member 'ANitrogenFare::DropOffPointLocation' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, BonusStats) == 0x000248, "Member 'ANitrogenFare::BonusStats' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, FastDeliveryKmph) == 0x000980, "Member 'ANitrogenFare::FastDeliveryKmph' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, PassengerCustomizationData) == 0x0009D0, "Member 'ANitrogenFare::PassengerCustomizationData' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, NitrogenPassengerPawnComponentClass) == 0x0009D8, "Member 'ANitrogenFare::NitrogenPassengerPawnComponentClass' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, PassengerSeatIndex) == 0x0009E0, "Member 'ANitrogenFare::PassengerSeatIndex' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, RewardValue) == 0x0009E4, "Member 'ANitrogenFare::RewardValue' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, FastDeliveryTime) == 0x0009E8, "Member 'ANitrogenFare::FastDeliveryTime' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, FastDeliveryBonusPoints) == 0x0009EC, "Member 'ANitrogenFare::FastDeliveryBonusPoints' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, FastDeliveryMargin) == 0x0009F0, "Member 'ANitrogenFare::FastDeliveryMargin' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, DistanceThresholdIndex) == 0x000A10, "Member 'ANitrogenFare::DistanceThresholdIndex' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, FareGenerationMethod) == 0x000A14, "Member 'ANitrogenFare::FareGenerationMethod' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, bDisablePassengerCollision) == 0x000A18, "Member 'ANitrogenFare::bDisablePassengerCollision' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, AssignedPlayerState) == 0x000A38, "Member 'ANitrogenFare::AssignedPlayerState' has a wrong offset!");
static_assert(offsetof(ANitrogenFare, bPassengerPickedUp) == 0x000A40, "Member 'ANitrogenFare::bPassengerPickedUp' has a wrong offset!");

// Class NitrogenRuntime.NitrogenPickup
// 0x0040 (0x0648 - 0x0608)
class ANitrogenPickup final : public AFortGameModePickup
{
public:
	ENitrogenScoreReason                          ScoreReason;                                       // 0x0608(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4245[0x7];                                     // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       AutoPickupTouchComponent;                          // 0x0610(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ENitrogenPickupType                           NitrogenPickupType;                                // 0x0618(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4246[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bDisableMovementComponent;                         // 0x0620(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoAllowInteraction;                             // 0x0640(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         TeamHidden;                                        // 0x0641(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4247[0x6];                                     // 0x0642(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNitrogenPickupOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_TeamHidden();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenPickup">();
	}
	static class ANitrogenPickup* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenPickup>();
	}
};
static_assert(alignof(ANitrogenPickup) == 0x000008, "Wrong alignment on ANitrogenPickup");
static_assert(sizeof(ANitrogenPickup) == 0x000648, "Wrong size on ANitrogenPickup");
static_assert(offsetof(ANitrogenPickup, ScoreReason) == 0x000608, "Member 'ANitrogenPickup::ScoreReason' has a wrong offset!");
static_assert(offsetof(ANitrogenPickup, AutoPickupTouchComponent) == 0x000610, "Member 'ANitrogenPickup::AutoPickupTouchComponent' has a wrong offset!");
static_assert(offsetof(ANitrogenPickup, NitrogenPickupType) == 0x000618, "Member 'ANitrogenPickup::NitrogenPickupType' has a wrong offset!");
static_assert(offsetof(ANitrogenPickup, bDisableMovementComponent) == 0x000620, "Member 'ANitrogenPickup::bDisableMovementComponent' has a wrong offset!");
static_assert(offsetof(ANitrogenPickup, bAutoAllowInteraction) == 0x000640, "Member 'ANitrogenPickup::bAutoAllowInteraction' has a wrong offset!");
static_assert(offsetof(ANitrogenPickup, TeamHidden) == 0x000641, "Member 'ANitrogenPickup::TeamHidden' has a wrong offset!");

// Class NitrogenRuntime.NitrogenFareValueIndicator
// 0x0028 (0x0248 - 0x0220)
class ANitrogenFareValueIndicator final : public AActor
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComp;                                 // 0x0220(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FNitrogenFareValueMeshTransformInfo> FareValueMeshTransformInfo;                        // 0x0228(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         IndicatorValue;                                    // 0x0238(0x0001)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldActorRotateOnTickToFacePlayerCamera;        // 0x0239(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424A[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   LocalPlayerCameraManager;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnFareIndicatorValueChanged(const uint8 NewIndicatorValue);
	void OnRep_IndicatorValue();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenFareValueIndicator">();
	}
	static class ANitrogenFareValueIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenFareValueIndicator>();
	}
};
static_assert(alignof(ANitrogenFareValueIndicator) == 0x000008, "Wrong alignment on ANitrogenFareValueIndicator");
static_assert(sizeof(ANitrogenFareValueIndicator) == 0x000248, "Wrong size on ANitrogenFareValueIndicator");
static_assert(offsetof(ANitrogenFareValueIndicator, InstancedMeshComp) == 0x000220, "Member 'ANitrogenFareValueIndicator::InstancedMeshComp' has a wrong offset!");
static_assert(offsetof(ANitrogenFareValueIndicator, FareValueMeshTransformInfo) == 0x000228, "Member 'ANitrogenFareValueIndicator::FareValueMeshTransformInfo' has a wrong offset!");
static_assert(offsetof(ANitrogenFareValueIndicator, IndicatorValue) == 0x000238, "Member 'ANitrogenFareValueIndicator::IndicatorValue' has a wrong offset!");
static_assert(offsetof(ANitrogenFareValueIndicator, bShouldActorRotateOnTickToFacePlayerCamera) == 0x000239, "Member 'ANitrogenFareValueIndicator::bShouldActorRotateOnTickToFacePlayerCamera' has a wrong offset!");
static_assert(offsetof(ANitrogenFareValueIndicator, LocalPlayerCameraManager) == 0x000240, "Member 'ANitrogenFareValueIndicator::LocalPlayerCameraManager' has a wrong offset!");

// Class NitrogenRuntime.NitrogenNavArrow
// 0x0338 (0x0560 - 0x0228)
class alignas(0x10) ANitrogenNavArrow final : public ANavArrow
{
public:
	struct FVector                                LocationRelativeToOwner;                           // 0x0228(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFollowCamera;                                     // 0x0234(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424B[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationRelativeToCamera;                          // 0x0238(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424C[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         PitchRelativeToCamera;                             // 0x0248(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ArrowSizeRelativeToScreen;                         // 0x0268(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ArrowPlacementHeightRelativeToScreen;              // 0x0288(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                                LocationRelativeToDestination;                     // 0x02A8(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bThrowingEnabled;                                  // 0x02B4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424D[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ApproachRadius;                                    // 0x02B8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DepartRadius;                                      // 0x02D8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ThrowTranslationCurve;                             // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ThrowRotationCurve;                                // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PrimaryColorParameterName;                         // 0x0308(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveLinearColor*                      ArrowColorCurve;                                   // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ColorFadeOuterRadius;                              // 0x0318(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ColorFadeInnerRadius;                              // 0x031C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PulseParameterName;                                // 0x0320(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            PulseParameterCurve;                               // 0x0328(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            PulseSpeedCurve;                                   // 0x0330(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PulseAccelOuterRadius;                             // 0x0338(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PulseAccelInnerRadius;                             // 0x033C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ScaleCurve;                                        // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   ArrowComponent;                                    // 0x0348(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424E[0x208];                                   // 0x0350(0x0208)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ArrowDynamicMaterial;                              // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void RecallArrowToOwner();
	void ThrowArrowToDestination();
	void UpdatePrimaryColorForDistance();
	void UpdatePulseSpeedForDistance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenNavArrow">();
	}
	static class ANitrogenNavArrow* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenNavArrow>();
	}
};
static_assert(alignof(ANitrogenNavArrow) == 0x000010, "Wrong alignment on ANitrogenNavArrow");
static_assert(sizeof(ANitrogenNavArrow) == 0x000560, "Wrong size on ANitrogenNavArrow");
static_assert(offsetof(ANitrogenNavArrow, LocationRelativeToOwner) == 0x000228, "Member 'ANitrogenNavArrow::LocationRelativeToOwner' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, bFollowCamera) == 0x000234, "Member 'ANitrogenNavArrow::bFollowCamera' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, LocationRelativeToCamera) == 0x000238, "Member 'ANitrogenNavArrow::LocationRelativeToCamera' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PitchRelativeToCamera) == 0x000248, "Member 'ANitrogenNavArrow::PitchRelativeToCamera' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ArrowSizeRelativeToScreen) == 0x000268, "Member 'ANitrogenNavArrow::ArrowSizeRelativeToScreen' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ArrowPlacementHeightRelativeToScreen) == 0x000288, "Member 'ANitrogenNavArrow::ArrowPlacementHeightRelativeToScreen' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, LocationRelativeToDestination) == 0x0002A8, "Member 'ANitrogenNavArrow::LocationRelativeToDestination' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, bThrowingEnabled) == 0x0002B4, "Member 'ANitrogenNavArrow::bThrowingEnabled' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ApproachRadius) == 0x0002B8, "Member 'ANitrogenNavArrow::ApproachRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, DepartRadius) == 0x0002D8, "Member 'ANitrogenNavArrow::DepartRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ThrowTranslationCurve) == 0x0002F8, "Member 'ANitrogenNavArrow::ThrowTranslationCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ThrowRotationCurve) == 0x000300, "Member 'ANitrogenNavArrow::ThrowRotationCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PrimaryColorParameterName) == 0x000308, "Member 'ANitrogenNavArrow::PrimaryColorParameterName' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ArrowColorCurve) == 0x000310, "Member 'ANitrogenNavArrow::ArrowColorCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ColorFadeOuterRadius) == 0x000318, "Member 'ANitrogenNavArrow::ColorFadeOuterRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ColorFadeInnerRadius) == 0x00031C, "Member 'ANitrogenNavArrow::ColorFadeInnerRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PulseParameterName) == 0x000320, "Member 'ANitrogenNavArrow::PulseParameterName' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PulseParameterCurve) == 0x000328, "Member 'ANitrogenNavArrow::PulseParameterCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PulseSpeedCurve) == 0x000330, "Member 'ANitrogenNavArrow::PulseSpeedCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PulseAccelOuterRadius) == 0x000338, "Member 'ANitrogenNavArrow::PulseAccelOuterRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, PulseAccelInnerRadius) == 0x00033C, "Member 'ANitrogenNavArrow::PulseAccelInnerRadius' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ScaleCurve) == 0x000340, "Member 'ANitrogenNavArrow::ScaleCurve' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ArrowComponent) == 0x000348, "Member 'ANitrogenNavArrow::ArrowComponent' has a wrong offset!");
static_assert(offsetof(ANitrogenNavArrow, ArrowDynamicMaterial) == 0x000558, "Member 'ANitrogenNavArrow::ArrowDynamicMaterial' has a wrong offset!");

// Class NitrogenRuntime.NitrogenPassengerPawnComponent
// 0x00E8 (0x0198 - 0x00B0)
class UNitrogenPassengerPawnComponent final : public UFortPawnComponent
{
public:
	TMap<ENitrogenPassengerState, class UAnimationAsset*> MalePassengerStateAnimationMap;                    // 0x00B0(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<ENitrogenPassengerState, class UAnimationAsset*> FemalePassengerStateAnimationMap;                  // 0x0100(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bDestroyFareValueIndicatorOnDisable;               // 0x0150(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ANitrogenFareValueIndicator> FareValueIndicatorClass;                           // 0x0170(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                FareValueIndicatorOffset;                          // 0x0178(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424F[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANitrogenFareValueIndicator*            FareValueIndicator;                                // 0x0188(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ENitrogenPassengerState                       PassengerState;                                    // 0x0190(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4250[0x7];                                     // 0x0191(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientHandleFinishedCharacterCustomization(class AFortPlayerPawn* PlayerPawn);
	void ClientPlayDeathEffects();
	void OnRep_FareValueIndicator();
	void OnRep_PassengerState();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenPassengerPawnComponent">();
	}
	static class UNitrogenPassengerPawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNitrogenPassengerPawnComponent>();
	}
};
static_assert(alignof(UNitrogenPassengerPawnComponent) == 0x000008, "Wrong alignment on UNitrogenPassengerPawnComponent");
static_assert(sizeof(UNitrogenPassengerPawnComponent) == 0x000198, "Wrong size on UNitrogenPassengerPawnComponent");
static_assert(offsetof(UNitrogenPassengerPawnComponent, MalePassengerStateAnimationMap) == 0x0000B0, "Member 'UNitrogenPassengerPawnComponent::MalePassengerStateAnimationMap' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, FemalePassengerStateAnimationMap) == 0x000100, "Member 'UNitrogenPassengerPawnComponent::FemalePassengerStateAnimationMap' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, bDestroyFareValueIndicatorOnDisable) == 0x000150, "Member 'UNitrogenPassengerPawnComponent::bDestroyFareValueIndicatorOnDisable' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, FareValueIndicatorClass) == 0x000170, "Member 'UNitrogenPassengerPawnComponent::FareValueIndicatorClass' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, FareValueIndicatorOffset) == 0x000178, "Member 'UNitrogenPassengerPawnComponent::FareValueIndicatorOffset' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, FareValueIndicator) == 0x000188, "Member 'UNitrogenPassengerPawnComponent::FareValueIndicator' has a wrong offset!");
static_assert(offsetof(UNitrogenPassengerPawnComponent, PassengerState) == 0x000190, "Member 'UNitrogenPassengerPawnComponent::PassengerState' has a wrong offset!");

// Class NitrogenRuntime.NitrogenFareDataRepActor
// 0x0028 (0x0248 - 0x0220)
class ANitrogenFareDataRepActor final : public AActor
{
public:
	struct FNitrogenFareRepData                   FareRepData;                                       // 0x0220(0x0018)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4251[0x10];                                    // 0x0238(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_FareRepData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenFareDataRepActor">();
	}
	static class ANitrogenFareDataRepActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenFareDataRepActor>();
	}
};
static_assert(alignof(ANitrogenFareDataRepActor) == 0x000008, "Wrong alignment on ANitrogenFareDataRepActor");
static_assert(sizeof(ANitrogenFareDataRepActor) == 0x000248, "Wrong size on ANitrogenFareDataRepActor");
static_assert(offsetof(ANitrogenFareDataRepActor, FareRepData) == 0x000220, "Member 'ANitrogenFareDataRepActor::FareRepData' has a wrong offset!");

// Class NitrogenRuntime.NitrogenPlayerComponent
// 0x0208 (0x02B8 - 0x00B0)
class UNitrogenPlayerComponent final : public UFortControllerComponent
{
public:
	class AActor*                                 CurrentFareWidgetActor;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnClientBeginFare;                                 // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnClientEndFare;                                   // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_4252[0x18];                                    // 0x00D8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AFortAthenaMutator_Nitrogen> CachedMutator;                                     // 0x00F0(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NearbyVehicleUpdateRate;                           // 0x00F8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinimumVehicleAirTimeBeforeStatTracking;           // 0x0118(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USoundMix*                              LoadingScreenSoundSuppressionSoundMix;             // 0x0138(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bAllowHighlightNearbyLeadingPlayers;               // 0x0140(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bHighlightLeadingPlayers_UseStencilHighlight;      // 0x0160(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HighlightLeadingPlayers_UpdateRate;                // 0x0180(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HighlightLeadingPlayers_MinTeamScore;              // 0x01A0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HighlightLeadingPlayers_MaxDistance;               // 0x01C0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HighlightLeadingPlayers_HighlightDuration;         // 0x01E0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bHighlightLeadingPlayers_IndicatorClampToScreen;   // 0x0200(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         HighlightLeadingPlayers_IndicatorZOffset;          // 0x0220(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EIndicatorStateImage                          OverrideIndicatorImage;                            // 0x0240(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4253[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HighlightLeadingPlayers_StencilName;               // 0x0244(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4254[0xC];                                     // 0x024C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawnAthena*>          CurrentlyHighlightedLeadingPlayers;                // 0x0258(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                 DestroyedBuildingActors;                           // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4255[0x10];                                    // 0x0278(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NearestVehicleWidget;                              // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortSquadStart*                        CurrentRespawnSquadStart;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4256[0x10];                                    // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ANitrogenFare*                          PreviousFare;                                      // 0x02A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ANitrogenFareDataRepActor*              FareDataRepActor;                                  // 0x02B0(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ClientHandleLoadingScreenStateChanged(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, const class FText& HUDReasonText);
	void HandleVehicleDestroyedBuildingActor(class AFortAthenaVehicle* Vehicle, class ABuildingActor* BuildingActor);
	void OnEnterVehicleDriver();
	void OnEnterVehiclePassenger();
	void OnExitVehicle();
	void OnGameStarted();
	void OnNitrogenGamePhaseChanged(ENitrogenGamePhase NewGamePhase);
	void OnRep_CachedMutator();
	void OnRep_FareDataRepActor();

	float GetDistanceFromClosestPassenger() const;
	float GetDistanceFromDropOff() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenPlayerComponent">();
	}
	static class UNitrogenPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNitrogenPlayerComponent>();
	}
};
static_assert(alignof(UNitrogenPlayerComponent) == 0x000008, "Wrong alignment on UNitrogenPlayerComponent");
static_assert(sizeof(UNitrogenPlayerComponent) == 0x0002B8, "Wrong size on UNitrogenPlayerComponent");
static_assert(offsetof(UNitrogenPlayerComponent, CurrentFareWidgetActor) == 0x0000B0, "Member 'UNitrogenPlayerComponent::CurrentFareWidgetActor' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, OnClientBeginFare) == 0x0000B8, "Member 'UNitrogenPlayerComponent::OnClientBeginFare' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, OnClientEndFare) == 0x0000C8, "Member 'UNitrogenPlayerComponent::OnClientEndFare' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, CachedMutator) == 0x0000F0, "Member 'UNitrogenPlayerComponent::CachedMutator' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, NearbyVehicleUpdateRate) == 0x0000F8, "Member 'UNitrogenPlayerComponent::NearbyVehicleUpdateRate' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, MinimumVehicleAirTimeBeforeStatTracking) == 0x000118, "Member 'UNitrogenPlayerComponent::MinimumVehicleAirTimeBeforeStatTracking' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, LoadingScreenSoundSuppressionSoundMix) == 0x000138, "Member 'UNitrogenPlayerComponent::LoadingScreenSoundSuppressionSoundMix' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, bAllowHighlightNearbyLeadingPlayers) == 0x000140, "Member 'UNitrogenPlayerComponent::bAllowHighlightNearbyLeadingPlayers' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, bHighlightLeadingPlayers_UseStencilHighlight) == 0x000160, "Member 'UNitrogenPlayerComponent::bHighlightLeadingPlayers_UseStencilHighlight' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_UpdateRate) == 0x000180, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_UpdateRate' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_MinTeamScore) == 0x0001A0, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_MinTeamScore' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_MaxDistance) == 0x0001C0, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_MaxDistance' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_HighlightDuration) == 0x0001E0, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_HighlightDuration' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, bHighlightLeadingPlayers_IndicatorClampToScreen) == 0x000200, "Member 'UNitrogenPlayerComponent::bHighlightLeadingPlayers_IndicatorClampToScreen' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_IndicatorZOffset) == 0x000220, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_IndicatorZOffset' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, OverrideIndicatorImage) == 0x000240, "Member 'UNitrogenPlayerComponent::OverrideIndicatorImage' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, HighlightLeadingPlayers_StencilName) == 0x000244, "Member 'UNitrogenPlayerComponent::HighlightLeadingPlayers_StencilName' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, CurrentlyHighlightedLeadingPlayers) == 0x000258, "Member 'UNitrogenPlayerComponent::CurrentlyHighlightedLeadingPlayers' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, DestroyedBuildingActors) == 0x000268, "Member 'UNitrogenPlayerComponent::DestroyedBuildingActors' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, NearestVehicleWidget) == 0x000288, "Member 'UNitrogenPlayerComponent::NearestVehicleWidget' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, CurrentRespawnSquadStart) == 0x000290, "Member 'UNitrogenPlayerComponent::CurrentRespawnSquadStart' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, PreviousFare) == 0x0002A8, "Member 'UNitrogenPlayerComponent::PreviousFare' has a wrong offset!");
static_assert(offsetof(UNitrogenPlayerComponent, FareDataRepActor) == 0x0002B0, "Member 'UNitrogenPlayerComponent::FareDataRepActor' has a wrong offset!");

// Class NitrogenRuntime.NitrogenTraversePoint
// 0x0038 (0x0948 - 0x0910)
class ANitrogenTraversePoint final : public AAthenaLTMTraversePoint
{
public:
	ENitrogenTraversePointMode                    CurrentNitrogenTraversePointMode;                  // 0x0910(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4258[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneRoot;                                         // 0x0918(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*               FareRadiusParticleSystemComponent;                 // 0x0920(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      TriggerCapsule;                                    // 0x0928(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HideActorDelay;                                    // 0x0930(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4259[0x14];                                    // 0x0934(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClientInteracted(bool bOwnedByClient);
	void OnClientVisibiltyUpdated(bool bNewHidden);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenTraversePoint">();
	}
	static class ANitrogenTraversePoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANitrogenTraversePoint>();
	}
};
static_assert(alignof(ANitrogenTraversePoint) == 0x000008, "Wrong alignment on ANitrogenTraversePoint");
static_assert(sizeof(ANitrogenTraversePoint) == 0x000948, "Wrong size on ANitrogenTraversePoint");
static_assert(offsetof(ANitrogenTraversePoint, CurrentNitrogenTraversePointMode) == 0x000910, "Member 'ANitrogenTraversePoint::CurrentNitrogenTraversePointMode' has a wrong offset!");
static_assert(offsetof(ANitrogenTraversePoint, SceneRoot) == 0x000918, "Member 'ANitrogenTraversePoint::SceneRoot' has a wrong offset!");
static_assert(offsetof(ANitrogenTraversePoint, FareRadiusParticleSystemComponent) == 0x000920, "Member 'ANitrogenTraversePoint::FareRadiusParticleSystemComponent' has a wrong offset!");
static_assert(offsetof(ANitrogenTraversePoint, TriggerCapsule) == 0x000928, "Member 'ANitrogenTraversePoint::TriggerCapsule' has a wrong offset!");
static_assert(offsetof(ANitrogenTraversePoint, HideActorDelay) == 0x000930, "Member 'ANitrogenTraversePoint::HideActorDelay' has a wrong offset!");

// Class NitrogenRuntime.NitrogenVehicleComponent
// 0x01A0 (0x0250 - 0x00B0)
class UNitrogenVehicleComponent final : public UActorComponent
{
public:
	class UTimelineComponent*                     TimelineBoostFX;                                   // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            JetFlamesHeightCurve;                              // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            JetSparksCountsCurve;                              // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimelineBoostFXLength;                             // 0x00C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_425A[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         BoostVFXSystem;                                    // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   BoostAttachSocketName;                             // 0x00D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               BoostAttachRotation;                               // 0x00E0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_425B[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNitrogenVehicleBoostFXVariable        JetFlameRandomMin;                                 // 0x00F0(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNitrogenVehicleBoostFXVariable        JetFlameLocationOffsetZ;                           // 0x0108(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNitrogenVehicleBoostFXVariable        JetFlameLocationOffsetX;                           // 0x0120(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                 JetFlameHeightParamName;                           // 0x0138(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         JetFlameMinHeight;                                 // 0x0148(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         JetFlameMaxHeight;                                 // 0x014C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 JetSparksCountsParamName;                          // 0x0150(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                      SpawnedBoostParticleSystem;                        // 0x0160(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinimumBumpBonusStatVelocityKmh;                   // 0x0168(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         CooldownBetweenBumps;                              // 0x0188(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_425C[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         bCleanupUnreachableVehicleInWater;                 // 0x0190(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         VehicleWaterDepthCheckTickDelay;                   // 0x01B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_425D[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         VehicleWaterDepthForCleanup;                       // 0x01B8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bCleanupUnreachableVehiclesSilently;               // 0x01D8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         VehicleInWaterCleanupDelay;                        // 0x01F8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AFortAthenaVehicle*                     OwningVehicle;                                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_425E[0x8];                                     // 0x0220(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortWaterBodyActor*>            WaterBodies;                                       // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_425F[0x18];                                    // 0x0238(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleVehicleOnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetBoostFXActive(const bool bActive);
	void TimelineBoostFXUpdate_JetFlamesHeight(float Value);
	void TimelineBoostFXUpdate_JetSparksCounts(float Value);

	bool IsVehicleUnderCleanupWaterDepth() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NitrogenVehicleComponent">();
	}
	static class UNitrogenVehicleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNitrogenVehicleComponent>();
	}
};
static_assert(alignof(UNitrogenVehicleComponent) == 0x000008, "Wrong alignment on UNitrogenVehicleComponent");
static_assert(sizeof(UNitrogenVehicleComponent) == 0x000250, "Wrong size on UNitrogenVehicleComponent");
static_assert(offsetof(UNitrogenVehicleComponent, TimelineBoostFX) == 0x0000B0, "Member 'UNitrogenVehicleComponent::TimelineBoostFX' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlamesHeightCurve) == 0x0000B8, "Member 'UNitrogenVehicleComponent::JetFlamesHeightCurve' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetSparksCountsCurve) == 0x0000C0, "Member 'UNitrogenVehicleComponent::JetSparksCountsCurve' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, TimelineBoostFXLength) == 0x0000C8, "Member 'UNitrogenVehicleComponent::TimelineBoostFXLength' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, BoostVFXSystem) == 0x0000D0, "Member 'UNitrogenVehicleComponent::BoostVFXSystem' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, BoostAttachSocketName) == 0x0000D8, "Member 'UNitrogenVehicleComponent::BoostAttachSocketName' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, BoostAttachRotation) == 0x0000E0, "Member 'UNitrogenVehicleComponent::BoostAttachRotation' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameRandomMin) == 0x0000F0, "Member 'UNitrogenVehicleComponent::JetFlameRandomMin' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameLocationOffsetZ) == 0x000108, "Member 'UNitrogenVehicleComponent::JetFlameLocationOffsetZ' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameLocationOffsetX) == 0x000120, "Member 'UNitrogenVehicleComponent::JetFlameLocationOffsetX' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameHeightParamName) == 0x000138, "Member 'UNitrogenVehicleComponent::JetFlameHeightParamName' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameMinHeight) == 0x000148, "Member 'UNitrogenVehicleComponent::JetFlameMinHeight' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetFlameMaxHeight) == 0x00014C, "Member 'UNitrogenVehicleComponent::JetFlameMaxHeight' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, JetSparksCountsParamName) == 0x000150, "Member 'UNitrogenVehicleComponent::JetSparksCountsParamName' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, SpawnedBoostParticleSystem) == 0x000160, "Member 'UNitrogenVehicleComponent::SpawnedBoostParticleSystem' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, MinimumBumpBonusStatVelocityKmh) == 0x000168, "Member 'UNitrogenVehicleComponent::MinimumBumpBonusStatVelocityKmh' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, CooldownBetweenBumps) == 0x000188, "Member 'UNitrogenVehicleComponent::CooldownBetweenBumps' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, bCleanupUnreachableVehicleInWater) == 0x000190, "Member 'UNitrogenVehicleComponent::bCleanupUnreachableVehicleInWater' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, VehicleWaterDepthCheckTickDelay) == 0x0001B0, "Member 'UNitrogenVehicleComponent::VehicleWaterDepthCheckTickDelay' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, VehicleWaterDepthForCleanup) == 0x0001B8, "Member 'UNitrogenVehicleComponent::VehicleWaterDepthForCleanup' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, bCleanupUnreachableVehiclesSilently) == 0x0001D8, "Member 'UNitrogenVehicleComponent::bCleanupUnreachableVehiclesSilently' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, VehicleInWaterCleanupDelay) == 0x0001F8, "Member 'UNitrogenVehicleComponent::VehicleInWaterCleanupDelay' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, OwningVehicle) == 0x000218, "Member 'UNitrogenVehicleComponent::OwningVehicle' has a wrong offset!");
static_assert(offsetof(UNitrogenVehicleComponent, WaterBodies) == 0x000228, "Member 'UNitrogenVehicleComponent::WaterBodies' has a wrong offset!");

}

