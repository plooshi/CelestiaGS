#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_InterrogatePlayer_Reveal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_InterrogatePlayer_Reveal.GAB_InterrogatePlayer_Reveal_C
// 0x0248 (0x0CC0 - 0x0A78)
class UGAB_InterrogatePlayer_Reveal_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            PlayerController;                                  // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        InterrogatedPlayer;                                // 0x0A90(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Anim_Reveal;                                       // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Anim_End;                                          // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RevealHolster;                                     // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Reveal;                                         // 0x0AB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MarkDurationPlayer;                                // 0x0AB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MarkDurationNPC;                                   // 0x0AD8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MarkRadius;                                        // 0x0AF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         SquadmatesToMark;                                  // 0x0B18(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_Reveal;                                      // 0x0B28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_NPC_Mang;                                        // 0x0B30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RevealDuration;                                    // 0x0B38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAbilityDelay;                                   // 0x0B3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SweepDelay;                                        // 0x0B40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cancelled;                                         // 0x0B44(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Ending;                                            // 0x0B45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617B[0x2];                                     // 0x0B46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IndicatorGroup;                                    // 0x0B48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 CameraMode;                                        // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToMark;                                      // 0x0B60(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_ReticleHUD;                                      // 0x0B70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  NPCTagsToMark;                                     // 0x0B90(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  ChestTagsToMark;                                   // 0x0BB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  GameplayItemTagsToMark;                            // 0x0BD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   ParticleSystemParamName;                           // 0x0BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        IndicatedPS;                                       // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             IndicatedSound;                                    // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSOffset;                                          // 0x0C08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PSVectorParamName;                                 // 0x0C14(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PSDBNOOffset;                                      // 0x0C1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnemyStencilName;                                  // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TreasureChestStencilName;                          // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StepTime;                                          // 0x0C38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Testbool;                                          // 0x0C3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617C[0x3];                                     // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         EnemyStencilID;                                    // 0x0C40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         StencilStepTime;                                   // 0x0C60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         bUseDefaultStencil;                                // 0x0C80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         IndicatorStepTime;                                 // 0x0CA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GAB_InterrogatePlayer_Reveal(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void EndInterrogation();
	void OnDied_Event_1(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_68B3C6D14B44CCD3170ABDA038C1203E();
	void Triggered_3C2C8C224B62B00BDEEAF5AF38A401C1(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_3C2C8C224B62B00BDEEAF5AF38A401C1(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_3C2C8C224B62B00BDEEAF5AF38A401C1(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Triggered_23F3C2DB411862D627ACFCA8233F7B33(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_23F3C2DB411862D627ACFCA8233F7B33(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_23F3C2DB411862D627ACFCA8233F7B33(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void InitAbility();
	void EndAbilityCleanup();
	void Reveal();
	void ToggleReticleVisibility(bool Hide);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_InterrogatePlayer_Reveal_C">();
	}
	static class UGAB_InterrogatePlayer_Reveal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_InterrogatePlayer_Reveal_C>();
	}
};
static_assert(alignof(UGAB_InterrogatePlayer_Reveal_C) == 0x000008, "Wrong alignment on UGAB_InterrogatePlayer_Reveal_C");
static_assert(sizeof(UGAB_InterrogatePlayer_Reveal_C) == 0x000CC0, "Wrong size on UGAB_InterrogatePlayer_Reveal_C");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, UberGraphFrame) == 0x000A78, "Member 'UGAB_InterrogatePlayer_Reveal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, PlayerPawn) == 0x000A80, "Member 'UGAB_InterrogatePlayer_Reveal_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, PlayerController) == 0x000A88, "Member 'UGAB_InterrogatePlayer_Reveal_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, InterrogatedPlayer) == 0x000A90, "Member 'UGAB_InterrogatePlayer_Reveal_C::InterrogatedPlayer' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Anim_Reveal) == 0x000A98, "Member 'UGAB_InterrogatePlayer_Reveal_C::Anim_Reveal' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Anim_End) == 0x000AA0, "Member 'UGAB_InterrogatePlayer_Reveal_C::Anim_End' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, RevealHolster) == 0x000AA8, "Member 'UGAB_InterrogatePlayer_Reveal_C::RevealHolster' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, GC_Reveal) == 0x000AB0, "Member 'UGAB_InterrogatePlayer_Reveal_C::GC_Reveal' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, MarkDurationPlayer) == 0x000AB8, "Member 'UGAB_InterrogatePlayer_Reveal_C::MarkDurationPlayer' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, MarkDurationNPC) == 0x000AD8, "Member 'UGAB_InterrogatePlayer_Reveal_C::MarkDurationNPC' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, MarkRadius) == 0x000AF8, "Member 'UGAB_InterrogatePlayer_Reveal_C::MarkRadius' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, SquadmatesToMark) == 0x000B18, "Member 'UGAB_InterrogatePlayer_Reveal_C::SquadmatesToMark' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Timer_Reveal) == 0x000B28, "Member 'UGAB_InterrogatePlayer_Reveal_C::Timer_Reveal' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, T_NPC_Mang) == 0x000B30, "Member 'UGAB_InterrogatePlayer_Reveal_C::T_NPC_Mang' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, RevealDuration) == 0x000B38, "Member 'UGAB_InterrogatePlayer_Reveal_C::RevealDuration' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, EndAbilityDelay) == 0x000B3C, "Member 'UGAB_InterrogatePlayer_Reveal_C::EndAbilityDelay' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, SweepDelay) == 0x000B40, "Member 'UGAB_InterrogatePlayer_Reveal_C::SweepDelay' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Cancelled) == 0x000B44, "Member 'UGAB_InterrogatePlayer_Reveal_C::Cancelled' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Ending) == 0x000B45, "Member 'UGAB_InterrogatePlayer_Reveal_C::Ending' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, IndicatorGroup) == 0x000B48, "Member 'UGAB_InterrogatePlayer_Reveal_C::IndicatorGroup' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, CameraMode) == 0x000B58, "Member 'UGAB_InterrogatePlayer_Reveal_C::CameraMode' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, ActorsToMark) == 0x000B60, "Member 'UGAB_InterrogatePlayer_Reveal_C::ActorsToMark' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, T_ReticleHUD) == 0x000B70, "Member 'UGAB_InterrogatePlayer_Reveal_C::T_ReticleHUD' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, NPCTagsToMark) == 0x000B90, "Member 'UGAB_InterrogatePlayer_Reveal_C::NPCTagsToMark' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, ChestTagsToMark) == 0x000BB0, "Member 'UGAB_InterrogatePlayer_Reveal_C::ChestTagsToMark' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, GameplayItemTagsToMark) == 0x000BD0, "Member 'UGAB_InterrogatePlayer_Reveal_C::GameplayItemTagsToMark' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, ParticleSystemParamName) == 0x000BF0, "Member 'UGAB_InterrogatePlayer_Reveal_C::ParticleSystemParamName' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, IndicatedPS) == 0x000BF8, "Member 'UGAB_InterrogatePlayer_Reveal_C::IndicatedPS' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, IndicatedSound) == 0x000C00, "Member 'UGAB_InterrogatePlayer_Reveal_C::IndicatedSound' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, PSOffset) == 0x000C08, "Member 'UGAB_InterrogatePlayer_Reveal_C::PSOffset' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, PSVectorParamName) == 0x000C14, "Member 'UGAB_InterrogatePlayer_Reveal_C::PSVectorParamName' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, PSDBNOOffset) == 0x000C1C, "Member 'UGAB_InterrogatePlayer_Reveal_C::PSDBNOOffset' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, EnemyStencilName) == 0x000C28, "Member 'UGAB_InterrogatePlayer_Reveal_C::EnemyStencilName' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, TreasureChestStencilName) == 0x000C30, "Member 'UGAB_InterrogatePlayer_Reveal_C::TreasureChestStencilName' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, StepTime) == 0x000C38, "Member 'UGAB_InterrogatePlayer_Reveal_C::StepTime' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, Testbool) == 0x000C3C, "Member 'UGAB_InterrogatePlayer_Reveal_C::Testbool' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, EnemyStencilID) == 0x000C40, "Member 'UGAB_InterrogatePlayer_Reveal_C::EnemyStencilID' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, StencilStepTime) == 0x000C60, "Member 'UGAB_InterrogatePlayer_Reveal_C::StencilStepTime' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, bUseDefaultStencil) == 0x000C80, "Member 'UGAB_InterrogatePlayer_Reveal_C::bUseDefaultStencil' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Reveal_C, IndicatorStepTime) == 0x000CA0, "Member 'UGAB_InterrogatePlayer_Reveal_C::IndicatorStepTime' has a wrong offset!");

}

