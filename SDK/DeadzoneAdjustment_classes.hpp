#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeadzoneAdjustment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DeadzoneAdjustment.DeadzoneAdjustment_C
// 0x0038 (0x0268 - 0x0230)
class UDeadzoneAdjustment_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Deadzone_Adjustment;                               // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsMenuSetting_C*                  Deadzone_Adjustment_Slider;                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deadzone_Max;                                      // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ResetButton;                                       // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ScaleValue;                                        // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinValue;                                          // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESettingType                                  SettingType;                                       // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DeadzoneAdjustment(int32 EntryPoint);
	void OnValueChanged_Bind(float Value);
	void Construct();
	class UWidget* DoCustomNavigation_0(EUINavigation Param_Navigation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DeadzoneAdjustment_C">();
	}
	static class UDeadzoneAdjustment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeadzoneAdjustment_C>();
	}
};
static_assert(alignof(UDeadzoneAdjustment_C) == 0x000008, "Wrong alignment on UDeadzoneAdjustment_C");
static_assert(sizeof(UDeadzoneAdjustment_C) == 0x000268, "Wrong size on UDeadzoneAdjustment_C");
static_assert(offsetof(UDeadzoneAdjustment_C, UberGraphFrame) == 0x000230, "Member 'UDeadzoneAdjustment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, Deadzone_Adjustment) == 0x000238, "Member 'UDeadzoneAdjustment_C::Deadzone_Adjustment' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, Deadzone_Adjustment_Slider) == 0x000240, "Member 'UDeadzoneAdjustment_C::Deadzone_Adjustment_Slider' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, Deadzone_Max) == 0x000248, "Member 'UDeadzoneAdjustment_C::Deadzone_Max' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, ResetButton) == 0x000250, "Member 'UDeadzoneAdjustment_C::ResetButton' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, ScaleValue) == 0x000258, "Member 'UDeadzoneAdjustment_C::ScaleValue' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, MaxValue) == 0x00025C, "Member 'UDeadzoneAdjustment_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, MinValue) == 0x000260, "Member 'UDeadzoneAdjustment_C::MinValue' has a wrong offset!");
static_assert(offsetof(UDeadzoneAdjustment_C, SettingType) == 0x000264, "Member 'UDeadzoneAdjustment_C::SettingType' has a wrong offset!");

}

