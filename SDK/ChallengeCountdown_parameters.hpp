#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeCountdown

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ChallengeCountdown.ChallengeCountdown_C.ExecuteUbergraph_ChallengeCountdown
// 0x0118 (0x0118 - 0x0000)
struct ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerDisplayData                      K2Node_Event_DisplayStyle;                         // 0x0010(0x0038)(ConstParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6653[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6654[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6655[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0098(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00C0(0x0028)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6656[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00F0(0x0028)()
};
static_assert(alignof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown) == 0x000008, "Wrong alignment on ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown");
static_assert(sizeof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown) == 0x000118, "Wrong size on ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, EntryPoint) == 0x000000, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, Temp_bool_Variable) == 0x000004, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, Temp_byte_Variable) == 0x000005, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, Temp_byte_Variable_1) == 0x000006, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_Event_IsDesignTime) == 0x000007, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000008, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x00000C, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_Event_DisplayStyle) == 0x000010, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_Event_DisplayStyle' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, Temp_bool_Variable_1) == 0x000078, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000088, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_MakeStruct_SlateColor_1) == 0x000098, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_MakeStruct_SlateColor_2) == 0x0000C0, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_Select_Default) == 0x0000E8, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown, K2Node_Select_Default_1) == 0x0000F0, "Member 'ChallengeCountdown_C_ExecuteUbergraph_ChallengeCountdown::K2Node_Select_Default_1' has a wrong offset!");

// Function ChallengeCountdown.ChallengeCountdown_C.OnChallengeSet
// 0x0038 (0x0038 - 0x0000)
struct ChallengeCountdown_C_OnChallengeSet final
{
public:
	struct FTimerDisplayData                      DisplayStyle;                                      // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ChallengeCountdown_C_OnChallengeSet) == 0x000008, "Wrong alignment on ChallengeCountdown_C_OnChallengeSet");
static_assert(sizeof(ChallengeCountdown_C_OnChallengeSet) == 0x000038, "Wrong size on ChallengeCountdown_C_OnChallengeSet");
static_assert(offsetof(ChallengeCountdown_C_OnChallengeSet, DisplayStyle) == 0x000000, "Member 'ChallengeCountdown_C_OnChallengeSet::DisplayStyle' has a wrong offset!");

// Function ChallengeCountdown.ChallengeCountdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ChallengeCountdown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeCountdown_C_PreConstruct) == 0x000001, "Wrong alignment on ChallengeCountdown_C_PreConstruct");
static_assert(sizeof(ChallengeCountdown_C_PreConstruct) == 0x000001, "Wrong size on ChallengeCountdown_C_PreConstruct");
static_assert(offsetof(ChallengeCountdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ChallengeCountdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

