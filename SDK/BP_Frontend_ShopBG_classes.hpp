#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Frontend_ShopBG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Frontend_ShopBG.BP_Frontend_ShopBG_C
// 0x00D8 (0x02F8 - 0x0220)
class ABP_Frontend_ShopBG_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StandardBackgroundPlane1;                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StandardBackgroundPlane;                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cone;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BackgroundTexturePlane;                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VeryLargeBackgroundPlane;                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_Signal;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_Intro;                                         // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               NextRot;                                           // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot_0;                                             // 0x0288(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot_2;                                             // 0x0294(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PlayRate;                                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_IntroStart;                                    // 0x02A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHasEvent;                                         // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A0[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YInitial;                                          // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YEnd;                                              // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A1[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACMSLobbyDirector_C*                    CMSDirector;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 BPEnvName;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ShopEntered;                                       // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71A2[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DonutSeqTimerHandle;                               // 0x02E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DomeObstruction;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void SetDynamicBG(class UTexture* InTexture);
	void EnableDynamicShopBG();
	void SetDynamicEnvironmentEvent(const class FString& InPresetEnvName);
	void DebugShopBG();
	void HandleRequestHide();
	void HandleItemShopEntered();
	void HandleStoreEntered();
	void ResetDonut();
	void ExecuteUbergraph_BP_Frontend_ShopBG(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Frontend_ShopBG_C">();
	}
	static class ABP_Frontend_ShopBG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Frontend_ShopBG_C>();
	}
};
static_assert(alignof(ABP_Frontend_ShopBG_C) == 0x000008, "Wrong alignment on ABP_Frontend_ShopBG_C");
static_assert(sizeof(ABP_Frontend_ShopBG_C) == 0x0002F8, "Wrong size on ABP_Frontend_ShopBG_C");
static_assert(offsetof(ABP_Frontend_ShopBG_C, UberGraphFrame) == 0x000220, "Member 'ABP_Frontend_ShopBG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, StandardBackgroundPlane1) == 0x000228, "Member 'ABP_Frontend_ShopBG_C::StandardBackgroundPlane1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, StandardBackgroundPlane) == 0x000230, "Member 'ABP_Frontend_ShopBG_C::StandardBackgroundPlane' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Cone) == 0x000238, "Member 'ABP_Frontend_ShopBG_C::Cone' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Plane) == 0x000240, "Member 'ABP_Frontend_ShopBG_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Scene) == 0x000248, "Member 'ABP_Frontend_ShopBG_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, BackgroundTexturePlane) == 0x000250, "Member 'ABP_Frontend_ShopBG_C::BackgroundTexturePlane' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, VeryLargeBackgroundPlane) == 0x000258, "Member 'ABP_Frontend_ShopBG_C::VeryLargeBackgroundPlane' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Scene_Signal) == 0x000260, "Member 'ABP_Frontend_ShopBG_C::Scene_Signal' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, DefaultSceneRoot) == 0x000268, "Member 'ABP_Frontend_ShopBG_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Rot_Intro) == 0x000270, "Member 'ABP_Frontend_ShopBG_C::Rot_Intro' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, NextRot) == 0x00027C, "Member 'ABP_Frontend_ShopBG_C::NextRot' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Rot_0) == 0x000288, "Member 'ABP_Frontend_ShopBG_C::Rot_0' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Rot_2) == 0x000294, "Member 'ABP_Frontend_ShopBG_C::Rot_2' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, PlayRate) == 0x0002A0, "Member 'ABP_Frontend_ShopBG_C::PlayRate' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Rot_IntroStart) == 0x0002A4, "Member 'ABP_Frontend_ShopBG_C::Rot_IntroStart' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, bHasEvent) == 0x0002B0, "Member 'ABP_Frontend_ShopBG_C::bHasEvent' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, YInitial) == 0x0002B4, "Member 'ABP_Frontend_ShopBG_C::YInitial' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, YEnd) == 0x0002B8, "Member 'ABP_Frontend_ShopBG_C::YEnd' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, Mid) == 0x0002C0, "Member 'ABP_Frontend_ShopBG_C::Mid' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, CMSDirector) == 0x0002C8, "Member 'ABP_Frontend_ShopBG_C::CMSDirector' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, BPEnvName) == 0x0002D0, "Member 'ABP_Frontend_ShopBG_C::BPEnvName' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, ShopEntered) == 0x0002E0, "Member 'ABP_Frontend_ShopBG_C::ShopEntered' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, DonutSeqTimerHandle) == 0x0002E8, "Member 'ABP_Frontend_ShopBG_C::DonutSeqTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_ShopBG_C, DomeObstruction) == 0x0002F0, "Member 'ABP_Frontend_ShopBG_C::DomeObstruction' has a wrong offset!");

}

