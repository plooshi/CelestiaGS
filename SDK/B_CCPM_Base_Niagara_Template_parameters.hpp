#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CCPM_Base_Niagara_Template

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.getIsFrontEnd
// 0x0002 (0x0002 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd final
{
public:
	bool                                          Param_IsInFrontEnd;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_getIsFrontEnd_IsInFrontEnd;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd) == 0x000002, "Wrong size on B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd, Param_IsInFrontEnd) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd::Param_IsInFrontEnd' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd, CallFunc_getIsFrontEnd_IsInFrontEnd) == 0x000001, "Member 'B_CCPM_Base_Niagara_Template_C_GetIsFrontEnd::CallFunc_getIsFrontEnd_IsInFrontEnd' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.set Niagara System User Variable (Bool)
// 0x000C (0x000C - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_ final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_) == 0x00000C, "Wrong size on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_, Param_Name) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_::Param_Name' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_, Value) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Bool_::Value' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.set Niagara System User Variable (Vector)
// 0x0014 (0x0014 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_ final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_) == 0x000014, "Wrong size on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_, Param_Name) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_::Param_Name' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_, Value) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Vector_::Value' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.set Niagara System User Variable (Int)
// 0x000C (0x000C - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_ final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_) == 0x00000C, "Wrong size on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_, Param_Name) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_::Param_Name' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_, Value) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Int_::Value' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.set Niagara System User Variable (Color)
// 0x0018 (0x0018 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_ final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_) == 0x000018, "Wrong size on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_, Param_Name) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_::Param_Name' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_, Value) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Color_::Value' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.getNiagaraParticles
// 0x0040 (0x0040 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles final
{
public:
	struct FGameplayTagContainer                  Gameplay_Tag_Container;                            // 0x0000(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  CallFunc_getNiagaraParticles_Gameplay_Tag_Container; // 0x0020(0x0020)()
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles) == 0x000008, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles) == 0x000040, "Wrong size on B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles, Gameplay_Tag_Container) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles::Gameplay_Tag_Container' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles, CallFunc_getNiagaraParticles_Gameplay_Tag_Container) == 0x000020, "Member 'B_CCPM_Base_Niagara_Template_C_GetNiagaraParticles::CallFunc_getNiagaraParticles_Gameplay_Tag_Container' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.set Niagara System User Variable (Float)
// 0x000C (0x000C - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_ final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_) == 0x00000C, "Wrong size on B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_, Param_Name) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_::Param_Name' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_, Value) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_Set_Niagara_System_User_Variable__Float_::Value' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.getIsDriving
// 0x0002 (0x0002 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_GetIsDriving final
{
public:
	bool                                          Param_IsDriving;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_getIsDriving_isDriving;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_GetIsDriving) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_GetIsDriving");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_GetIsDriving) == 0x000002, "Wrong size on B_CCPM_Base_Niagara_Template_C_GetIsDriving");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetIsDriving, Param_IsDriving) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_GetIsDriving::Param_IsDriving' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_GetIsDriving, CallFunc_getIsDriving_isDriving) == 0x000001, "Member 'B_CCPM_Base_Niagara_Template_C_GetIsDriving::CallFunc_getIsDriving_isDriving' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.Morning Phase
// 0x0001 (0x0001 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Morning_Phase final
{
public:
	bool                                          At_Creation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Morning_Phase) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Morning_Phase");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Morning_Phase) == 0x000001, "Wrong size on B_CCPM_Base_Niagara_Template_C_Morning_Phase");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Morning_Phase, At_Creation) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Morning_Phase::At_Creation' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.Day Phase
// 0x0001 (0x0001 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Day_Phase final
{
public:
	bool                                          At_Creation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Day_Phase) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Day_Phase");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Day_Phase) == 0x000001, "Wrong size on B_CCPM_Base_Niagara_Template_C_Day_Phase");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Day_Phase, At_Creation) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Day_Phase::At_Creation' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.Evening Phase
// 0x0001 (0x0001 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Evening_Phase final
{
public:
	bool                                          At_Creation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Evening_Phase) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Evening_Phase");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Evening_Phase) == 0x000001, "Wrong size on B_CCPM_Base_Niagara_Template_C_Evening_Phase");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Evening_Phase, At_Creation) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Evening_Phase::At_Creation' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.Night Phase
// 0x0001 (0x0001 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Night_Phase final
{
public:
	bool                                          At_Creation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Night_Phase) == 0x000001, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Night_Phase");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Night_Phase) == 0x000001, "Wrong size on B_CCPM_Base_Niagara_Template_C_Night_Phase");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Night_Phase, At_Creation) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Night_Phase::At_Creation' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.OnHitPawn
// 0x00A8 (0x00A8 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_OnHitPawn final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x001C(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_OnHitPawn) == 0x000008, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_OnHitPawn");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_OnHitPawn) == 0x0000A8, "Wrong size on B_CCPM_Base_Niagara_Template_C_OnHitPawn");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_OnHitPawn, SelfActor) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_OnHitPawn::SelfActor' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_OnHitPawn, OtherActor) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_OnHitPawn::OtherActor' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_OnHitPawn, NormalImpulse) == 0x000010, "Member 'B_CCPM_Base_Niagara_Template_C_OnHitPawn::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_OnHitPawn, Hit) == 0x00001C, "Member 'B_CCPM_Base_Niagara_Template_C_OnHitPawn::Hit' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.Character Movement Updated
// 0x001C (0x001C - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldLocation;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldVelocity;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated) == 0x000004, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated) == 0x00001C, "Wrong size on B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated, DeltaSeconds) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated, OldLocation) == 0x000004, "Member 'B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated::OldLocation' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated, OldVelocity) == 0x000010, "Member 'B_CCPM_Base_Niagara_Template_C_Character_Movement_Updated::OldVelocity' has a wrong offset!");

// Function B_CCPM_Base_Niagara_Template.B_CCPM_Base_Niagara_Template_C.ExecuteUbergraph_B_CCPM_Base_Niagara_Template
// 0x00D0 (0x00D0 - 0x0000)
struct B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_OldLocation;                          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_OldVelocity;                          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_At_Creation_3;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_At_Creation_2;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_At_Creation_1;                        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_At_Creation;                          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F58[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SelfActor;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0044(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template) == 0x000008, "Wrong alignment on B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template");
static_assert(sizeof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template) == 0x0000D0, "Wrong size on B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, EntryPoint) == 0x000000, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_OldLocation) == 0x000008, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_OldLocation' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_OldVelocity) == 0x000014, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_OldVelocity' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_At_Creation_3) == 0x000020, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_At_Creation_3' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_At_Creation_2) == 0x000021, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_At_Creation_2' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_At_Creation_1) == 0x000022, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_At_Creation_1' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_At_Creation) == 0x000023, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_At_Creation' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_SelfActor) == 0x000028, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_SelfActor' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_OtherActor) == 0x000030, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_NormalImpulse) == 0x000038, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template, K2Node_Event_Hit) == 0x000044, "Member 'B_CCPM_Base_Niagara_Template_C_ExecuteUbergraph_B_CCPM_Base_Niagara_Template::K2Node_Event_Hit' has a wrong offset!");

}

