#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthTrackComponent

#include "Basic.hpp"

#include "TimeSynth_VolumeGroupState_structs.hpp"
#include "TimeSynth_TrackMixState_structs.hpp"
#include "TimeSynth_structs.hpp"
#include "TimeSynth_TrackPlayStates_structs.hpp"
#include "TimeSynth_TransitionData_structs.hpp"
#include "TimeSynth_TrackStemData_structs.hpp"


namespace SDK::Params
{

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnPlayStateChanged__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature final
{
public:
	ETimeSynth_TrackPlayStates                    Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeSynth_TrackPlayStates                    New;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature) == 0x000002, "Wrong size on BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature, Previous) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature::Previous' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature, New) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature::New' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.ExecuteUbergraph_BP_TimeSynthTrackComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_Enabled;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7332[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBP_TimeSynthTrackComponent_C*    Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TimeSynthController_Base_C*         K2Node_DynamicCast_AsBP_Time_Synth_Controller_Base; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent) == 0x000028, "Wrong size on BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, EntryPoint) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, CallFunc_GetIsEnabled_Enabled) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::CallFunc_GetIsEnabled_Enabled' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, Temp_object_Variable) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, K2Node_DynamicCast_AsBP_Time_Synth_Controller_Base) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::K2Node_DynamicCast_AsBP_Time_Synth_Controller_Base' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_ExecuteUbergraph_BP_TimeSynthTrackComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetTimeSynthController
// 0x0068 (0x0068 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetTimeSynthController final
{
public:
	class ABP_TimeSynthController_Base_C*         Param_TimeSynthController;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7333[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TimeSynthController_Base_C*         CallFunc_GetTimeSynthController_TimeSynthController; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TimeSynthController_Base_C*         CallFunc_GetTimeSynthController_TimeSynthController_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7334[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)> K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetTimeSynthController) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetTimeSynthController");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetTimeSynthController) == 0x000068, "Wrong size on BP_TimeSynthTrackComponent_C_SetTimeSynthController");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, Param_TimeSynthController) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::Param_TimeSynthController' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_GetTimeSynthController_TimeSynthController) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_GetTimeSynthController_TimeSynthController' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_GetTimeSynthController_TimeSynthController_1) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_GetTimeSynthController_TimeSynthController_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetTimeSynthController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_TimeSynthTrackComponent_C_SetTimeSynthController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStart
// 0x0048 (0x0048 - 0x0000)
struct BP_TimeSynthTrackComponent_C_QueueTrackStart final
{
public:
	bool                                          Is_First_Track;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimeSynth_TrackPlayStates                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeSynth_TrackPlayStates                    Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7335[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimeSynth_TrackPlayStates                    K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7336[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculateMaxClipDuration_Duration;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7337[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x0034(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_QueueTrackStart) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_QueueTrackStart");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_QueueTrackStart) == 0x000048, "Wrong size on BP_TimeSynthTrackComponent_C_QueueTrackStart");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Is_First_Track) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Is_First_Track' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_byte_Variable) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_byte_Variable_1) == 0x000002, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_bool_Variable) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, K2Node_Select_Default) == 0x000011, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CalculateMaxClipDuration_Duration) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CalculateMaxClipDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CheckPlaystate_Result) == 0x000019, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CheckPlaystate_Result_1) == 0x00001A, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_PlayClip_ReturnValue) == 0x000034, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStop
// 0x0038 (0x0038 - 0x0000)
struct BP_TimeSynthTrackComponent_C_QueueTrackStop final
{
public:
	bool                                          Play_Outro;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7338[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7339[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x0018(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynthClipHandle                   CallFunc_Array_Get_Item;                           // 0x0028(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_QueueTrackStop) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_QueueTrackStop");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_QueueTrackStop) == 0x000038, "Wrong size on BP_TimeSynthTrackComponent_C_QueueTrackStop");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Play_Outro) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Play_Outro' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_CheckPlaystate_Result) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_CheckPlaystate_Result_1) == 0x000011, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_PlayClip_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.LoopCurrentTrack
// 0x0078 (0x0078 - 0x0000)
struct BP_TimeSynthTrackComponent_C_LoopCurrentTrack final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynthTimeDef                      K2Node_MakeStruct_TimeSynthTimeDef;                // 0x0010(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_733A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeSynthComponent*                    CallFunc_GetTimeSynthComponent_TimeSynth;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynthClipHandle                   CallFunc_Array_Get_Item;                           // 0x002C(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733B[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculateMaxClipDuration_Duration;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_733C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeSynthComponent*                    CallFunc_GetTimeSynthComponent_TimeSynth_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item_1;                         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733D[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x0068(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_LoopCurrentTrack");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack) == 0x000078, "Wrong size on BP_TimeSynthTrackComponent_C_LoopCurrentTrack");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, K2Node_MakeStruct_TimeSynthTimeDef) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::K2Node_MakeStruct_TimeSynthTimeDef' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_GetTimeSynthComponent_TimeSynth) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_GetTimeSynthComponent_TimeSynth' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_CalculateMaxClipDuration_Duration) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_CalculateMaxClipDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_GetTimeSynthComponent_TimeSynth_1) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_GetTimeSynthComponent_TimeSynth_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_PlayClip_ReturnValue) == 0x000068, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CalculateMaxClipDuration
// 0x0050 (0x0050 - 0x0000)
struct BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration final
{
public:
	TArray<struct FTimeSynth_TrackStemData>       Param_Clips;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Duration;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDuration;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_733E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_733F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration) == 0x000050, "Wrong size on BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, Param_Clips) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::Param_Clips' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, Duration) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, MaxDuration) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::MaxDuration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_CalculateMaxClipDuration::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.HasTransitionForTrack
// 0x0048 (0x0048 - 0x0000)
struct BP_TimeSynthTrackComponent_C_HasTransitionForTrack final
{
public:
	class FName                                   Param_TrackID;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Transition_Found;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7340[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TransitionData              Transition_Data;                                   // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FTimeSynth_TransitionData              CallFunc_Map_Find_Value;                           // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_HasTransitionForTrack");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack) == 0x000048, "Wrong size on BP_TimeSynthTrackComponent_C_HasTransitionForTrack");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, Param_TrackID) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::Param_TrackID' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, Transition_Found) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::Transition_Found' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, Transition_Data) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::Transition_Data' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBeat
// 0x00F8 (0x00F8 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnQuantizationBeat final
{
public:
	ETimeSynthEventQuantization                   QuantizationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7341[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBars;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beat;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7342[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7343[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7344[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7345[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnQuantizationBeat");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat) == 0x0000F8, "Wrong size on BP_TimeSynthTrackComponent_C_OnQuantizationBeat");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, QuantizationType) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::QuantizationType' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, NumBars) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::NumBars' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, Beat) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::Beat' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000088, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000C8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_CheckPlaystate_Result) == 0x0000D8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E0, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_CheckPlaystate_Result_1) == 0x0000F0, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CheckPlaystate
// 0x0003 (0x0003 - 0x0000)
struct BP_TimeSynthTrackComponent_C_CheckPlaystate final
{
public:
	ETimeSynth_TrackPlayStates                    Is_In_Play_State;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_CheckPlaystate) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_CheckPlaystate");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_CheckPlaystate) == 0x000003, "Wrong size on BP_TimeSynthTrackComponent_C_CheckPlaystate");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, Is_In_Play_State) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::Is_In_Play_State' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, Result) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetPlaystate
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetPlaystate final
{
public:
	ETimeSynth_TrackPlayStates                    Is_In_Play_State;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7346[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetPlaystate) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetPlaystate");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetPlaystate) == 0x0000C0, "Wrong size on BP_TimeSynthTrackComponent_C_SetPlaystate");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, Is_In_Play_State) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::Is_In_Play_State' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000050, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000090, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000A0, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000B0, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBar
// 0x0010 (0x0010 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnQuantizationBar final
{
public:
	ETimeSynthEventQuantization                   QuantizationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7347[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBars;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beat;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnQuantizationBar) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnQuantizationBar");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnQuantizationBar) == 0x000010, "Wrong size on BP_TimeSynthTrackComponent_C_OnQuantizationBar");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, QuantizationType) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::QuantizationType' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, NumBars) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::NumBars' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, Beat) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::Beat' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, CallFunc_CheckPlaystate_Result) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, CallFunc_CheckPlaystate_Result_1) == 0x00000D, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetTimeSynthController
// 0x0008 (0x0008 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetTimeSynthController final
{
public:
	class ABP_TimeSynthController_Base_C*         Param_TimeSynthController;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetTimeSynthController) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetTimeSynthController");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetTimeSynthController) == 0x000008, "Wrong size on BP_TimeSynthTrackComponent_C_GetTimeSynthController");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetTimeSynthController, Param_TimeSynthController) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetTimeSynthController::Param_TimeSynthController' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetIsEnabled final
{
public:
	bool                                          Param_Enabled;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetIsEnabled) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetIsEnabled");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetIsEnabled) == 0x000001, "Wrong size on BP_TimeSynthTrackComponent_C_GetIsEnabled");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetIsEnabled, Param_Enabled) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetIsEnabled::Param_Enabled' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetTrackID
// 0x0008 (0x0008 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetTrackID final
{
public:
	class FName                                   Param_TrackID;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetTrackID) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetTrackID");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetTrackID) == 0x000008, "Wrong size on BP_TimeSynthTrackComponent_C_GetTrackID");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetTrackID, Param_TrackID) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetTrackID::Param_TrackID' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetQuantizationSettings
// 0x0014 (0x0014 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetQuantizationSettings final
{
public:
	struct FTimeSynthQuantizationSettings         Param_QuantizationSettings;                        // 0x0000(0x0014)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetQuantizationSettings) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetQuantizationSettings");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetQuantizationSettings) == 0x000014, "Wrong size on BP_TimeSynthTrackComponent_C_GetQuantizationSettings");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetQuantizationSettings, Param_QuantizationSettings) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetQuantizationSettings::Param_QuantizationSettings' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetMaxClipDuration
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetMaxClipDuration final
{
public:
	int32                                         MaxClipDuration;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetMaxClipDuration) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetMaxClipDuration");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetMaxClipDuration) == 0x000004, "Wrong size on BP_TimeSynthTrackComponent_C_GetMaxClipDuration");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetMaxClipDuration, MaxClipDuration) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetMaxClipDuration::MaxClipDuration' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.FindMixState
// 0x0050 (0x0050 - 0x0000)
struct BP_TimeSynthTrackComponent_C_FindMixState final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7348[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TrackMixState               CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_FindMixState) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_FindMixState");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_FindMixState) == 0x000050, "Wrong size on BP_TimeSynthTrackComponent_C_FindMixState");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, Param_Name) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, Array_Index) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::Array_Index' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_FindMixState, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000049, "Member 'BP_TimeSynthTrackComponent_C_FindMixState::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetMixStateVolume
// 0x0070 (0x0070 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetMixStateVolume final
{
public:
	class FName                                   MixStateName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalVolume;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalFadeTime;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalEnabled;                                      // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7349[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LocalMixStateName;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TimeSynthController_Base_C*         CallFunc_GetTimeSynthController_TimeSynthController; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Log_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeSynthComponent*                    CallFunc_GetTimeSynthComponent_TimeSynth;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindMixState_Array_Index;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_VolumeGroupState            CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetMixStateVolume) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetMixStateVolume");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetMixStateVolume) == 0x000070, "Wrong size on BP_TimeSynthTrackComponent_C_SetMixStateVolume");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, MixStateName) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::MixStateName' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, Volume) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, LocalVolume) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::LocalVolume' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, LocalFadeTime) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::LocalFadeTime' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, LocalEnabled) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::LocalEnabled' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, LocalMixStateName) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::LocalMixStateName' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_FClamp_ReturnValue_1) == 0x000034, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_GetTimeSynthController_TimeSynthController) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_GetTimeSynthController_TimeSynthController' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Log_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_GetTimeSynthComponent_TimeSynth) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_GetTimeSynthComponent_TimeSynth' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_FindMixState_Array_Index) == 0x000054, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_FindMixState_Array_Index' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_FMin_ReturnValue) == 0x00005C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_SelectFloat_ReturnValue) == 0x000064, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolume, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolume::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetPriority final
{
public:
	float                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetPriority) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetPriority");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetPriority) == 0x000004, "Wrong size on BP_TimeSynthTrackComponent_C_GetPriority");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetPriority, Priority) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetPriority::Priority' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetMixStateIndexFromName
// 0x0010 (0x0010 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindMixState_Array_Index;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName) == 0x000010, "Wrong size on BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName, Param_Name) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName, Array_Index) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName::Array_Index' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName, CallFunc_FindMixState_Array_Index) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_GetMixStateIndexFromName::CallFunc_FindMixState_Array_Index' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetMixStateVolumeByIndex
// 0x0060 (0x0060 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalVolume;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Log_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_VolumeGroupState            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7350[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TimeSynthController_Base_C*         CallFunc_GetTimeSynthController_TimeSynthController; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7351[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeSynthComponent*                    CallFunc_GetTimeSynthComponent_TimeSynth;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex) == 0x000060, "Wrong size on BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, Param_Index) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, Volume) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::Volume' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, LocalVolume) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::LocalVolume' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000019, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Log_ReturnValue) == 0x000024, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_SelectFloat_ReturnValue) == 0x00003C, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_GetTimeSynthController_TimeSynthController) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_GetTimeSynthController_TimeSynthController' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex, CallFunc_GetTimeSynthComponent_TimeSynth) == 0x000058, "Member 'BP_TimeSynthTrackComponent_C_SetMixStateVolumeByIndex::CallFunc_GetTimeSynthComponent_TimeSynth' has a wrong offset!");

}

