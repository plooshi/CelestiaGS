#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativePortalHUDDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CreativePortalHUDDetails.CreativePortalHUDDetails_C
// 0x00E0 (0x0310 - 0x0230)
class UCreativePortalHUDDetails_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro3;                                            // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SheenNames;                                        // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VisibilityReveal;                                  // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DescriptionReveal;                                 // 0x0250(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro2;                                            // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CreativeLogoWatermark;                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           IslandNameBox;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PopulationBox;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SocialImage;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_FeaturedCreation;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_IslandName;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_IslandPop;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_LinkCode;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_PlayerName;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_Tags;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABGA_IslandPortal_C*                    MyBGAIslandPortal;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName;                                        // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   IslandName;                                        // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsCurated;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLinkCode;                                        // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasDescription;                                    // 0x02FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldShowDescription;                            // 0x02FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DescriptionDistanceLimit;                          // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurVis;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNewCurVis;                                        // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F31[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IconThresholdDistance;                             // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FarDistance;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void PopulateTags(TArray<struct FCreativeIslandDescriptionTag>& TagArray);
	void UpdateVisBasedOnDistance();
	void SetLinkCode(const class FString& LinkCode);
	void SetDescription(const class FText& Description);
	void SetCuratedStatus(bool bIsFeatured, bool bIsLinkCode, bool bIsUserInitiatedLoad);
	void SetupPortalEventBinding(class ABGA_IslandPortal_C* InPortal, bool Bind);
	void SetIslandName(const class FText& NewIslandName);
	void SetIslandPop(int32 NewPop);
	void SetPlayerName(const class FText& Param_PlayerName);
	void InitFromObject(class UObject* InitObject);
	void OnNewVisibilityThresholdChanged(bool bNewVis);
	void PlayIntro();
	void ExecuteUbergraph_CreativePortalHUDDetails(int32 EntryPoint);

	void GetIslandDescriptionTags(TArray<struct FCreativeIslandDescriptionTag>* DescriptionTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CreativePortalHUDDetails_C">();
	}
	static class UCreativePortalHUDDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativePortalHUDDetails_C>();
	}
};
static_assert(alignof(UCreativePortalHUDDetails_C) == 0x000008, "Wrong alignment on UCreativePortalHUDDetails_C");
static_assert(sizeof(UCreativePortalHUDDetails_C) == 0x000310, "Wrong size on UCreativePortalHUDDetails_C");
static_assert(offsetof(UCreativePortalHUDDetails_C, UberGraphFrame) == 0x000230, "Member 'UCreativePortalHUDDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Intro3) == 0x000238, "Member 'UCreativePortalHUDDetails_C::Intro3' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, SheenNames) == 0x000240, "Member 'UCreativePortalHUDDetails_C::SheenNames' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, VisibilityReveal) == 0x000248, "Member 'UCreativePortalHUDDetails_C::VisibilityReveal' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, DescriptionReveal) == 0x000250, "Member 'UCreativePortalHUDDetails_C::DescriptionReveal' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Intro2) == 0x000258, "Member 'UCreativePortalHUDDetails_C::Intro2' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Intro) == 0x000260, "Member 'UCreativePortalHUDDetails_C::Intro' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, CreativeLogoWatermark) == 0x000268, "Member 'UCreativePortalHUDDetails_C::CreativeLogoWatermark' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, IslandNameBox) == 0x000270, "Member 'UCreativePortalHUDDetails_C::IslandNameBox' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, PopulationBox) == 0x000278, "Member 'UCreativePortalHUDDetails_C::PopulationBox' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, SocialImage) == 0x000280, "Member 'UCreativePortalHUDDetails_C::SocialImage' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_Description) == 0x000288, "Member 'UCreativePortalHUDDetails_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_FeaturedCreation) == 0x000290, "Member 'UCreativePortalHUDDetails_C::Text_FeaturedCreation' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_IslandName) == 0x000298, "Member 'UCreativePortalHUDDetails_C::Text_IslandName' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_IslandPop) == 0x0002A0, "Member 'UCreativePortalHUDDetails_C::Text_IslandPop' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_LinkCode) == 0x0002A8, "Member 'UCreativePortalHUDDetails_C::Text_LinkCode' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, Text_PlayerName) == 0x0002B0, "Member 'UCreativePortalHUDDetails_C::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, WrapBox_Tags) == 0x0002B8, "Member 'UCreativePortalHUDDetails_C::WrapBox_Tags' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, MyBGAIslandPortal) == 0x0002C0, "Member 'UCreativePortalHUDDetails_C::MyBGAIslandPortal' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, PlayerName) == 0x0002C8, "Member 'UCreativePortalHUDDetails_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, IslandName) == 0x0002E0, "Member 'UCreativePortalHUDDetails_C::IslandName' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, bIsCurated) == 0x0002F8, "Member 'UCreativePortalHUDDetails_C::bIsCurated' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, IsLinkCode) == 0x0002F9, "Member 'UCreativePortalHUDDetails_C::IsLinkCode' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, HasDescription) == 0x0002FA, "Member 'UCreativePortalHUDDetails_C::HasDescription' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, bShouldShowDescription) == 0x0002FB, "Member 'UCreativePortalHUDDetails_C::bShouldShowDescription' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, DescriptionDistanceLimit) == 0x0002FC, "Member 'UCreativePortalHUDDetails_C::DescriptionDistanceLimit' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, IsCurVis) == 0x000300, "Member 'UCreativePortalHUDDetails_C::IsCurVis' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, bNewCurVis) == 0x000301, "Member 'UCreativePortalHUDDetails_C::bNewCurVis' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, IconThresholdDistance) == 0x000304, "Member 'UCreativePortalHUDDetails_C::IconThresholdDistance' has a wrong offset!");
static_assert(offsetof(UCreativePortalHUDDetails_C, FarDistance) == 0x000308, "Member 'UCreativePortalHUDDetails_C::FarDistance' has a wrong offset!");

}

