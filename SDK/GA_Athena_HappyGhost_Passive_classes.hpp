#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_HappyGhost_Passive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_HappyGhost_Passive.GA_Athena_HappyGhost_Passive_C
// 0x0050 (0x0AC8 - 0x0A78)
class UGA_Athena_HappyGhost_Passive_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 GE_Active;                                         // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_Active;                                          // 0x0A88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AB_HappyGhost_Athena_C*                 Weapon;                                            // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        FortPawn;                                          // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailsafeDelay;                                     // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BBD[0x4];                                     // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             OutOfChargesSound;                                 // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_HappyGhost_Passive(int32 EntryPoint);
	void ForceEnd();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnCompleted_7857FA3D409C8FB0381EC7B9126A8525(class FName NotifyName);
	void OnBlendOut_7857FA3D409C8FB0381EC7B9126A8525(class FName NotifyName);
	void OnInterrupted_7857FA3D409C8FB0381EC7B9126A8525(class FName NotifyName);
	void OnNotifyBegin_7857FA3D409C8FB0381EC7B9126A8525(class FName NotifyName);
	void OnNotifyEnd_7857FA3D409C8FB0381EC7B9126A8525(class FName NotifyName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_HappyGhost_Passive_C">();
	}
	static class UGA_Athena_HappyGhost_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_HappyGhost_Passive_C>();
	}
};
static_assert(alignof(UGA_Athena_HappyGhost_Passive_C) == 0x000008, "Wrong alignment on UGA_Athena_HappyGhost_Passive_C");
static_assert(sizeof(UGA_Athena_HappyGhost_Passive_C) == 0x000AC8, "Wrong size on UGA_Athena_HappyGhost_Passive_C");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_HappyGhost_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, GE_Active) == 0x000A80, "Member 'UGA_Athena_HappyGhost_Passive_C::GE_Active' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, T_Active) == 0x000A88, "Member 'UGA_Athena_HappyGhost_Passive_C::T_Active' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, Weapon) == 0x000AA8, "Member 'UGA_Athena_HappyGhost_Passive_C::Weapon' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, FortPawn) == 0x000AB0, "Member 'UGA_Athena_HappyGhost_Passive_C::FortPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, FailsafeDelay) == 0x000AB8, "Member 'UGA_Athena_HappyGhost_Passive_C::FailsafeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HappyGhost_Passive_C, OutOfChargesSound) == 0x000AC0, "Member 'UGA_Athena_HappyGhost_Passive_C::OutOfChargesSound' has a wrong offset!");

}

