#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArenaLeaderboard

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function ArenaLeaderboard.ArenaLeaderboard_C.Initialize Children For Event
// 0x0040 (0x0040 - 0x0000)
struct ArenaLeaderboard_C_Initialize_Children_For_Event final
{
public:
	class FString                                 Event_Id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Event_Window_Id;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Tournament_Id;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ULeaderboardTab_C*                      K2Node_DynamicCast_AsLeaderboard_Tab;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ArenaLeaderboard_C_Initialize_Children_For_Event) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_Initialize_Children_For_Event");
static_assert(sizeof(ArenaLeaderboard_C_Initialize_Children_For_Event) == 0x000040, "Wrong size on ArenaLeaderboard_C_Initialize_Children_For_Event");
static_assert(offsetof(ArenaLeaderboard_C_Initialize_Children_For_Event, Event_Id) == 0x000000, "Member 'ArenaLeaderboard_C_Initialize_Children_For_Event::Event_Id' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_Initialize_Children_For_Event, Event_Window_Id) == 0x000010, "Member 'ArenaLeaderboard_C_Initialize_Children_For_Event::Event_Window_Id' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_Initialize_Children_For_Event, Tournament_Id) == 0x000020, "Member 'ArenaLeaderboard_C_Initialize_Children_For_Event::Tournament_Id' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_Initialize_Children_For_Event, K2Node_DynamicCast_AsLeaderboard_Tab) == 0x000030, "Member 'ArenaLeaderboard_C_Initialize_Children_For_Event::K2Node_DynamicCast_AsLeaderboard_Tab' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_Initialize_Children_For_Event, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ArenaLeaderboard_C_Initialize_Children_For_Event::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.OnLeaderboardEntrySelected
// 0x0008 (0x0008 - 0x0000)
struct ArenaLeaderboard_C_OnLeaderboardEntrySelected final
{
public:
	const class UFortEventLeaderboardEntryData*   EntryData;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArenaLeaderboard_C_OnLeaderboardEntrySelected) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_OnLeaderboardEntrySelected");
static_assert(sizeof(ArenaLeaderboard_C_OnLeaderboardEntrySelected) == 0x000008, "Wrong size on ArenaLeaderboard_C_OnLeaderboardEntrySelected");
static_assert(offsetof(ArenaLeaderboard_C_OnLeaderboardEntrySelected, EntryData) == 0x000000, "Member 'ArenaLeaderboard_C_OnLeaderboardEntrySelected::EntryData' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.ShowMyStats
// 0x0008 (0x0008 - 0x0000)
struct ArenaLeaderboard_C_ShowMyStats final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArenaLeaderboard_C_ShowMyStats) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_ShowMyStats");
static_assert(sizeof(ArenaLeaderboard_C_ShowMyStats) == 0x000008, "Wrong size on ArenaLeaderboard_C_ShowMyStats");
static_assert(offsetof(ArenaLeaderboard_C_ShowMyStats, Button) == 0x000000, "Member 'ArenaLeaderboard_C_ShowMyStats::Button' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.SetupForEvent
// 0x0020 (0x0020 - 0x0000)
struct ArenaLeaderboard_C_SetupForEvent final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventWindowId;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ArenaLeaderboard_C_SetupForEvent) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_SetupForEvent");
static_assert(sizeof(ArenaLeaderboard_C_SetupForEvent) == 0x000020, "Wrong size on ArenaLeaderboard_C_SetupForEvent");
static_assert(offsetof(ArenaLeaderboard_C_SetupForEvent, EventId) == 0x000000, "Member 'ArenaLeaderboard_C_SetupForEvent::EventId' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_SetupForEvent, EventWindowId) == 0x000010, "Member 'ArenaLeaderboard_C_SetupForEvent::EventWindowId' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.OnColorize
// 0x0170 (0x0170 - 0x0000)
struct ArenaLeaderboard_C_OnColorize final
{
public:
	struct FFortTournamentDisplayInfo             ColorInfo;                                         // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ArenaLeaderboard_C_OnColorize) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_OnColorize");
static_assert(sizeof(ArenaLeaderboard_C_OnColorize) == 0x000170, "Wrong size on ArenaLeaderboard_C_OnColorize");
static_assert(offsetof(ArenaLeaderboard_C_OnColorize, ColorInfo) == 0x000000, "Member 'ArenaLeaderboard_C_OnColorize::ColorInfo' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.Item Double-Clicked
// 0x0008 (0x0008 - 0x0000)
struct ArenaLeaderboard_C_Item_DoubleMinusClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArenaLeaderboard_C_Item_DoubleMinusClicked) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_Item_DoubleMinusClicked");
static_assert(sizeof(ArenaLeaderboard_C_Item_DoubleMinusClicked) == 0x000008, "Wrong size on ArenaLeaderboard_C_Item_DoubleMinusClicked");
static_assert(offsetof(ArenaLeaderboard_C_Item_DoubleMinusClicked, Item) == 0x000000, "Member 'ArenaLeaderboard_C_Item_DoubleMinusClicked::Item' has a wrong offset!");

// Function ArenaLeaderboard.ArenaLeaderboard_C.ExecuteUbergraph_ArenaLeaderboard
// 0x0230 (0x0230 - 0x0000)
struct ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortEventLeaderboardEntryData*   K2Node_Event_EntryData;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Item)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonButton*                          K2Node_CustomEvent_Button;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         CallFunc_GetMyLeaderboardEntry_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_EventId;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_EventWindowId;                        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFortTournamentDisplayInfo             K2Node_Event_ColorInfo;                            // 0x0050(0x0170)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButton* Button)>  K2Node_CreateDelegate_OutputDelegate_1;            // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	class ULeaderboardTab_C*                      K2Node_DynamicCast_AsLeaderboard_Tab;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76C6[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULeaderboardListViewWrapper_C*          K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper; // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76C7[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              CallFunc_GetListView_ReturnValue;                  // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76C8[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArenaViewMeTab_C*                      K2Node_DynamicCast_AsArena_View_Me_Tab;            // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard) == 0x000008, "Wrong alignment on ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard");
static_assert(sizeof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard) == 0x000230, "Wrong size on ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, EntryPoint) == 0x000000, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::EntryPoint' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_Event_EntryData) == 0x000008, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_Event_EntryData' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_CustomEvent_Button) == 0x000020, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, CallFunc_GetMyLeaderboardEntry_ReturnValue) == 0x000028, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::CallFunc_GetMyLeaderboardEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_Event_EventId) == 0x000030, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_Event_EventId' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_Event_EventWindowId) == 0x000040, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_Event_EventWindowId' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_Event_ColorInfo) == 0x000050, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_Event_ColorInfo' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001C0, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0001C8, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001D0, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_AsLeaderboard_Tab) == 0x0001E0, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_AsLeaderboard_Tab' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper) == 0x0001F0, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_bSuccess_1) == 0x0001F8, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, CallFunc_GetListView_ReturnValue) == 0x000200, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::CallFunc_GetListView_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_CustomEvent_Item) == 0x000208, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data) == 0x000210, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_bSuccess_2) == 0x000218, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_AsArena_View_Me_Tab) == 0x000220, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_AsArena_View_Me_Tab' has a wrong offset!");
static_assert(offsetof(ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard, K2Node_DynamicCast_bSuccess_3) == 0x000228, "Member 'ArenaLeaderboard_C_ExecuteUbergraph_ArenaLeaderboard::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

