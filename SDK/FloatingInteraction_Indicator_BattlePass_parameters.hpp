#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FloatingInteraction_Indicator_BattlePass

#include "Basic.hpp"


namespace SDK::Params
{

// Function FloatingInteraction_Indicator_BattlePass.FloatingInteraction_Indicator_BattlePass_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FloatingInteraction_Indicator_BattlePass_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FloatingInteraction_Indicator_BattlePass_C_PreConstruct) == 0x000001, "Wrong alignment on FloatingInteraction_Indicator_BattlePass_C_PreConstruct");
static_assert(sizeof(FloatingInteraction_Indicator_BattlePass_C_PreConstruct) == 0x000001, "Wrong size on FloatingInteraction_Indicator_BattlePass_C_PreConstruct");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FloatingInteraction_Indicator_BattlePass_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FloatingInteraction_Indicator_BattlePass.FloatingInteraction_Indicator_BattlePass_C.ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass
// 0x0030 (0x0030 - 0x0000)
struct FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6259[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass) == 0x000008, "Wrong alignment on FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass");
static_assert(sizeof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass) == 0x000030, "Wrong size on FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, EntryPoint) == 0x000000, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::EntryPoint' has a wrong offset!");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, K2Node_Event_IsDesignTime) == 0x000014, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass, CallFunc_PlayAnimation_ReturnValue_2) == 0x000028, "Member 'FloatingInteraction_Indicator_BattlePass_C_ExecuteUbergraph_FloatingInteraction_Indicator_BattlePass::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

}

