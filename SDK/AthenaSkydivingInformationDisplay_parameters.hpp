#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSkydivingInformationDisplay

#include "Basic.hpp"


namespace SDK::Params
{

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewAltitude
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewAltitude final
{
public:
	float                                         NewAltitude;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewAltitude) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewAltitude");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewAltitude) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewAltitude");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewAltitude, NewAltitude) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewAltitude::NewAltitude' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewDuration
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewDuration final
{
public:
	float                                         NewDuration;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewDuration) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewDuration");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewDuration) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewDuration");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewDuration, NewDuration) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewDuration::NewDuration' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewCurrentAltitude
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude final
{
public:
	float                                         NewCurrentAltitude;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude, NewCurrentAltitude) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewCurrentAltitude::NewCurrentAltitude' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewNormalizedGroundAltitude
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude final
{
public:
	float                                         NormalizedGroundAltitude;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude, NormalizedGroundAltitude) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewNormalizedGroundAltitude::NormalizedGroundAltitude' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewNormalizedOpeningAltitude
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude final
{
public:
	float                                         NormalizedOpeningAltitude;                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude, NormalizedOpeningAltitude) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewNormalizedOpeningAltitude::NormalizedOpeningAltitude' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewNormalizedPlayerAltitude
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude final
{
public:
	float                                         NormalizedPlayerAltitude;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude, NormalizedPlayerAltitude) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewNormalizedPlayerAltitude::NormalizedPlayerAltitude' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewVerticalSpeed
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed final
{
public:
	float                                         NewVerticalSpeed;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed, NewVerticalSpeed) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewVerticalSpeed::NewVerticalSpeed' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.OnNewHorizontalSpeed
// 0x0004 (0x0004 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed final
{
public:
	float                                         NewHorizontalSpeed;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed) == 0x000004, "Wrong alignment on AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed) == 0x000004, "Wrong size on AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed, NewHorizontalSpeed) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_OnNewHorizontalSpeed::NewHorizontalSpeed' has a wrong offset!");

// Function AthenaSkydivingInformationDisplay.AthenaSkydivingInformationDisplay_C.ExecuteUbergraph_AthenaSkydivingInformationDisplay
// 0x0090 (0x0090 - 0x0000)
struct AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A7[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewAltitude;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewDuration;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewCurrentAltitude;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NormalizedGroundAltitude;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NormalizedOpeningAltitude;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NormalizedPlayerAltitude;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewVerticalSpeed;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A8[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62A9[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewHorizontalSpeed;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62AA[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AB[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62AC[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay) == 0x000008, "Wrong alignment on AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay");
static_assert(sizeof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay) == 0x000090, "Wrong size on AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, EntryPoint) == 0x000000, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable) == 0x000004, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_bool_Variable) == 0x000008, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable_1) == 0x00000C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable_2) == 0x000010, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NewAltitude) == 0x000014, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NewAltitude' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NewDuration) == 0x000018, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NewDuration' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NewCurrentAltitude) == 0x000020, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NewCurrentAltitude' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NormalizedGroundAltitude) == 0x000028, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NormalizedGroundAltitude' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NormalizedOpeningAltitude) == 0x000030, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NormalizedOpeningAltitude' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NormalizedPlayerAltitude) == 0x000034, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NormalizedPlayerAltitude' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000038, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NewVerticalSpeed) == 0x000040, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NewVerticalSpeed' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000049, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Select_Default) == 0x00004C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000050, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Event_NewHorizontalSpeed) == 0x000054, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Event_NewHorizontalSpeed' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable_3) == 0x000060, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000068, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_bool_Variable_1) == 0x000070, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable_4) == 0x000074, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Select_Default_1) == 0x000078, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_float_Variable_5) == 0x00007C, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, Temp_bool_Variable_2) == 0x000080, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, K2Node_Select_Default_2) == 0x000084, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000088, "Member 'AthenaSkydivingInformationDisplay_C_ExecuteUbergraph_AthenaSkydivingInformationDisplay::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");

}

