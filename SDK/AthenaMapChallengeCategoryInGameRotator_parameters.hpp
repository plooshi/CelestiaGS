#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapChallengeCategoryInGameRotator

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.PlayIntroAnim
// 0x0018 (0x0018 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim final
{
public:
	bool                                          bIsReverse;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70FA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim) == 0x000008, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim) == 0x000018, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim, bIsReverse) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim::bIsReverse' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'AthenaMapChallengeCategoryInGameRotator_C_PlayIntroAnim::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BP_OnOptionsPopulated
// 0x0004 (0x0004 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated) == 0x000004, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated) == 0x000004, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated, Count) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionsPopulated::Count' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BP_OnOptionSelected
// 0x0004 (0x0004 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected) == 0x000004, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected) == 0x000004, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected, Param_Index) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_BP_OnOptionSelected::Param_Index' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.OnCycleButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked) == 0x000008, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked) == 0x000008, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked, Button) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_OnCycleButtonClicked::Button' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged) == 0x000001, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged, bNewInputType) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_HandleInputMethodChanged::bNewInputType' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature, bUsingGamepad) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_BndEvt__CommonActionWidget_K2Node_ComponentBoundEvent_3_OnInputMethodChanged__DelegateSignature::bUsingGamepad' has a wrong offset!");

// Function AthenaMapChallengeCategoryInGameRotator.AthenaMapChallengeCategoryInGameRotator_C.ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator
// 0x0088 (0x0088 - 0x0000)
struct AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70FB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70FC[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Count;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70FD[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_CustomEvent_Button;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70FE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70FF[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButton* Button)>  K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bUsingGamepad;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7100[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator) == 0x000008, "Wrong alignment on AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator");
static_assert(sizeof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator) == 0x000088, "Wrong size on AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, EntryPoint) == 0x000000, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, Temp_bool_Variable) == 0x000020, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_Event_Count) == 0x000024, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_Event_Count' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_Event_Index) == 0x000034, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000040, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_CustomEvent_Button) == 0x000050, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_IsMobileGame_ReturnValue) == 0x000058, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000060, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_GetCurrentInputType_ReturnValue) == 0x000068, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_CustomEvent_bNewInputType) == 0x000069, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_ComponentBoundEvent_bUsingGamepad) == 0x00007C, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_ComponentBoundEvent_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator, K2Node_Select_Default) == 0x000080, "Member 'AthenaMapChallengeCategoryInGameRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryInGameRotator::K2Node_Select_Default' has a wrong offset!");

}

