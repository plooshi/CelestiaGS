#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MangPlayerPawn_Parent

#include "Basic.hpp"
#include "pch.h"

#include "BP_MangPlayerPawn_Parent_classes.hpp"
#include "BP_MangPlayerPawn_Parent_parameters.hpp"


namespace SDK
{

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.ExecuteUbergraph_BP_MangPlayerPawn_Parent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::ExecuteUbergraph_BP_MangPlayerPawn_Parent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "ExecuteUbergraph_BP_MangPlayerPawn_Parent");

	Params::BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "ReceiveEndPlay");

	Params::BP_MangPlayerPawn_Parent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MangPlayerPawn_Parent_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnDeathPlayEffects");

	Params::BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.IdlePatrolVO
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MangPlayerPawn_Parent_C::IdlePatrolVO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "IdlePatrolVO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDBNOStateChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        FortPawn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInIsDBNO                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MangPlayerPawn_Parent_C::OnDBNOStateChanged_Event(class AFortPawn* FortPawn, bool bInIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnDBNOStateChanged_Event");

	Params::BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event Parms{};

	Parms.FortPawn = FortPawn;
	Parms.bInIsDBNO = bInIsDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GameplayCue.Player.Interrogation.Voice.PickedUp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_MangPlayerPawn_Parent_C::GameplayCue_Player_Interrogation_Voice_PickedUp(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "GameplayCue.Player.Interrogation.Voice.PickedUp");

	Params::BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MangPlayerPawn_Parent_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnDeathServer");

	Params::BP_MangPlayerPawn_Parent_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_MangPlayerPawn_Parent_C::BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = move(NormalImpulse);
	Parms.Hit = move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MangPlayerPawn_Parent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_MangPlayerPawn_Parent_C::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnDamageServer");

	Params::BP_MangPlayerPawn_Parent_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnWeaponEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortWeapon*                      PrevWeapon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnWeaponEquipped");

	Params::BP_MangPlayerPawn_Parent_C_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnCharacterCustomizationCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::OnCharacterCustomizationCompleted(class AFortPlayerPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnCharacterCustomizationCompleted");

	Params::BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.UpdatePatrolAnimSet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::UpdatePatrolAnimSet(class AFortWeapon* NewWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "UpdatePatrolAnimSet");

	Params::BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet Parms{};

	Parms.NewWeapon = NewWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnRep_AlertLevel
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MangPlayerPawn_Parent_C::OnRep_AlertLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "OnRep_AlertLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetCurrentFullbodyHitReactionMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     CurrentMontage                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::GetCurrentFullbodyHitReactionMontage(class UAnimMontage** CurrentMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "GetCurrentFullbodyHitReactionMontage");

	Params::BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentMontage != nullptr)
		*CurrentMontage = Parms.CurrentMontage;
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.PlayVoiceComponentSoundByTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SoundBankTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::PlayVoiceComponentSoundByTag(const struct FGameplayTag& SoundBankTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "PlayVoiceComponentSoundByTag");

	Params::BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag Parms{};

	Parms.SoundBankTag = move(SoundBankTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.Set Alerted State Gameplay Cue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Alerted                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MangPlayerPawn_Parent_C::Set_Alerted_State_Gameplay_Cue(bool Alerted, bool Combat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "Set Alerted State Gameplay Cue");

	Params::BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue Parms{};

	Parms.Alerted = Alerted;
	Parms.Combat = Combat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.AlertLevelChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAlertLevel                             Param_OldAlertLevel                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAlertLevel                             NewAlertLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::AlertLevelChanged(EAlertLevel Param_OldAlertLevel, EAlertLevel NewAlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "AlertLevelChanged");

	Params::BP_MangPlayerPawn_Parent_C_AlertLevelChanged Parms{};

	Parms.Param_OldAlertLevel = Param_OldAlertLevel;
	Parms.NewAlertLevel = NewAlertLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.SetAmmoToSpawnOnDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortWorldItemDefinition*         AmmoDefinition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_ShouldDropAmmo                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MangPlayerPawn_Parent_C::SetAmmoToSpawnOnDeath(class UFortWorldItemDefinition* AmmoDefinition, int32 Count, bool Param_ShouldDropAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "SetAmmoToSpawnOnDeath");

	Params::BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath Parms{};

	Parms.AmmoDefinition = AmmoDefinition;
	Parms.Count = Count;
	Parms.Param_ShouldDropAmmo = Param_ShouldDropAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.DebugControlResistanceInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MangPlayerPawn_Parent_C::DebugControlResistanceInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "DebugControlResistanceInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.InitializeAnimInstanceSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MangPlayerPawn_Parent_C::InitializeAnimInstanceSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "InitializeAnimInstanceSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetAdditiveHitReactsMontage
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* ABP_MangPlayerPawn_Parent_C::GetAdditiveHitReactsMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "GetAdditiveHitReactsMontage");

	Params::BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetStateTagFromAlertLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     NewParam                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_MangPlayerPawn_Parent_C::GetStateTagFromAlertLevel(struct FGameplayTag* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MangPlayerPawn_Parent_C", "GetStateTagFromAlertLevel");

	Params::BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = move(Parms.NewParam);
}

}

