#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LGB_MANG_UseFactionScannerDoor

#include "Basic.hpp"

#include "Enum_Athena_S12POI_Wars_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_MANG_Security_ID_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LGB_MANG_UseFactionScannerDoor.LGB_MANG_UseFactionScannerDoor_C
// 0x0048 (0x0278 - 0x0230)
class ALGB_MANG_UseFactionScannerDoor_C final : public AFortAthenaLocalGameplayBehavior
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAthena_FactionSelection_AlterEgo_C*    Athena_FactionSelection_AlterEgo;                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_MANG_Security_ID                         DoorScannerID;                                     // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80F8[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayBeforeScanMin;                                // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeScanMax;                                // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayAfterUnlockedMin;                             // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayAfterUnlockedMax;                             // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80F9[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_Athena_Lock_Scanner_C*             MainFactionScanner;                                // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Athena_FakeLock_Scanner_Interior_C* FakeFactionScanner;                                // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Athena_S12POI_Wars                       POILocation;                                       // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LGB_MANG_UseFactionScannerDoor(int32 EntryPoint);
	void OnDied_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnUnlockedDispatcher_Event();
	void BreakLoop();
	void ReceiveBeginPlay();
	void OnExecute(class AActor* Activator);
	void OnReady_EFA3505D4A86CDC10C24919E49DE134C(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LGB_MANG_UseFactionScannerDoor_C">();
	}
	static class ALGB_MANG_UseFactionScannerDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALGB_MANG_UseFactionScannerDoor_C>();
	}
};
static_assert(alignof(ALGB_MANG_UseFactionScannerDoor_C) == 0x000008, "Wrong alignment on ALGB_MANG_UseFactionScannerDoor_C");
static_assert(sizeof(ALGB_MANG_UseFactionScannerDoor_C) == 0x000278, "Wrong size on ALGB_MANG_UseFactionScannerDoor_C");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, UberGraphFrame) == 0x000230, "Member 'ALGB_MANG_UseFactionScannerDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, TextRender) == 0x000238, "Member 'ALGB_MANG_UseFactionScannerDoor_C::TextRender' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, Athena_FactionSelection_AlterEgo) == 0x000240, "Member 'ALGB_MANG_UseFactionScannerDoor_C::Athena_FactionSelection_AlterEgo' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, DoorScannerID) == 0x000248, "Member 'ALGB_MANG_UseFactionScannerDoor_C::DoorScannerID' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, DelayBeforeScanMin) == 0x00024C, "Member 'ALGB_MANG_UseFactionScannerDoor_C::DelayBeforeScanMin' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, DelayBeforeScanMax) == 0x000250, "Member 'ALGB_MANG_UseFactionScannerDoor_C::DelayBeforeScanMax' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, DelayAfterUnlockedMin) == 0x000254, "Member 'ALGB_MANG_UseFactionScannerDoor_C::DelayAfterUnlockedMin' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, DelayAfterUnlockedMax) == 0x000258, "Member 'ALGB_MANG_UseFactionScannerDoor_C::DelayAfterUnlockedMax' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, MainFactionScanner) == 0x000260, "Member 'ALGB_MANG_UseFactionScannerDoor_C::MainFactionScanner' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, FakeFactionScanner) == 0x000268, "Member 'ALGB_MANG_UseFactionScannerDoor_C::FakeFactionScanner' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_UseFactionScannerDoor_C, POILocation) == 0x000270, "Member 'ALGB_MANG_UseFactionScannerDoor_C::POILocation' has a wrong offset!");

}

