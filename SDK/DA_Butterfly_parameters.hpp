#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DA_Butterfly

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function DA_Butterfly.DA_Butterfly_C.ExecuteUbergraph_DA_Butterfly
// 0x00D8 (0x00D8 - 0x0000)
struct DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6975[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper_2;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0018(0x00B0)()
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper_1;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortDecoHelper*                        K2Node_Event_FortDecoHelper;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly) == 0x000008, "Wrong alignment on DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly");
static_assert(sizeof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly) == 0x0000D8, "Wrong size on DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, EntryPoint) == 0x000000, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::EntryPoint' has a wrong offset!");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, K2Node_Event_FortDecoHelper_2) == 0x000008, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::K2Node_Event_FortDecoHelper_2' has a wrong offset!");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, K2Node_MakeStruct_GameplayEventData) == 0x000018, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, K2Node_Event_FortDecoHelper_1) == 0x0000C8, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::K2Node_Event_FortDecoHelper_1' has a wrong offset!");
static_assert(offsetof(DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly, K2Node_Event_FortDecoHelper) == 0x0000D0, "Member 'DA_Butterfly_C_ExecuteUbergraph_DA_Butterfly::K2Node_Event_FortDecoHelper' has a wrong offset!");

// Function DA_Butterfly.DA_Butterfly_C.BPReleaseSecondaryFire
// 0x0008 (0x0008 - 0x0000)
struct DA_Butterfly_C_BPReleaseSecondaryFire final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_Butterfly_C_BPReleaseSecondaryFire) == 0x000008, "Wrong alignment on DA_Butterfly_C_BPReleaseSecondaryFire");
static_assert(sizeof(DA_Butterfly_C_BPReleaseSecondaryFire) == 0x000008, "Wrong size on DA_Butterfly_C_BPReleaseSecondaryFire");
static_assert(offsetof(DA_Butterfly_C_BPReleaseSecondaryFire, FortDecoHelper) == 0x000000, "Member 'DA_Butterfly_C_BPReleaseSecondaryFire::FortDecoHelper' has a wrong offset!");

// Function DA_Butterfly.DA_Butterfly_C.BPPressTrigger
// 0x0008 (0x0008 - 0x0000)
struct DA_Butterfly_C_BPPressTrigger final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_Butterfly_C_BPPressTrigger) == 0x000008, "Wrong alignment on DA_Butterfly_C_BPPressTrigger");
static_assert(sizeof(DA_Butterfly_C_BPPressTrigger) == 0x000008, "Wrong size on DA_Butterfly_C_BPPressTrigger");
static_assert(offsetof(DA_Butterfly_C_BPPressTrigger, FortDecoHelper) == 0x000000, "Member 'DA_Butterfly_C_BPPressTrigger::FortDecoHelper' has a wrong offset!");

// Function DA_Butterfly.DA_Butterfly_C.BPPressSecondaryFire
// 0x0008 (0x0008 - 0x0000)
struct DA_Butterfly_C_BPPressSecondaryFire final
{
public:
	class AFortDecoHelper*                        FortDecoHelper;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DA_Butterfly_C_BPPressSecondaryFire) == 0x000008, "Wrong alignment on DA_Butterfly_C_BPPressSecondaryFire");
static_assert(sizeof(DA_Butterfly_C_BPPressSecondaryFire) == 0x000008, "Wrong size on DA_Butterfly_C_BPPressSecondaryFire");
static_assert(offsetof(DA_Butterfly_C_BPPressSecondaryFire, FortDecoHelper) == 0x000000, "Member 'DA_Butterfly_C_BPPressSecondaryFire::FortDecoHelper' has a wrong offset!");

}

