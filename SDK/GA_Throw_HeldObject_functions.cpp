#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Throw_HeldObject

#include "Basic.hpp"

#include "GA_Throw_HeldObject_classes.hpp"
#include "GA_Throw_HeldObject_parameters.hpp"


namespace SDK
{

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.ExecuteUbergraph_GA_Throw_HeldObject
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::ExecuteUbergraph_GA_Throw_HeldObject(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "ExecuteUbergraph_GA_Throw_HeldObject");

	Params::GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.OnAbilityInputReleased
// (Event, Protected, BlueprintEvent)

void UGA_Throw_HeldObject_C::OnAbilityInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "OnAbilityInputReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Throw_HeldObject_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.UpdateTrajectory
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::UpdateTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "UpdateTrajectory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.CleanupTrajectoryIndicatorOnUnequip
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::CleanupTrajectoryIndicatorOnUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "CleanupTrajectoryIndicatorOnUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.InitTrajectoryVariables
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::InitTrajectoryVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "InitTrajectoryVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.ThrowProjectile
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::ThrowProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "ThrowProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Throw_HeldObject_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "K2_OnEndAbility");

	Params::GA_Throw_HeldObject_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.AttemptSpawnThrownProjectile
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::AttemptSpawnThrownProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "AttemptSpawnThrownProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.OnFinish_5115EDCE4339523BE389D09CA4A2AECC
// (BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::OnFinish_5115EDCE4339523BE389D09CA4A2AECC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "OnFinish_5115EDCE4339523BE389D09CA4A2AECC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Triggered_9DD11B80484829AF1E8DC5ACFC965E7A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::Triggered_9DD11B80484829AF1E8DC5ACFC965E7A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "Triggered_9DD11B80484829AF1E8DC5ACFC965E7A");

	Params::GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A Parms{};

	Parms.TargetData = move(TargetData);
	Parms.ApplicationTag = move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A");

	Params::GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A Parms{};

	Parms.TargetData = move(TargetData);
	Parms.ApplicationTag = move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Completed_9DD11B80484829AF1E8DC5ACFC965E7A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::Completed_9DD11B80484829AF1E8DC5ACFC965E7A(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "Completed_9DD11B80484829AF1E8DC5ACFC965E7A");

	Params::GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A Parms{};

	Parms.TargetData = move(TargetData);
	Parms.ApplicationTag = move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.PrethrowSetup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::PrethrowSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "PrethrowSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SpawnThrownProjectile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_ProjectileClass                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjectileSpawnLocation                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ProjectileSpawnDirection                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FFortGameplayEffectContainerSpec Param_ExplosionEffectContainerSpec                     (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   ProjectileInitialSpeed                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_ProjectileGravityScale                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortProjectileBase*              Param_SpawnedProjectile                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::SpawnThrownProjectile(class UClass* Param_ProjectileClass, const struct FVector& ProjectileSpawnLocation, const struct FRotator& ProjectileSpawnDirection, const struct FFortGameplayEffectContainerSpec& Param_ExplosionEffectContainerSpec, float ProjectileInitialSpeed, float Param_ProjectileGravityScale, class AFortProjectileBase** Param_SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "SpawnThrownProjectile");

	Params::GA_Throw_HeldObject_C_SpawnThrownProjectile Parms{};

	Parms.Param_ProjectileClass = Param_ProjectileClass;
	Parms.ProjectileSpawnLocation = move(ProjectileSpawnLocation);
	Parms.ProjectileSpawnDirection = move(ProjectileSpawnDirection);
	Parms.Param_ExplosionEffectContainerSpec = move(Param_ExplosionEffectContainerSpec);
	Parms.ProjectileInitialSpeed = ProjectileInitialSpeed;
	Parms.Param_ProjectileGravityScale = Param_ProjectileGravityScale;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SpawnedProjectile != nullptr)
		*Param_SpawnedProjectile = Parms.Param_SpawnedProjectile;
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.OnHeldObjectThrown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortProjectileBase*              Param_SpawnedProjectile                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::OnHeldObjectThrown(class AFortProjectileBase* Param_SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "OnHeldObjectThrown");

	Params::GA_Throw_HeldObject_C_OnHeldObjectThrown Parms{};

	Parms.Param_SpawnedProjectile = Param_SpawnedProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.OnHeldObjectSetup
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::OnHeldObjectSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "OnHeldObjectSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SetupDummyProjectile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::SetupDummyProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "SetupDummyProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.UpdateTrajectorySpline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::UpdateTrajectorySpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "UpdateTrajectorySpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.PostThrowCleanup
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::PostThrowCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "PostThrowCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.CleanupTrajectory
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::CleanupTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "CleanupTrajectory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SetupDummyProjectileSocketed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Throw_HeldObject_C::SetupDummyProjectileSocketed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "SetupDummyProjectileSocketed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.HitValidSocket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    CanSocket                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Throw_HeldObject_C::HitValidSocket(const struct FHitResult& HitResult, bool* CanSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "HitValidSocket");

	Params::GA_Throw_HeldObject_C_HitValidSocket Parms{};

	Parms.HitResult = move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (CanSocket != nullptr)
		*CanSocket = Parms.CanSocket;
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetProjectileTrajectoryPoints
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FVector>                  OutSplinePoints                                        (Parm, OutParm, HasGetValueTypeHash)
// TArray<struct FVector>                  OutSplineTangents                                      (Parm, OutParm, HasGetValueTypeHash)
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_Throw_HeldObject_C::GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "GetProjectileTrajectoryPoints");

	Params::GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSplinePoints != nullptr)
		*OutSplinePoints = move(Parms.OutSplinePoints);

	if (OutSplineTangents != nullptr)
		*OutSplineTangents = move(Parms.OutSplineTangents);

	if (OutHitResult != nullptr)
		*OutHitResult = move(Parms.OutHitResult);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SpawnTrajectoryIndicator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpawnOnEquip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFortProjectileTrajectory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFortProjectileTrajectory* UGA_Throw_HeldObject_C::SpawnTrajectoryIndicator(bool bSpawnOnEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "SpawnTrajectoryIndicator");

	Params::GA_Throw_HeldObject_C_SpawnTrajectoryIndicator Parms{};

	Parms.bSpawnOnEquip = bSpawnOnEquip;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetSpawnLocationAndRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Throw_HeldObject_C::GetSpawnLocationAndRotation(struct FVector* Location, struct FRotator* Rotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "GetSpawnLocationAndRotation");

	Params::GA_Throw_HeldObject_C_GetSpawnLocationAndRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = move(Parms.Rotation);
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetOwningPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Throw_HeldObject_C::GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "GetOwningPlayer");

	Params::GA_Throw_HeldObject_C_GetOwningPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Pawn != nullptr)
		*Player_Pawn = Parms.Player_Pawn;
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetProjectileTrajectoryActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortProjectileTrajectory>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class AFortProjectileTrajectory> UGA_Throw_HeldObject_C::GetProjectileTrajectoryActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "GetProjectileTrajectoryActor");

	Params::GA_Throw_HeldObject_C_GetProjectileTrajectoryActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.ShouldOnlyShowTrajectoryOnUse
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGA_Throw_HeldObject_C::ShouldOnlyShowTrajectoryOnUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Throw_HeldObject_C", "ShouldOnlyShowTrajectoryOnUse");

	Params::GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

