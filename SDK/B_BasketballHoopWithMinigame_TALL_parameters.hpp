#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BasketballHoopWithMinigame_TALL

#include "Basic.hpp"

#include "Struct_BasketballMinigame_State_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_BasketballMinigame_Message_structs.hpp"


namespace SDK::Params
{

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL
// 0x0138 (0x0138 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_887B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_887C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_887D[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ToyBasketball_Base_C*                K2Node_DynamicCast_AsB_Toy_Basketball_Base;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_887E[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_887F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8880[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GradeScore_NumPoints;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GradeScore_TotalDistance;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8881[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AccumulateScore_TotalScore;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL) == 0x000138, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, EntryPoint) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_AsB_Toy_Basketball_Base) == 0x0000B8, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_AsB_Toy_Basketball_Base' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_GetOwner_ReturnValue_1) == 0x0000D0, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x0000D8, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_AsFort_Player_Controller) == 0x0000E8, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_GradeScore_NumPoints) == 0x0000F4, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_GradeScore_NumPoints' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_GradeScore_TotalDistance) == 0x0000F8, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_GradeScore_TotalDistance' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_HasAuthority_ReturnValue) == 0x0000FC, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000FD, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_GetActorUpVector_ReturnValue) == 0x000100, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00010C, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000118, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_AccumulateScore_TotalScore) == 0x000124, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_AccumulateScore_TotalScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'B_BasketballHoopWithMinigame_TALL_C_ExecuteUbergraph_B_BasketballHoopWithMinigame_TALL::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8882[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_BndEvt__HoopTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.ShouldDie
// 0x0020 (0x0020 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_ShouldDie final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8883[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_ShouldDie");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie) == 0x000020, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_ShouldDie");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie, Damage) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_ShouldDie::Damage' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie, EventInstigator) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_ShouldDie::EventInstigator' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie, DamageCauser) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_ShouldDie::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_ShouldDie, ReturnValue) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_ShouldDie::ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.GradeScore
// 0x0048 (0x0048 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_GradeScore final
{
public:
	class AB_ToyBasketball_Base_C*                Ball;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPoints;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDistance;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MetersTraveled;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8884[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8885[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_GradeScore) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_GradeScore");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_GradeScore) == 0x000048, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_GradeScore");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, Ball) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::Ball' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, NumPoints) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::NumPoints' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, TotalDistance) == 0x00000C, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::TotalDistance' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, MetersTraveled) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::MetersTraveled' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, Temp_bool_Variable) == 0x000014, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, Temp_int_Variable) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, Temp_int_Variable_1) == 0x00001C, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, K2Node_Select_Default) == 0x00003C, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, CallFunc_VSizeXY_ReturnValue) == 0x000040, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_GradeScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'B_BasketballHoopWithMinigame_TALL_C_GradeScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.CreateMessage
// 0x0040 (0x0040 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_CreateMessage final
{
public:
	class AFortPlayerState*                       PlayerWhoShot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDistance;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShotScore;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalScore;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8886[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8887[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_BasketballMinigame_Message     K2Node_MakeStruct_Struct_BasketballMinigame_Message; // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_CreateMessage");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage) == 0x000040, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_CreateMessage");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, PlayerWhoShot) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::PlayerWhoShot' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, TotalDistance) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::TotalDistance' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, ShotScore) == 0x00000C, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::ShotScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, TotalScore) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::TotalScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, CallFunc_Add_ByteByte_ReturnValue) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_CreateMessage, K2Node_MakeStruct_Struct_BasketballMinigame_Message) == 0x000028, "Member 'B_BasketballHoopWithMinigame_TALL_C_CreateMessage::K2Node_MakeStruct_Struct_BasketballMinigame_Message' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.OnRep_DisplayMessage
// 0x01B0 (0x01B0 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8888[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortToyContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMessageFeedRelationshipFilter                Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8889[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_PickFormatString_FormatString;            // 0x0018(0x0018)()
	EMessageFeedRelationshipFilter                Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_888A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortToyContext*                        CallFunc_GetContext_ReturnValue_1;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_888B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatPlayerNameForDisplay_ReturnValue;   // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_888C[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0130(0x0040)(HasGetValueTypeHash)
	EMessageFeedRelationshipFilter                K2Node_Select_Default;                             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_888D[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_888E[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0190(0x0018)()
	bool                                          CallFunc_ConditionalPrintToMessageFeed_ReturnValue; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage) == 0x0001B0, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, Temp_bool_Variable) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, Temp_byte_Variable) == 0x000011, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_PickFormatString_FormatString) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_PickFormatString_FormatString' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, Temp_byte_Variable_1) == 0x000030, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_GetContext_ReturnValue_1) == 0x000038, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_FormatPlayerNameForDisplay_ReturnValue) == 0x000050, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_FormatPlayerNameForDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000128, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_Round_ReturnValue) == 0x00012C, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_MakeStruct_FormatArgumentData_3) == 0x000130, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_Select_Default) == 0x000170, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, K2Node_MakeArray_Array) == 0x000178, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_IsValid_ReturnValue_1) == 0x000188, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_Format_ReturnValue) == 0x000190, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage, CallFunc_ConditionalPrintToMessageFeed_ReturnValue) == 0x0001A8, "Member 'B_BasketballHoopWithMinigame_TALL_C_OnRep_DisplayMessage::CallFunc_ConditionalPrintToMessageFeed_ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.AccumulateScore
// 0x0040 (0x0040 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_AccumulateScore final
{
public:
	class AFortPlayerController*                  PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPoints;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_888F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ToyBasketball_Base_C*                Ball;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalScore;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RunningTotal;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSequentialShot_IsSequential;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8890[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsSequentialShot_RunningScore;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_BasketballMinigame_State       Temp_struct_Variable;                              // 0x0028(0x0014)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_AccumulateScore");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore) == 0x000040, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_AccumulateScore");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, PC) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::PC' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, NumPoints) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::NumPoints' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, Ball) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::Ball' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, TotalScore) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::TotalScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, RunningTotal) == 0x00001C, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::RunningTotal' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, CallFunc_IsSequentialShot_IsSequential) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::CallFunc_IsSequentialShot_IsSequential' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, CallFunc_IsSequentialShot_RunningScore) == 0x000024, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::CallFunc_IsSequentialShot_RunningScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, Temp_struct_Variable) == 0x000028, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_AccumulateScore, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_BasketballHoopWithMinigame_TALL_C_AccumulateScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.IsSequentialShot
// 0x0038 (0x0038 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot final
{
public:
	class AFortPlayerController*                  PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ToyBasketball_Base_C*                Ball;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSequential;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8891[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RunningScore;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_BasketballMinigame_State       CallFunc_Map_Find_Value;                           // 0x0018(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8892[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot) == 0x000038, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, PC) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::PC' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, Ball) == 0x000008, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::Ball' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, IsSequential) == 0x000010, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::IsSequential' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, RunningScore) == 0x000014, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::RunningScore' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'B_BasketballHoopWithMinigame_TALL_C_IsSequentialShot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_BasketballHoopWithMinigame_TALL.B_BasketballHoopWithMinigame_TALL_C.PickFormatString
// 0x0050 (0x0050 - 0x0000)
struct B_BasketballHoopWithMinigame_TALL_C_PickFormatString final
{
public:
	class FText                                   FormatString;                                      // 0x0000(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8893[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0020(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0038(0x0018)()
};
static_assert(alignof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString) == 0x000008, "Wrong alignment on B_BasketballHoopWithMinigame_TALL_C_PickFormatString");
static_assert(sizeof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString) == 0x000050, "Wrong size on B_BasketballHoopWithMinigame_TALL_C_PickFormatString");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, FormatString) == 0x000000, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::FormatString' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, Temp_bool_Variable) == 0x000018, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, Temp_bool_Variable_1) == 0x000019, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001A, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, CallFunc_Greater_IntInt_ReturnValue) == 0x00001B, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, K2Node_Select_Default) == 0x000020, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_BasketballHoopWithMinigame_TALL_C_PickFormatString, K2Node_Select_Default_1) == 0x000038, "Member 'B_BasketballHoopWithMinigame_TALL_C_PickFormatString::K2Node_Select_Default_1' has a wrong offset!");

}

