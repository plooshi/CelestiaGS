#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonUI_structs.hpp"
#include "AthenaDragDropAction_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaInventoryPanel.AthenaInventoryPanel_C
// 0x0100 (0x0660 - 0x0560)
class UAthenaInventoryPanel_C final : public UAthenaInventoryPanelBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0560(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeDetails;                                       // 0x0568(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeMessage;                                       // 0x0570(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UAlterationsWidget_C*                   AlterationsWidget;                                 // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaInventoryPerksDisplay_C*         AthenaInventoryPerksDisplay;                       // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_Header;                             // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCloseButton_C*                         CloseButton;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorderMajorTab;                              // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HeaderBackground;                                  // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_FarBackPlate;                                // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemInspectionMainItemDetailsHostPanel_C* ItemDetails;                                       // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_HeaderBacking;                             // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_DetailsPanel;                              // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Details;                               // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuantitySelector_C*                    MulchQuantitySelector;                             // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuantitySelector_C*                    QuantitySelectorWidget;                            // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Input_AthenaMoveItem;                              // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    Input_AthenaDropHalf;                              // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           HackTimer;                                         // 0x0608(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpenedFromVendingMachine;                         // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCreateMode;                                       // 0x0611(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7921[0x2];                                     // 0x0612(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CreativeItemTossDistance;                          // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Playset_Inventory_Widget_Ref;                      // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SelectedTabID;                                     // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CreativeTabID;                                     // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayTabID;                                         // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            MyIslandInventoryWidgetRef;                        // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MyIslandTabID;                                     // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ChannelBrowserAction;                              // 0x0648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bEnableChannelBrowser;                             // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AthenaInventoryPanel(int32 EntryPoint);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnOpenInventoryTab(int32 TabIndex);
	void HandleCloseFromContentBrowser();
	void OnClientExitVolume(class APlayerState* Client, class AFortVolume* Volume);
	void OnClientEnterVolume(class APlayerState* Client, class AFortVolume* Volume);
	void OnQuickbarContentsChanged(EFortQuickBars QuickbarIndex, const TArray<int32>& ChangedSlots);
	void Refresh_Input_for_Current_Major_Tab();
	void BndEvt__TabsMajor_K2Node_ComponentBoundEvent_1_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton);
	void BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature(class FName TabId);
	void PostActivate();
	void RequestEquip(class UFortItem* Item);
	void BP_OnDeactivated();
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void Construct();
	void BP_OnActivated();
	void HandleClose(bool* PassThrough);
	void RegisterBack();
	void TrySetupInputHandling();
	void RegisterDrop();
	void HandleDrop(bool* PassThrough);
	void DropItem(class UFortWorldItem* Item, int32 Quantity);
	void CreateQuantitySelectorWidget(class UFortWorldItem* Item, const class FText& ConfirmationText);
	void DestroyQuantitySelectorWidget();
	void HandleDropItemConfirmationCallback(int32 ChosenQuantity, class UFortItem* Item);
	class UWidget* NavEquipment(EUINavigation Param_Navigation);
	class UWidget* NavResources(EUINavigation Param_Navigation);
	class UWidget* NavAmmo(EUINavigation Param_Navigation);
	void RefreshItemDetails(class UFortItem* ItemToDetail);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void RegisterDropHalf();
	void HandleDropHalf(bool* PassThrough);
	void IsDragOverDropArea(struct FPointerEvent& PointerEvent, bool* bOverDropArea);
	void IsDragItemDroppable(class UObject* DragDropObject, bool* bIsDroppable);
	struct FEventReply OnTouchStarted(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent);
	void DropItemWithDialog(class UFortWorldItem* Item);
	void SelectTab();
	void UpdateSlotVisibility();
	void UpdateStyle(class FName TabId);
	void HandleDirectCloseFromPlaceNow(bool* PassThrough);
	void RegisterChannelBrowser();
	void HandleChannelBrowser(bool* bPassThrough);
	void CloseFromChannelBrowser();
	void ResetPerkInfoDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaInventoryPanel_C">();
	}
	static class UAthenaInventoryPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaInventoryPanel_C>();
	}
};
static_assert(alignof(UAthenaInventoryPanel_C) == 0x000008, "Wrong alignment on UAthenaInventoryPanel_C");
static_assert(sizeof(UAthenaInventoryPanel_C) == 0x000660, "Wrong size on UAthenaInventoryPanel_C");
static_assert(offsetof(UAthenaInventoryPanel_C, UberGraphFrame) == 0x000560, "Member 'UAthenaInventoryPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, FadeDetails) == 0x000568, "Member 'UAthenaInventoryPanel_C::FadeDetails' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, FadeMessage) == 0x000570, "Member 'UAthenaInventoryPanel_C::FadeMessage' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, AlterationsWidget) == 0x000578, "Member 'UAthenaInventoryPanel_C::AlterationsWidget' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, AthenaInventoryPerksDisplay) == 0x000580, "Member 'UAthenaInventoryPanel_C::AthenaInventoryPerksDisplay' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, BackgroundBlur_Header) == 0x000588, "Member 'UAthenaInventoryPanel_C::BackgroundBlur_Header' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, CloseButton) == 0x000590, "Member 'UAthenaInventoryPanel_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, CommonBorderMajorTab) == 0x000598, "Member 'UAthenaInventoryPanel_C::CommonBorderMajorTab' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, HeaderBackground) == 0x0005A0, "Member 'UAthenaInventoryPanel_C::HeaderBackground' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, Image_FarBackPlate) == 0x0005A8, "Member 'UAthenaInventoryPanel_C::Image_FarBackPlate' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, ItemDetails) == 0x0005B0, "Member 'UAthenaInventoryPanel_C::ItemDetails' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, Overlay_HeaderBacking) == 0x0005B8, "Member 'UAthenaInventoryPanel_C::Overlay_HeaderBacking' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, SafeZone_0) == 0x0005C0, "Member 'UAthenaInventoryPanel_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, SizeBox_DetailsPanel) == 0x0005C8, "Member 'UAthenaInventoryPanel_C::SizeBox_DetailsPanel' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, VerticalBox_Details) == 0x0005D0, "Member 'UAthenaInventoryPanel_C::VerticalBox_Details' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, MulchQuantitySelector) == 0x0005D8, "Member 'UAthenaInventoryPanel_C::MulchQuantitySelector' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, QuantitySelectorWidget) == 0x0005E0, "Member 'UAthenaInventoryPanel_C::QuantitySelectorWidget' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, Input_AthenaMoveItem) == 0x0005E8, "Member 'UAthenaInventoryPanel_C::Input_AthenaMoveItem' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, Input_AthenaDropHalf) == 0x0005F8, "Member 'UAthenaInventoryPanel_C::Input_AthenaDropHalf' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, HackTimer) == 0x000608, "Member 'UAthenaInventoryPanel_C::HackTimer' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, bOpenedFromVendingMachine) == 0x000610, "Member 'UAthenaInventoryPanel_C::bOpenedFromVendingMachine' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, bCreateMode) == 0x000611, "Member 'UAthenaInventoryPanel_C::bCreateMode' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, CreativeItemTossDistance) == 0x000614, "Member 'UAthenaInventoryPanel_C::CreativeItemTossDistance' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, Playset_Inventory_Widget_Ref) == 0x000618, "Member 'UAthenaInventoryPanel_C::Playset_Inventory_Widget_Ref' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, SelectedTabID) == 0x000620, "Member 'UAthenaInventoryPanel_C::SelectedTabID' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, CreativeTabID) == 0x000628, "Member 'UAthenaInventoryPanel_C::CreativeTabID' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, PlayTabID) == 0x000630, "Member 'UAthenaInventoryPanel_C::PlayTabID' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, MyIslandInventoryWidgetRef) == 0x000638, "Member 'UAthenaInventoryPanel_C::MyIslandInventoryWidgetRef' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, MyIslandTabID) == 0x000640, "Member 'UAthenaInventoryPanel_C::MyIslandTabID' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, ChannelBrowserAction) == 0x000648, "Member 'UAthenaInventoryPanel_C::ChannelBrowserAction' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPanel_C, bEnableChannelBrowser) == 0x000658, "Member 'UAthenaInventoryPanel_C::bEnableChannelBrowser' has a wrong offset!");

}

