#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Apollo_Donut_Spotlight

#include "Basic.hpp"

#include "Parent_BuildingPropActor_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Apollo_Donut_Spotlight.Apollo_Donut_Spotlight_C
// 0x0068 (0x0D08 - 0x0CA0)
class AApollo_Donut_Spotlight_C : public AParent_BuildingPropActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Apollo_Donut_Spotlight_C;           // 0x0CA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   S_NeoTilted_Spotlight_01;                          // 0x0CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_neo_tilted_light_shaft_Flares;                  // 0x0CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_neo_tilted_light_shaft;                         // 0x0CB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleVfx;                                         // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E90[0x3];                                     // 0x0CC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SpotLightColor;                                    // 0x0CCC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beam_Width_Max;                                    // 0x0CDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_Base;                                        // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_Tip;                                         // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beam_Height;                                       // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Max;                                      // 0x0CEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation_Speed;                                    // 0x0CF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimingOffsetByWPODistanceMult;                     // 0x0CF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshAttached;                                      // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x0D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightMeshEmissiveMult;                         // 0x0D04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Apollo_Donut_Spotlight(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Apollo_Donut_Spotlight_C">();
	}
	static class AApollo_Donut_Spotlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AApollo_Donut_Spotlight_C>();
	}
};
static_assert(alignof(AApollo_Donut_Spotlight_C) == 0x000008, "Wrong alignment on AApollo_Donut_Spotlight_C");
static_assert(sizeof(AApollo_Donut_Spotlight_C) == 0x000D08, "Wrong size on AApollo_Donut_Spotlight_C");
static_assert(offsetof(AApollo_Donut_Spotlight_C, UberGraphFrame_Apollo_Donut_Spotlight_C) == 0x000CA0, "Member 'AApollo_Donut_Spotlight_C::UberGraphFrame_Apollo_Donut_Spotlight_C' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, S_NeoTilted_Spotlight_01) == 0x000CA8, "Member 'AApollo_Donut_Spotlight_C::S_NeoTilted_Spotlight_01' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Sm_neo_tilted_light_shaft_Flares) == 0x000CB0, "Member 'AApollo_Donut_Spotlight_C::Sm_neo_tilted_light_shaft_Flares' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Sm_neo_tilted_light_shaft) == 0x000CB8, "Member 'AApollo_Donut_Spotlight_C::Sm_neo_tilted_light_shaft' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, PointLight) == 0x000CC0, "Member 'AApollo_Donut_Spotlight_C::PointLight' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, ToggleVfx) == 0x000CC8, "Member 'AApollo_Donut_Spotlight_C::ToggleVfx' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, SpotLightColor) == 0x000CCC, "Member 'AApollo_Donut_Spotlight_C::SpotLightColor' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Beam_Width_Max) == 0x000CDC, "Member 'AApollo_Donut_Spotlight_C::Beam_Width_Max' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Scale_Base) == 0x000CE0, "Member 'AApollo_Donut_Spotlight_C::Scale_Base' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Scale_Tip) == 0x000CE4, "Member 'AApollo_Donut_Spotlight_C::Scale_Tip' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Beam_Height) == 0x000CE8, "Member 'AApollo_Donut_Spotlight_C::Beam_Height' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Rotation_Max) == 0x000CEC, "Member 'AApollo_Donut_Spotlight_C::Rotation_Max' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Rotation_Speed) == 0x000CF0, "Member 'AApollo_Donut_Spotlight_C::Rotation_Speed' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, TimingOffsetByWPODistanceMult) == 0x000CF4, "Member 'AApollo_Donut_Spotlight_C::TimingOffsetByWPODistanceMult' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, MeshAttached) == 0x000CF8, "Member 'AApollo_Donut_Spotlight_C::MeshAttached' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, Rotation) == 0x000D00, "Member 'AApollo_Donut_Spotlight_C::Rotation' has a wrong offset!");
static_assert(offsetof(AApollo_Donut_Spotlight_C, SpotlightMeshEmissiveMult) == 0x000D04, "Member 'AApollo_Donut_Spotlight_C::SpotlightMeshEmissiveMult' has a wrong offset!");

}

