#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniChallenges

#include "Basic.hpp"

#include "MiniChallenges_classes.hpp"
#include "MiniChallenges_parameters.hpp"


namespace SDK
{

// Function MiniChallenges.MiniChallenges_C.ExecuteUbergraph_MiniChallenges
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniChallenges_C::ExecuteUbergraph_MiniChallenges(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallenges_C", "ExecuteUbergraph_MiniChallenges");

	Params::MiniChallenges_C_ExecuteUbergraph_MiniChallenges Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniChallenges.MiniChallenges_C.InspectModeEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMiniChallenges_C::InspectModeEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallenges_C", "InspectModeEnabled");

	Params::MiniChallenges_C_InspectModeEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniChallenges.MiniChallenges_C.AddQuestDetails
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             QuestDescription                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   AchivedCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GoalCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniChallenges_C::AddQuestDetails(const class FText& QuestDescription, int32 AchivedCount, int32 GoalCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallenges_C", "AddQuestDetails");

	Params::MiniChallenges_C_AddQuestDetails Parms{};

	Parms.QuestDescription = move(QuestDescription);
	Parms.AchivedCount = AchivedCount;
	Parms.GoalCount = GoalCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniChallenges.MiniChallenges_C.ClearQuestDescriptions
// (Event, Public, BlueprintEvent)

void UMiniChallenges_C::ClearQuestDescriptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallenges_C", "ClearQuestDescriptions");

	UObject::ProcessEvent(Func, nullptr);
}

}

