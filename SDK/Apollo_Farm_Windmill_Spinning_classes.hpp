#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Apollo_Farm_Windmill_Spinning

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Apollo_Farm_Windmill_Spinning.Apollo_Farm_Windmill_Spinning_C
// 0x0070 (0x0C30 - 0x0BC0)
class AApollo_Farm_Windmill_Spinning_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ProjectileBlocker;                                 // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Farm_Windmill_Fan_01_LOD_00;                     // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Windmill_creaking_Cue;                             // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentBladeSpeed;                                 // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewBladeSpeed;                                     // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Left_Spin_Amount;                                  // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Right_Spin_Amount;                                 // 0x0BEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConstantSpin;                                      // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874E[0x3];                                     // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               StartRotation;                                     // 0x0BF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SpinSpeedWhenConstant;                             // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_Accum;                                        // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Initial_wind_mill_rotation;                        // 0x0C08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Z_Rotation_Amount;                                 // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UCurveFloat*                            ZRotationCurve;                                    // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar_0;                                          // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z_rotation_Rate;                                   // 0x0C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Apollo_Farm_Windmill_Spinning(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Apollo_Farm_Windmill_Spinning_C">();
	}
	static class AApollo_Farm_Windmill_Spinning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AApollo_Farm_Windmill_Spinning_C>();
	}
};
static_assert(alignof(AApollo_Farm_Windmill_Spinning_C) == 0x000008, "Wrong alignment on AApollo_Farm_Windmill_Spinning_C");
static_assert(sizeof(AApollo_Farm_Windmill_Spinning_C) == 0x000C30, "Wrong size on AApollo_Farm_Windmill_Spinning_C");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, UberGraphFrame) == 0x000BC0, "Member 'AApollo_Farm_Windmill_Spinning_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, ProjectileBlocker) == 0x000BC8, "Member 'AApollo_Farm_Windmill_Spinning_C::ProjectileBlocker' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, S_Farm_Windmill_Fan_01_LOD_00) == 0x000BD0, "Member 'AApollo_Farm_Windmill_Spinning_C::S_Farm_Windmill_Fan_01_LOD_00' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Windmill_creaking_Cue) == 0x000BD8, "Member 'AApollo_Farm_Windmill_Spinning_C::Windmill_creaking_Cue' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, CurrentBladeSpeed) == 0x000BE0, "Member 'AApollo_Farm_Windmill_Spinning_C::CurrentBladeSpeed' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, NewBladeSpeed) == 0x000BE4, "Member 'AApollo_Farm_Windmill_Spinning_C::NewBladeSpeed' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Left_Spin_Amount) == 0x000BE8, "Member 'AApollo_Farm_Windmill_Spinning_C::Left_Spin_Amount' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Right_Spin_Amount) == 0x000BEC, "Member 'AApollo_Farm_Windmill_Spinning_C::Right_Spin_Amount' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, ConstantSpin) == 0x000BF0, "Member 'AApollo_Farm_Windmill_Spinning_C::ConstantSpin' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, StartRotation) == 0x000BF4, "Member 'AApollo_Farm_Windmill_Spinning_C::StartRotation' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, SpinSpeedWhenConstant) == 0x000C00, "Member 'AApollo_Farm_Windmill_Spinning_C::SpinSpeedWhenConstant' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Time_Accum) == 0x000C04, "Member 'AApollo_Farm_Windmill_Spinning_C::Time_Accum' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Initial_wind_mill_rotation) == 0x000C08, "Member 'AApollo_Farm_Windmill_Spinning_C::Initial_wind_mill_rotation' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Z_Rotation_Amount) == 0x000C14, "Member 'AApollo_Farm_Windmill_Spinning_C::Z_Rotation_Amount' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, ZRotationCurve) == 0x000C18, "Member 'AApollo_Farm_Windmill_Spinning_C::ZRotationCurve' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, NewVar_0) == 0x000C20, "Member 'AApollo_Farm_Windmill_Spinning_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Z_rotation_Rate) == 0x000C24, "Member 'AApollo_Farm_Windmill_Spinning_C::Z_rotation_Rate' has a wrong offset!");
static_assert(offsetof(AApollo_Farm_Windmill_Spinning_C, Rotation) == 0x000C28, "Member 'AApollo_Farm_Windmill_Spinning_C::Rotation' has a wrong offset!");

}

