#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SplineMesh.BP_SplineMesh_C
// 0x0020 (0x0248 - 0x0228)
class ABP_SplineMesh_C final : public ASplineMeshActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSmoothTangent;                                 // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BF0[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tension;                                           // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseScaling;                                        // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BF1[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SplineMesh_C">();
	}
	static class ABP_SplineMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SplineMesh_C>();
	}
};
static_assert(alignof(ABP_SplineMesh_C) == 0x000008, "Wrong alignment on ABP_SplineMesh_C");
static_assert(sizeof(ABP_SplineMesh_C) == 0x000248, "Wrong size on ABP_SplineMesh_C");
static_assert(offsetof(ABP_SplineMesh_C, Spline) == 0x000228, "Member 'ABP_SplineMesh_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_SplineMesh_C, AutoSmoothTangent) == 0x000230, "Member 'ABP_SplineMesh_C::AutoSmoothTangent' has a wrong offset!");
static_assert(offsetof(ABP_SplineMesh_C, Tension) == 0x000234, "Member 'ABP_SplineMesh_C::Tension' has a wrong offset!");
static_assert(offsetof(ABP_SplineMesh_C, UseScaling) == 0x000238, "Member 'ABP_SplineMesh_C::UseScaling' has a wrong offset!");
static_assert(offsetof(ABP_SplineMesh_C, OverrideMaterial) == 0x000240, "Member 'ABP_SplineMesh_C::OverrideMaterial' has a wrong offset!");

}

