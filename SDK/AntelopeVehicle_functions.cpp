#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AntelopeVehicle

#include "Basic.hpp"

#include "AntelopeVehicle_classes.hpp"
#include "AntelopeVehicle_parameters.hpp"


namespace SDK
{

// Function AntelopeVehicle.AntelopeVehicle_C.ExecuteUbergraph_AntelopeVehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::ExecuteUbergraph_AntelopeVehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "ExecuteUbergraph_AntelopeVehicle");

	Params::AntelopeVehicle_C_ExecuteUbergraph_AntelopeVehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.LightningSpark
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::LightningSpark(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "LightningSpark");

	Params::AntelopeVehicle_C_LightningSpark Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = move(Location);
	Parms.Velocity = move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SetHeadlightState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortDayPhase                           PreviousDayPhase                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAtCreation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAntelopeVehicle_C::SetHeadlightState(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SetHeadlightState");

	Params::AntelopeVehicle_C_SetHeadlightState Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.CanHitLastDriver
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::CanHitLastDriver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "CanHitLastDriver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.StopDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::StopDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "StopDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.StartDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::StartDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "StartDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.StartDriverRumble
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::StartDriverRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "StartDriverRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.StopDriverRumble
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::StopDriverRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "StopDriverRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnIsSprintingChanged
// (Event, Protected, BlueprintEvent)

void AAntelopeVehicle_C::OnIsSprintingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnIsSprintingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnPassengerFiredImpulseWeapon
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::OnPassengerFiredImpulseWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnPassengerFiredImpulseWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.StartWaterDamage
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::StartWaterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "StartWaterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnExitedWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnExitedWaterBody(class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnExitedWaterBody");

	Params::AntelopeVehicle_C_OnExitedWaterBody Parms{};

	Parms.WaterBody = WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnEnteredWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              WaterBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnEnteredWaterBody");

	Params::AntelopeVehicle_C_OnEnteredWaterBody Parms{};

	Parms.WaterBody = WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.ApplyWaterDamage
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::ApplyWaterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "ApplyWaterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.EventOnHealthChanged
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::EventOnHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "EventOnHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnHoldExitStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnHoldExitStopped(class AFortPawn* ExitingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnHoldExitStopped");

	Params::AntelopeVehicle_C_OnHoldExitStopped Parms{};

	Parms.ExitingPawn = ExitingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnHoldExitStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExitDuration                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnHoldExitStarted");

	Params::AntelopeVehicle_C_OnHoldExitStarted Parms{};

	Parms.ExitingPawn = ExitingPawn;
	Parms.ExitDuration = ExitDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.ShowCooldownCue
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::ShowCooldownCue(class AFortPlayerPawn* Pawn, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "ShowCooldownCue");

	Params::AntelopeVehicle_C_ShowCooldownCue Parms{};

	Parms.Pawn = Pawn;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnStopTick
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::OnStopTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnStopTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.K2_ApplyCosmeticWrap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaItemWrapDefinition*        LoadedWrap                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "K2_ApplyCosmeticWrap");

	Params::AntelopeVehicle_C_K2_ApplyCosmeticWrap Parms{};

	Parms.LoadedWrap = LoadedWrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.PawnHitByVehicle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactPoint                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVector                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::PawnHitByVehicle(class AFortPawn* Pawn, const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const struct FVector& LaunchVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "PawnHitByVehicle");

	Params::AntelopeVehicle_C_PawnHitByVehicle Parms{};

	Parms.Pawn = Pawn;
	Parms.ImpactPoint = move(ImpactPoint);
	Parms.ImpactNormal = move(ImpactNormal);
	Parms.LaunchVector = move(LaunchVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.PerformHonk
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SpecialHonk                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAntelopeVehicle_C::PerformHonk(bool Param_SpecialHonk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "PerformHonk");

	Params::AntelopeVehicle_C_PerformHonk Parms{};

	Parms.Param_SpecialHonk = Param_SpecialHonk;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.HonkMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SpecialHonk                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAntelopeVehicle_C::HonkMulticast(bool Param_SpecialHonk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "HonkMulticast");

	Params::AntelopeVehicle_C_HonkMulticast Parms{};

	Parms.Param_SpecialHonk = Param_SpecialHonk;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.HonkToServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SpecialHonk                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAntelopeVehicle_C::HonkToServer(bool Param_SpecialHonk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "HonkToServer");

	Params::AntelopeVehicle_C_HonkToServer Parms{};

	Parms.Param_SpecialHonk = Param_SpecialHonk;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SpecialHonkDone
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::SpecialHonkDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SpecialHonkDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnHonk
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::OnHonk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnHonk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.BoostFailed
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::BoostFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "BoostFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SmashedThroughBuildingPiece
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          ImpactPoint                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABuildingActor*                   BuildingHitActor                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::SmashedThroughBuildingPiece(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const class ABuildingActor* BuildingHitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SmashedThroughBuildingPiece");

	Params::AntelopeVehicle_C_SmashedThroughBuildingPiece Parms{};

	Parms.ImpactPoint = move(ImpactPoint);
	Parms.ImpactNormal = move(ImpactNormal);
	Parms.BuildingHitActor = BuildingHitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.NaturalSlideEnd
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::NaturalSlideEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "NaturalSlideEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.NaturalSlideBegin
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::NaturalSlideBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "NaturalSlideBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.CheckWater
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::CheckWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "CheckWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnExitedWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnExitedWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnExitedWaterVolume");

	Params::AntelopeVehicle_C_OnExitedWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnEnteredWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnEnteredWaterVolume");

	Params::AntelopeVehicle_C_OnEnteredWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.Handle Spring Compression Audio
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::Handle_Spring_Compression_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "Handle Spring Compression Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AAntelopeVehicle_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AAntelopeVehicle_C::BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");

	Params::AntelopeVehicle_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = move(NormalImpulse);
	Parms.Hit = move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.NoShake
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::NoShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "NoShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.BoostEnd
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::BoostEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "BoostEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.BoostBegin
// (Event, Public, BlueprintEvent)

void AAntelopeVehicle_C::BoostBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "BoostBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnSpringCompression
// (Event, Protected, BlueprintEvent)

void AAntelopeVehicle_C::OnSpringCompression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnSpringCompression");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "ReceiveEndPlay");

	Params::AntelopeVehicle_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.Update Damage State
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::Update_Damage_State(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "Update Damage State");

	Params::AntelopeVehicle_C_Update_Damage_State Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnPawnExitVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ExitSocketName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnPawnExitVehicle");

	Params::AntelopeVehicle_C_OnPawnExitVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.ExitSocketName = ExitSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnPawnEnterVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SeatIdx                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnPawnEnterVehicle");

	Params::AntelopeVehicle_C_OnPawnEnterVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.SeatIdx = SeatIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.PedalForceFeedback
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::PedalForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "PedalForceFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnCollisionHitEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormalImpulse                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitFrictionImpulse                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        HitSurfaceType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor, EPhysicalSurface HitSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnCollisionHitEffects");

	Params::AntelopeVehicle_C_OnCollisionHitEffects Parms{};

	Parms.HitLocation = move(HitLocation);
	Parms.HitNormalImpulse = move(HitNormalImpulse);
	Parms.HitFrictionImpulse = move(HitFrictionImpulse);
	Parms.HitNormal = move(HitNormal);
	Parms.HitActor = HitActor;
	Parms.HitSurfaceType = HitSurfaceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AAntelopeVehicle_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnDeathPlayEffects");

	Params::AntelopeVehicle_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.AttachWeaponToCart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::AttachWeaponToCart(int32 Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "AttachWeaponToCart");

	Params::AntelopeVehicle_C_AttachWeaponToCart Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.PlayHapticsOnHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HitMagnitude                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::PlayHapticsOnHit(float HitMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "PlayHapticsOnHit");

	Params::AntelopeVehicle_C_PlayHapticsOnHit Parms{};

	Parms.HitMagnitude = HitMagnitude;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnRep_CorrectiveImpulse
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::OnRep_CorrectiveImpulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnRep_CorrectiveImpulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.OnRep_ImpactLocation
// (BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::OnRep_ImpactLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "OnRep_ImpactLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.DestroyOrDamageBuildingPiece
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABuildingActor*                   BuildingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckForHealth                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DestroyThreshold                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::DestroyOrDamageBuildingPiece(class ABuildingActor* BuildingActor, bool CheckForHealth, class UClass* GameplayEffectClass, float DestroyThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "DestroyOrDamageBuildingPiece");

	Params::AntelopeVehicle_C_DestroyOrDamageBuildingPiece Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.CheckForHealth = CheckForHealth;
	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.DestroyThreshold = DestroyThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SendBoostTimeToMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ParameterValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::SendBoostTimeToMaterial(const float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SendBoostTimeToMaterial");

	Params::AntelopeVehicle_C_SendBoostTimeToMaterial Parms{};

	Parms.ParameterValue = ParameterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SendHeadlightStateToMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ParameterValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::SendHeadlightStateToMaterial(const float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SendHeadlightStateToMaterial");

	Params::AntelopeVehicle_C_SendHeadlightStateToMaterial Parms{};

	Parms.ParameterValue = ParameterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SendDamageStateToMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ParameterValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::SendDamageStateToMaterial(const float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SendDamageStateToMaterial");

	Params::AntelopeVehicle_C_SendDamageStateToMaterial Parms{};

	Parms.ParameterValue = ParameterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.SendBoostMeterToMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void AAntelopeVehicle_C::SendBoostMeterToMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "SendBoostMeterToMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AntelopeVehicle.AntelopeVehicle_C.AddCooldownCueEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::AddCooldownCueEvent(class AFortPlayerPawn* Player_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "AddCooldownCueEvent");

	Params::AntelopeVehicle_C_AddCooldownCueEvent Parms{};

	Parms.Player_Pawn = Player_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.RemoveCooldownCueEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::RemoveCooldownCueEvent(class AFortPlayerPawn* Player_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "RemoveCooldownCueEvent");

	Params::AntelopeVehicle_C_RemoveCooldownCueEvent Parms{};

	Parms.Player_Pawn = Player_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AntelopeVehicle.AntelopeVehicle_C.GetIconPlacement
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           SelfActor                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ViewingActor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutExtents                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAntelopeVehicle_C::GetIconPlacement(const class AActor* SelfActor, const class AActor* ViewingActor, struct FVector* OutLocation, struct FVector* OutExtents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntelopeVehicle_C", "GetIconPlacement");

	Params::AntelopeVehicle_C_GetIconPlacement Parms{};

	Parms.SelfActor = SelfActor;
	Parms.ViewingActor = ViewingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = move(Parms.OutLocation);

	if (OutExtents != nullptr)
		*OutExtents = move(Parms.OutExtents);
}

}

