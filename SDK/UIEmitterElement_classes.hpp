#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIEmitterElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIEmitterElement.UIEmitterElement_C
// 0x0088 (0x02B8 - 0x0230)
class UUIEmitterElement_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SpanTranslate;                                     // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Span;                                              // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeToFade;                                        // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0250(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ScaleOut;                                          // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpinCCW;                                           // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpinCW;                                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Twinkle;                                           // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_SizeContainer;                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EmitterMaterial;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Distance;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EmitterBirth;                                      // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EmitterDeath;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         LifeDuration;                                      // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinSpeed;                                         // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EmitterBirth__DelegateSignature();
	void EmitterDeath__DelegateSignature();
	void ExecuteUbergraph_UIEmitterElement(int32 EntryPoint);
	void Construct();
	void StartAnim();
	void EventDestroy();
	void EndofLife();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIEmitterElement_C">();
	}
	static class UUIEmitterElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIEmitterElement_C>();
	}
};
static_assert(alignof(UUIEmitterElement_C) == 0x000008, "Wrong alignment on UUIEmitterElement_C");
static_assert(sizeof(UUIEmitterElement_C) == 0x0002B8, "Wrong size on UUIEmitterElement_C");
static_assert(offsetof(UUIEmitterElement_C, UberGraphFrame) == 0x000230, "Member 'UUIEmitterElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, SpanTranslate) == 0x000238, "Member 'UUIEmitterElement_C::SpanTranslate' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, Span) == 0x000240, "Member 'UUIEmitterElement_C::Span' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, TimeToFade) == 0x000248, "Member 'UUIEmitterElement_C::TimeToFade' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, FadeOut) == 0x000250, "Member 'UUIEmitterElement_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, ScaleOut) == 0x000258, "Member 'UUIEmitterElement_C::ScaleOut' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, SpinCCW) == 0x000260, "Member 'UUIEmitterElement_C::SpinCCW' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, SpinCW) == 0x000268, "Member 'UUIEmitterElement_C::SpinCW' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, Twinkle) == 0x000270, "Member 'UUIEmitterElement_C::Twinkle' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, CommonBorder_SizeContainer) == 0x000278, "Member 'UUIEmitterElement_C::CommonBorder_SizeContainer' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, Image_EmitterMaterial) == 0x000280, "Member 'UUIEmitterElement_C::Image_EmitterMaterial' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, SizeBox_Distance) == 0x000288, "Member 'UUIEmitterElement_C::SizeBox_Distance' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, EmitterBirth) == 0x000290, "Member 'UUIEmitterElement_C::EmitterBirth' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, EmitterDeath) == 0x0002A0, "Member 'UUIEmitterElement_C::EmitterDeath' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, LifeDuration) == 0x0002B0, "Member 'UUIEmitterElement_C::LifeDuration' has a wrong offset!");
static_assert(offsetof(UUIEmitterElement_C, SpinSpeed) == 0x0002B4, "Member 'UUIEmitterElement_C::SpinSpeed' has a wrong offset!");

}

