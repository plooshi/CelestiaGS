#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AlterationWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AlterationWidget.AlterationWidget_C.GetValidLazyTexture
// 0x0060 (0x0060 - 0x0000)
struct AlterationWidget_C_GetValidLazyTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAlterationItemDefinition*          CallFunc_GetAlterationDefintion_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x0038(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_GetValidLazyTexture) == 0x000008, "Wrong alignment on AlterationWidget_C_GetValidLazyTexture");
static_assert(sizeof(AlterationWidget_C_GetValidLazyTexture) == 0x000060, "Wrong size on AlterationWidget_C_GetValidLazyTexture");
static_assert(offsetof(AlterationWidget_C_GetValidLazyTexture, ReturnValue) == 0x000000, "Member 'AlterationWidget_C_GetValidLazyTexture::ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetValidLazyTexture, CallFunc_GetAlterationInfo_ReturnValue) == 0x000028, "Member 'AlterationWidget_C_GetValidLazyTexture::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetValidLazyTexture, CallFunc_GetAlterationDefintion_ReturnValue) == 0x000030, "Member 'AlterationWidget_C_GetValidLazyTexture::CallFunc_GetAlterationDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetValidLazyTexture, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x000038, "Member 'AlterationWidget_C_GetValidLazyTexture::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.HasValidTexture
// 0x0050 (0x0050 - 0x0000)
struct AlterationWidget_C_HasValidTexture final
{
public:
	bool                                          ValidBrush;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAlterationItemDefinition*          CallFunc_GetAlterationDefintion_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AlterationWidget_C_HasValidTexture) == 0x000008, "Wrong alignment on AlterationWidget_C_HasValidTexture");
static_assert(sizeof(AlterationWidget_C_HasValidTexture) == 0x000050, "Wrong size on AlterationWidget_C_HasValidTexture");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, ValidBrush) == 0x000000, "Member 'AlterationWidget_C_HasValidTexture::ValidBrush' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, CallFunc_GetAlterationInfo_ReturnValue) == 0x000008, "Member 'AlterationWidget_C_HasValidTexture::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, CallFunc_GetAlterationDefintion_ReturnValue) == 0x000010, "Member 'AlterationWidget_C_HasValidTexture::CallFunc_GetAlterationDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AlterationWidget_C_HasValidTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x000020, "Member 'AlterationWidget_C_HasValidTexture::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_HasValidTexture, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000048, "Member 'AlterationWidget_C_HasValidTexture::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.IsGamplaySlot
// 0x0010 (0x0010 - 0x0000)
struct AlterationWidget_C_IsGamplaySlot final
{
public:
	class UFortAlterationItemDefinition*          Alteration;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortAlteration                               CallFunc_GetAlterationType_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AlterationWidget_C_IsGamplaySlot) == 0x000008, "Wrong alignment on AlterationWidget_C_IsGamplaySlot");
static_assert(sizeof(AlterationWidget_C_IsGamplaySlot) == 0x000010, "Wrong size on AlterationWidget_C_IsGamplaySlot");
static_assert(offsetof(AlterationWidget_C_IsGamplaySlot, Alteration) == 0x000000, "Member 'AlterationWidget_C_IsGamplaySlot::Alteration' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_IsGamplaySlot, Result) == 0x000008, "Member 'AlterationWidget_C_IsGamplaySlot::Result' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_IsGamplaySlot, CallFunc_GetAlterationType_ReturnValue) == 0x000009, "Member 'AlterationWidget_C_IsGamplaySlot::CallFunc_GetAlterationType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_IsGamplaySlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'AlterationWidget_C_IsGamplaySlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.TriggerTextAnimation
// 0x0008 (0x0008 - 0x0000)
struct AlterationWidget_C_TriggerTextAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_TriggerTextAnimation) == 0x000008, "Wrong alignment on AlterationWidget_C_TriggerTextAnimation");
static_assert(sizeof(AlterationWidget_C_TriggerTextAnimation) == 0x000008, "Wrong size on AlterationWidget_C_TriggerTextAnimation");
static_assert(offsetof(AlterationWidget_C_TriggerTextAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AlterationWidget_C_TriggerTextAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.SetWidgetSettings
// 0x0006 (0x0006 - 0x0000)
struct AlterationWidget_C_SetWidgetSettings final
{
public:
	bool                                          bInIncludeName;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIncludeShortDescription;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIncludeDescription;                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBrushSize                                InIconSize;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseLargeFormatName;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShouldShowRarity;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AlterationWidget_C_SetWidgetSettings) == 0x000001, "Wrong alignment on AlterationWidget_C_SetWidgetSettings");
static_assert(sizeof(AlterationWidget_C_SetWidgetSettings) == 0x000006, "Wrong size on AlterationWidget_C_SetWidgetSettings");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, bInIncludeName) == 0x000000, "Member 'AlterationWidget_C_SetWidgetSettings::bInIncludeName' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, bInIncludeShortDescription) == 0x000001, "Member 'AlterationWidget_C_SetWidgetSettings::bInIncludeShortDescription' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, bInIncludeDescription) == 0x000002, "Member 'AlterationWidget_C_SetWidgetSettings::bInIncludeDescription' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, InIconSize) == 0x000003, "Member 'AlterationWidget_C_SetWidgetSettings::InIconSize' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, bInUseLargeFormatName) == 0x000004, "Member 'AlterationWidget_C_SetWidgetSettings::bInUseLargeFormatName' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetWidgetSettings, InShouldShowRarity) == 0x000005, "Member 'AlterationWidget_C_SetWidgetSettings::InShouldShowRarity' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.InitLockedLayout
// 0x00A0 (0x00A0 - 0x0000)
struct AlterationWidget_C_InitLockedLayout final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFadeAlteration_ReturnValue;         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFadeAlteration_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF2[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequiredLevel_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FF3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	bool                                          CallFunc_ShouldFadeAlteration_ReturnValue_2;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_InitLockedLayout) == 0x000008, "Wrong alignment on AlterationWidget_C_InitLockedLayout");
static_assert(sizeof(AlterationWidget_C_InitLockedLayout) == 0x0000A0, "Wrong size on AlterationWidget_C_InitLockedLayout");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_bool_Variable) == 0x000000, "Member 'AlterationWidget_C_InitLockedLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_byte_Variable) == 0x000001, "Member 'AlterationWidget_C_InitLockedLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_byte_Variable_1) == 0x000002, "Member 'AlterationWidget_C_InitLockedLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_bool_Variable_1) == 0x000003, "Member 'AlterationWidget_C_InitLockedLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_bool_Variable_2) == 0x000004, "Member 'AlterationWidget_C_InitLockedLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_byte_Variable_2) == 0x000005, "Member 'AlterationWidget_C_InitLockedLayout::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, Temp_byte_Variable_3) == 0x000006, "Member 'AlterationWidget_C_InitLockedLayout::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_ShouldFadeAlteration_ReturnValue) == 0x000007, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_ShouldFadeAlteration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, K2Node_Select_Default) == 0x000008, "Member 'AlterationWidget_C_InitLockedLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_ShouldFadeAlteration_ReturnValue_1) == 0x000009, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_ShouldFadeAlteration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_GetAlterationInfo_ReturnValue) == 0x000010, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, K2Node_Select_Default_1) == 0x000018, "Member 'AlterationWidget_C_InitLockedLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_GetRequiredLevel_ReturnValue) == 0x000028, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_GetRequiredLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AlterationWidget_C_InitLockedLayout::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, K2Node_MakeArray_Array) == 0x000070, "Member 'AlterationWidget_C_InitLockedLayout::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_Format_ReturnValue) == 0x000080, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, CallFunc_ShouldFadeAlteration_ReturnValue_2) == 0x000098, "Member 'AlterationWidget_C_InitLockedLayout::CallFunc_ShouldFadeAlteration_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitLockedLayout, K2Node_Select_Default_2) == 0x000099, "Member 'AlterationWidget_C_InitLockedLayout::K2Node_Select_Default_2' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.SetEvolutionDetails
// 0x0020 (0x0020 - 0x0000)
struct AlterationWidget_C_SetEvolutionDetails final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlterationHighlighted_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_SetEvolutionDetails) == 0x000008, "Wrong alignment on AlterationWidget_C_SetEvolutionDetails");
static_assert(sizeof(AlterationWidget_C_SetEvolutionDetails) == 0x000020, "Wrong size on AlterationWidget_C_SetEvolutionDetails");
static_assert(offsetof(AlterationWidget_C_SetEvolutionDetails, Temp_bool_Variable) == 0x000000, "Member 'AlterationWidget_C_SetEvolutionDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetEvolutionDetails, CallFunc_GetAlterationInfo_ReturnValue) == 0x000008, "Member 'AlterationWidget_C_SetEvolutionDetails::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetEvolutionDetails, CallFunc_IsAlterationHighlighted_ReturnValue) == 0x000010, "Member 'AlterationWidget_C_SetEvolutionDetails::CallFunc_IsAlterationHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_SetEvolutionDetails, K2Node_Select_Default) == 0x000018, "Member 'AlterationWidget_C_SetEvolutionDetails::K2Node_Select_Default' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.UpdatePips
// 0x0100 (0x0100 - 0x0000)
struct AlterationWidget_C_UpdatePips final
{
public:
	class UFortAlterationInfo*                    LocalAlterationInfo;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PipMID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FF7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationItemDefinition*          CallFunc_GetAlterationDefintion_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FF8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0038(0x0080)()
	bool                                          Temp_bool_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF9[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue_1;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetCorrespondingItem_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FFA[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationItemDefinition*          CallFunc_GetAlterationDefintion_ReturnValue_1;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortAlteration                               CallFunc_GetAlterationType_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFreeAlterationChoice_ReturnValue;       // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFreeAlterationChoice_ReturnValue_1;     // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlterationHighlighted_ReturnValue;      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FFB[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentPipCount_ReturnValue;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_UpdatePips) == 0x000008, "Wrong alignment on AlterationWidget_C_UpdatePips");
static_assert(sizeof(AlterationWidget_C_UpdatePips) == 0x000100, "Wrong size on AlterationWidget_C_UpdatePips");
static_assert(offsetof(AlterationWidget_C_UpdatePips, LocalAlterationInfo) == 0x000000, "Member 'AlterationWidget_C_UpdatePips::LocalAlterationInfo' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, PipMID) == 0x000008, "Member 'AlterationWidget_C_UpdatePips::PipMID' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, Temp_bool_Variable) == 0x000010, "Member 'AlterationWidget_C_UpdatePips::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetAlterationInfo_ReturnValue) == 0x000018, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, Temp_float_Variable) == 0x000020, "Member 'AlterationWidget_C_UpdatePips::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetAlterationDefintion_ReturnValue) == 0x000028, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetAlterationDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetRarity_ReturnValue) == 0x000030, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_BPGetRarityData_ReturnValue) == 0x000038, "Member 'AlterationWidget_C_UpdatePips::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, Temp_bool_Variable_1) == 0x0000B8, "Member 'AlterationWidget_C_UpdatePips::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetAlterationInfo_ReturnValue_1) == 0x0000C0, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetAlterationInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetCorrespondingItem_ReturnValue) == 0x0000C8, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetCorrespondingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetType_ReturnValue) == 0x0000D0, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetAlterationDefintion_ReturnValue_1) == 0x0000D8, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetAlterationDefintion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'AlterationWidget_C_UpdatePips::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetAlterationType_ReturnValue) == 0x0000E1, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetAlterationType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E2, "Member 'AlterationWidget_C_UpdatePips::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_BooleanOR_ReturnValue) == 0x0000E3, "Member 'AlterationWidget_C_UpdatePips::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_IsFreeAlterationChoice_ReturnValue) == 0x0000E4, "Member 'AlterationWidget_C_UpdatePips::CallFunc_IsFreeAlterationChoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_IsFreeAlterationChoice_ReturnValue_1) == 0x0000E5, "Member 'AlterationWidget_C_UpdatePips::CallFunc_IsFreeAlterationChoice_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_IsAlterationHighlighted_ReturnValue) == 0x0000E6, "Member 'AlterationWidget_C_UpdatePips::CallFunc_IsAlterationHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000E8, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_GetCurrentPipCount_ReturnValue) == 0x0000F0, "Member 'AlterationWidget_C_UpdatePips::CallFunc_GetCurrentPipCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, K2Node_Select_Default) == 0x0000F4, "Member 'AlterationWidget_C_UpdatePips::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F8, "Member 'AlterationWidget_C_UpdatePips::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_UpdatePips, K2Node_Select_Default_1) == 0x0000FC, "Member 'AlterationWidget_C_UpdatePips::K2Node_Select_Default_1' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.InitDescriptiveText
// 0x00C0 (0x00C0 - 0x0000)
struct AlterationWidget_C_InitDescriptiveText final
{
public:
	class UFortAlterationItemDefinition*          AlterationDef;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FFC[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFreeAlterationChoice_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FFD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FFE[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSingleLineDescription_ReturnValue;     // 0x0038(0x0018)()
	class FText                                   CallFunc_GetShortDescription_ReturnValue;          // 0x0050(0x0018)()
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0018)()
	class UFortAlterationItemDefinition*          CallFunc_GetAlterationDefintion_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFadeAlteration_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FFF[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_2;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6000[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_3;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_InitDescriptiveText) == 0x000008, "Wrong alignment on AlterationWidget_C_InitDescriptiveText");
static_assert(sizeof(AlterationWidget_C_InitDescriptiveText) == 0x0000C0, "Wrong size on AlterationWidget_C_InitDescriptiveText");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, AlterationDef) == 0x000000, "Member 'AlterationWidget_C_InitDescriptiveText::AlterationDef' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_bool_Variable) == 0x000008, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable) == 0x000009, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable_1) == 0x00000A, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_bool_Variable_1) == 0x00000B, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable_2) == 0x00000C, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable_3) == 0x00000D, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_bool_Variable_2) == 0x00000E, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable_4) == 0x00000F, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_byte_Variable_5) == 0x000010, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_bool_Variable_3) == 0x000011, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetAlterationInfo_ReturnValue) == 0x000018, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_IsFreeAlterationChoice_ReturnValue) == 0x000020, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_IsFreeAlterationChoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_class_Variable) == 0x000028, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, K2Node_Select_Default) == 0x000031, "Member 'AlterationWidget_C_InitDescriptiveText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetSingleLineDescription_ReturnValue) == 0x000038, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetSingleLineDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetShortDescription_ReturnValue) == 0x000050, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetShortDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetAlterationInfo_ReturnValue_1) == 0x000068, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetAlterationInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_GetAlterationDefintion_ReturnValue) == 0x000088, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_GetAlterationDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, CallFunc_ShouldFadeAlteration_ReturnValue) == 0x000090, "Member 'AlterationWidget_C_InitDescriptiveText::CallFunc_ShouldFadeAlteration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, K2Node_Select_Default_1) == 0x000091, "Member 'AlterationWidget_C_InitDescriptiveText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_class_Variable_1) == 0x000098, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, K2Node_Select_Default_2) == 0x0000A0, "Member 'AlterationWidget_C_InitDescriptiveText::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, Temp_bool_Variable_4) == 0x0000A8, "Member 'AlterationWidget_C_InitDescriptiveText::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, K2Node_Select_Default_3) == 0x0000B0, "Member 'AlterationWidget_C_InitDescriptiveText::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitDescriptiveText, K2Node_Select_Default_4) == 0x0000B8, "Member 'AlterationWidget_C_InitDescriptiveText::K2Node_Select_Default_4' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.InitIcon
// 0x00C0 (0x00C0 - 0x0000)
struct AlterationWidget_C_InitIcon final
{
public:
	class UFortAlterationItemDefinition*          AlterationDef;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidTexture_ValidBrush;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6001[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetValidLazyTexture_ReturnValue;          // 0x0010(0x0028)(HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_ResizeBrush_ResizedBrush;                 // 0x0038(0x0088)()
};
static_assert(alignof(AlterationWidget_C_InitIcon) == 0x000008, "Wrong alignment on AlterationWidget_C_InitIcon");
static_assert(sizeof(AlterationWidget_C_InitIcon) == 0x0000C0, "Wrong size on AlterationWidget_C_InitIcon");
static_assert(offsetof(AlterationWidget_C_InitIcon, AlterationDef) == 0x000000, "Member 'AlterationWidget_C_InitIcon::AlterationDef' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitIcon, CallFunc_HasValidTexture_ValidBrush) == 0x000008, "Member 'AlterationWidget_C_InitIcon::CallFunc_HasValidTexture_ValidBrush' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitIcon, CallFunc_GetValidLazyTexture_ReturnValue) == 0x000010, "Member 'AlterationWidget_C_InitIcon::CallFunc_GetValidLazyTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_InitIcon, CallFunc_ResizeBrush_ResizedBrush) == 0x000038, "Member 'AlterationWidget_C_InitIcon::CallFunc_ResizeBrush_ResizedBrush' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.ShouldFadeAlteration
// 0x0018 (0x0018 - 0x0000)
struct AlterationWidget_C_ShouldFadeAlteration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6002[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlterationUnlocked_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlterationHighlighted_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AlterationWidget_C_ShouldFadeAlteration) == 0x000008, "Wrong alignment on AlterationWidget_C_ShouldFadeAlteration");
static_assert(sizeof(AlterationWidget_C_ShouldFadeAlteration) == 0x000018, "Wrong size on AlterationWidget_C_ShouldFadeAlteration");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, ReturnValue) == 0x000000, "Member 'AlterationWidget_C_ShouldFadeAlteration::ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_GetAlterationInfo_ReturnValue) == 0x000008, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_IsAlterationUnlocked_ReturnValue) == 0x000010, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_IsAlterationUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_IsAlterationHighlighted_ReturnValue) == 0x000011, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_IsAlterationHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_ShouldFadeAlteration, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'AlterationWidget_C_ShouldFadeAlteration::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.GetHighlightColor
// 0x0048 (0x0048 - 0x0000)
struct AlterationWidget_C_GetHighlightColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6003[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6004[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterationInfo*                    CallFunc_GetAlterationInfo_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlterationHighlighted_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6005[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_GetHighlightColor) == 0x000008, "Wrong alignment on AlterationWidget_C_GetHighlightColor");
static_assert(sizeof(AlterationWidget_C_GetHighlightColor) == 0x000048, "Wrong size on AlterationWidget_C_GetHighlightColor");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, ReturnValue) == 0x000000, "Member 'AlterationWidget_C_GetHighlightColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, Temp_bool_Variable) == 0x000010, "Member 'AlterationWidget_C_GetHighlightColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, Temp_struct_Variable) == 0x000014, "Member 'AlterationWidget_C_GetHighlightColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, CallFunc_GetAlterationInfo_ReturnValue) == 0x000028, "Member 'AlterationWidget_C_GetHighlightColor::CallFunc_GetAlterationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, CallFunc_IsAlterationHighlighted_ReturnValue) == 0x000030, "Member 'AlterationWidget_C_GetHighlightColor::CallFunc_IsAlterationHighlighted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AlterationWidget_C_GetHighlightColor, K2Node_Select_Default) == 0x000034, "Member 'AlterationWidget_C_GetHighlightColor::K2Node_Select_Default' has a wrong offset!");

// Function AlterationWidget.AlterationWidget_C.ExecuteUbergraph_AlterationWidget
// 0x0004 (0x0004 - 0x0000)
struct AlterationWidget_C_ExecuteUbergraph_AlterationWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AlterationWidget_C_ExecuteUbergraph_AlterationWidget) == 0x000004, "Wrong alignment on AlterationWidget_C_ExecuteUbergraph_AlterationWidget");
static_assert(sizeof(AlterationWidget_C_ExecuteUbergraph_AlterationWidget) == 0x000004, "Wrong size on AlterationWidget_C_ExecuteUbergraph_AlterationWidget");
static_assert(offsetof(AlterationWidget_C_ExecuteUbergraph_AlterationWidget, EntryPoint) == 0x000000, "Member 'AlterationWidget_C_ExecuteUbergraph_AlterationWidget::EntryPoint' has a wrong offset!");

}

