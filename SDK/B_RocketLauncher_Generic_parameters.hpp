#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RocketLauncher_Generic

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_RocketLauncher_Generic.B_RocketLauncher_Generic_C.ExecuteUbergraph_B_RocketLauncher_Generic
// 0x0094 (0x0094 - 0x0000)
struct B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Persistent_Fire;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78E8[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0008(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic) == 0x000004, "Wrong alignment on B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic");
static_assert(sizeof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic) == 0x000094, "Wrong size on B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic");
static_assert(offsetof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic, EntryPoint) == 0x000000, "Member 'B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic, K2Node_Event_Persistent_Fire) == 0x000004, "Member 'B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic::K2Node_Event_Persistent_Fire' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000005, "Member 'B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000008, "Member 'B_RocketLauncher_Generic_C_ExecuteUbergraph_B_RocketLauncher_Generic::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function B_RocketLauncher_Generic.B_RocketLauncher_Generic_C.Muzzle Flash FX
// 0x0001 (0x0001 - 0x0000)
struct B_RocketLauncher_Generic_C_Muzzle_Flash_FX final
{
public:
	bool                                          Persistent_Fire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_RocketLauncher_Generic_C_Muzzle_Flash_FX) == 0x000001, "Wrong alignment on B_RocketLauncher_Generic_C_Muzzle_Flash_FX");
static_assert(sizeof(B_RocketLauncher_Generic_C_Muzzle_Flash_FX) == 0x000001, "Wrong size on B_RocketLauncher_Generic_C_Muzzle_Flash_FX");
static_assert(offsetof(B_RocketLauncher_Generic_C_Muzzle_Flash_FX, Persistent_Fire) == 0x000000, "Member 'B_RocketLauncher_Generic_C_Muzzle_Flash_FX::Persistent_Fire' has a wrong offset!");

}

