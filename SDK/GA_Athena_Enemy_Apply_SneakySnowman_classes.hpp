#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Enemy_Apply_SneakySnowman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Enemy_Apply_SneakySnowman.GA_Athena_Enemy_Apply_SneakySnowman_C
// 0x0078 (0x0AF0 - 0x0A78)
class UGA_Athena_Enemy_Apply_SneakySnowman_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HolsterSnowman;                                    // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAthena_Enemy_Player_SneakySnowman_C*   EnemySnowman;                                      // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SnowmanDuration;                                   // 0x0A98(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           ExitAnimation;                                     // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EndAbilityTimer;                                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EndAbilitySequenceTimer;                           // 0x0AC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WeaponCheckTimer;                                  // 0x0AD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EquippingCue;                                      // 0x0AD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_TraitVehicle;                                    // 0x0AE0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_MountedTurret;                                   // 0x0AE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_Enemy_Apply_SneakySnowman(int32 EntryPoint);
	void VehicleWeaponCheck();
	void K2_OnEndAbility(bool bWasCancelled);
	void EndAbilitySequence();
	void RestartAbility();
	void EndAbility();
	void K2_ActivateAbility();
	void EventReceived_1D1745F441AF12F5AE3A2498A31BC2AD(const struct FGameplayEventData& Payload);
	void Triggered_1521DF0D4D64DB4FF1C1D6BB8B5153B0(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_1521DF0D4D64DB4FF1C1D6BB8B5153B0(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_1521DF0D4D64DB4FF1C1D6BB8B5153B0(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	bool HasVehicleWeapon_();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Enemy_Apply_SneakySnowman_C">();
	}
	static class UGA_Athena_Enemy_Apply_SneakySnowman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Enemy_Apply_SneakySnowman_C>();
	}
};
static_assert(alignof(UGA_Athena_Enemy_Apply_SneakySnowman_C) == 0x000008, "Wrong alignment on UGA_Athena_Enemy_Apply_SneakySnowman_C");
static_assert(sizeof(UGA_Athena_Enemy_Apply_SneakySnowman_C) == 0x000AF0, "Wrong size on UGA_Athena_Enemy_Apply_SneakySnowman_C");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, PlayerPawn) == 0x000A80, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, HolsterSnowman) == 0x000A88, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::HolsterSnowman' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, EnemySnowman) == 0x000A90, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::EnemySnowman' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, SnowmanDuration) == 0x000A98, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::SnowmanDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, ExitAnimation) == 0x000AB8, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::ExitAnimation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, EndAbilityTimer) == 0x000AC0, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::EndAbilityTimer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, EndAbilitySequenceTimer) == 0x000AC8, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::EndAbilitySequenceTimer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, WeaponCheckTimer) == 0x000AD0, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::WeaponCheckTimer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, EquippingCue) == 0x000AD8, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::EquippingCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, T_TraitVehicle) == 0x000AE0, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::T_TraitVehicle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Enemy_Apply_SneakySnowman_C, T_MountedTurret) == 0x000AE8, "Member 'UGA_Athena_Enemy_Apply_SneakySnowman_C::T_MountedTurret' has a wrong offset!");

}

