#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemSeriesOrRarity

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ItemSeriesOrRarity.ItemSeriesOrRarity_C.UpdateItemDefinition
// 0x0188 (0x0188 - 0x0000)
struct ItemSeriesOrRarity_C_UpdateItemDefinition final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	struct FFortColorPalette                      CallFunc_GetRarityOrSeriesColors_ReturnValue;      // 0x0020(0x0050)(NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A0(0x0028)()
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFD[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x00D0(0x0080)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFE[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FFF[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSeriesOrRarity_C_UpdateItemDefinition) == 0x000008, "Wrong alignment on ItemSeriesOrRarity_C_UpdateItemDefinition");
static_assert(sizeof(ItemSeriesOrRarity_C_UpdateItemDefinition) == 0x000188, "Wrong size on ItemSeriesOrRarity_C_UpdateItemDefinition");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, ItemDefinition) == 0x000000, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::ItemDefinition' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_text_Variable) == 0x000008, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_GetRarityOrSeriesColors_ReturnValue) == 0x000020, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_GetRarityOrSeriesColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_MakeStruct_SlateColor_1) == 0x0000A0, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_GetRarity_ReturnValue) == 0x0000C8, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_BPGetRarityData_ReturnValue) == 0x0000D0, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_2) == 0x000150, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_3) == 0x000151, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_Not_PreBool_ReturnValue) == 0x000152, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable) == 0x000153, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable_1) == 0x000154, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_BooleanAND_ReturnValue) == 0x000155, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default) == 0x000158, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_byte_Variable) == 0x000170, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default_1) == 0x000178, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_byte_Variable_1) == 0x000180, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable_2) == 0x000181, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default_2) == 0x000182, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default_2' has a wrong offset!");

}

