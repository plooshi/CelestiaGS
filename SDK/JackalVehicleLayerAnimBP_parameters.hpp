#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JackalVehicleLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.ExecuteUbergraph_JackalVehicleLayerAnimBP
// 0x0040 (0x0040 - 0x0000)
struct JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B90[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                K2Node_DynamicCast_AsFort_Player_Anim_Instance;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B91[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPreviousFrameAimPitchAndYaw_OutPitch;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPreviousFrameAimPitchAndYaw_OutYaw;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B92[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP) == 0x000008, "Wrong alignment on JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP) == 0x000040, "Wrong size on JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, EntryPoint) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, K2Node_DynamicCast_AsFort_Player_Anim_Instance) == 0x000020, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::K2Node_DynamicCast_AsFort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_GetPreviousFrameAimPitchAndYaw_OutPitch) == 0x00002C, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_GetPreviousFrameAimPitchAndYaw_OutPitch' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_GetPreviousFrameAimPitchAndYaw_OutYaw) == 0x000030, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_GetPreviousFrameAimPitchAndYaw_OutYaw' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP, K2Node_Event_DeltaTimeX) == 0x000038, "Member 'JackalVehicleLayerAnimBP_C_ExecuteUbergraph_JackalVehicleLayerAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicleLayerAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on JackalVehicleLayerAnimBP_C_AnimGraph");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_AnimGraph) == 0x000010, "Wrong size on JackalVehicleLayerAnimBP_C_AnimGraph");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.VehicleLowerBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride final
{
public:
	struct FPoseLink                              InPoseLowerBodyDefault;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperBody;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_VehicleLowerBodyOverride;                    // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000008, "Wrong alignment on JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000030, "Wrong size on JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride, InPoseLowerBodyDefault) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride::InPoseLowerBodyDefault' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride, InPoseUpperBody) == 0x000010, "Member 'JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride::InPoseUpperBody' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride, Param_VehicleLowerBodyOverride) == 0x000020, "Member 'JackalVehicleLayerAnimBP_C_VehicleLowerBodyOverride::Param_VehicleLowerBodyOverride' has a wrong offset!");

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.VehicleFullBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride final
{
public:
	struct FPoseLink                              InPoseFullBody;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerCachePose;                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_VehicleFullBodyOverride;                     // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride) == 0x000008, "Wrong alignment on JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride) == 0x000030, "Wrong size on JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride, InPoseFullBody) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride::InPoseFullBody' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride, InPoseUpperAndLowerCachePose) == 0x000010, "Member 'JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride::InPoseUpperAndLowerCachePose' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride, Param_VehicleFullBodyOverride) == 0x000020, "Member 'JackalVehicleLayerAnimBP_C_VehicleFullBodyOverride::Param_VehicleFullBodyOverride' has a wrong offset!");

// Function JackalVehicleLayerAnimBP.JackalVehicleLayerAnimBP_C.VehicleSplitBodyOverride
// 0x00B0 (0x00B0 - 0x0000)
struct JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride final
{
public:
	struct FPoseLink                              InPoseSplitBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerBody;                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFortAnimInput_TurnInPlace             Param_TurnInPlace;                                 // 0x0020(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPoseLink                              InPoseUpperAndLowerBodyRemoveRoot;                 // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_VehicleSplitBodyOverride;                    // 0x00A0(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride) == 0x000008, "Wrong alignment on JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(sizeof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride) == 0x0000B0, "Wrong size on JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride, InPoseSplitBody) == 0x000000, "Member 'JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride::InPoseSplitBody' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBody) == 0x000010, "Member 'JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBody' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride, Param_TurnInPlace) == 0x000020, "Member 'JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride::Param_TurnInPlace' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBodyRemoveRoot) == 0x000090, "Member 'JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBodyRemoveRoot' has a wrong offset!");
static_assert(offsetof(JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride, Param_VehicleSplitBodyOverride) == 0x0000A0, "Member 'JackalVehicleLayerAnimBP_C_VehicleSplitBodyOverride::Param_VehicleSplitBodyOverride' has a wrong offset!");

}

