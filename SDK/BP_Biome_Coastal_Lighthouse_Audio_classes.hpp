#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Biome_Coastal_Lighthouse_Audio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Biome_Coastal_Lighthouse_Audio.BP_Biome_Coastal_Lighthouse_Audio_C
// 0x0020 (0x0240 - 0x0220)
class ABP_Biome_Coastal_Lighthouse_Audio_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        HornAudio;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLighthouseDead;                                 // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio(int32 EntryPoint);
	void On_Game_Phase_Step_Changed(const TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, const EAthenaGamePhaseStep GamePhaseStep);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Biome_Coastal_Lighthouse_Audio_C">();
	}
	static class ABP_Biome_Coastal_Lighthouse_Audio_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Biome_Coastal_Lighthouse_Audio_C>();
	}
};
static_assert(alignof(ABP_Biome_Coastal_Lighthouse_Audio_C) == 0x000008, "Wrong alignment on ABP_Biome_Coastal_Lighthouse_Audio_C");
static_assert(sizeof(ABP_Biome_Coastal_Lighthouse_Audio_C) == 0x000240, "Wrong size on ABP_Biome_Coastal_Lighthouse_Audio_C");
static_assert(offsetof(ABP_Biome_Coastal_Lighthouse_Audio_C, UberGraphFrame) == 0x000220, "Member 'ABP_Biome_Coastal_Lighthouse_Audio_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Biome_Coastal_Lighthouse_Audio_C, HornAudio) == 0x000228, "Member 'ABP_Biome_Coastal_Lighthouse_Audio_C::HornAudio' has a wrong offset!");
static_assert(offsetof(ABP_Biome_Coastal_Lighthouse_Audio_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Biome_Coastal_Lighthouse_Audio_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Biome_Coastal_Lighthouse_Audio_C, bIsLighthouseDead) == 0x000238, "Member 'ABP_Biome_Coastal_Lighthouse_Audio_C::bIsLighthouseDead' has a wrong offset!");

}

