#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BuildingBar.BuildingBar_C
// 0x00D0 (0x0328 - 0x0258)
class UBuildingBar_C final : public UCommonUserWidget
{
public:
	class UWidgetSwitcher*                        BigHealthSwitcher;                                 // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBigHealthBar_C*                  CommonBigHealthBar;                                // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonHealthBar_C*                     CommonHealthBar;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TrapBox;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 TrapItemCard;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TrapNameTextBlock;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TrapUsesText;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           HP_FadeTimer;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HP_FadeUpdateRate;                                 // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      DisplayMode;                                       // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A13[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Durability_Value;                              // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Durability_Value;                          // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_Baseplate_Color;                           // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_HP_Color_A;                                // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_HP_Color_B;                                // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_HP_Color_C;                                // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Alternate_HP_Color_A;                              // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Alternate_HP_Color_B;                              // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Alternate_HP_Color_C;                              // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Trap_Durability_Text;                         // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A14[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              TemporaryTrapInstance;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update_Max_HP_Value(float Max);
	void Update_Current_HP_Value(float Current);
	void Update_Max_Durability_Value(float Max);
	void Update_Current_Durability_Value(float CurrentDurability);
	void Update_Durability_Text();
	void Set_Display_Mode(EFortBuildingInteraction InDisplayMode);
	void UpdateBuildingTrap(class ABuildingTrap* BuildingTrap);
	void SetBigHealthMode(bool BigHealth);
	void SetBigHealthValue(const class FText& HP_Text);
	void SetBigHealthPercentFill(float Percent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BuildingBar_C">();
	}
	static class UBuildingBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuildingBar_C>();
	}
};
static_assert(alignof(UBuildingBar_C) == 0x000008, "Wrong alignment on UBuildingBar_C");
static_assert(sizeof(UBuildingBar_C) == 0x000328, "Wrong size on UBuildingBar_C");
static_assert(offsetof(UBuildingBar_C, BigHealthSwitcher) == 0x000258, "Member 'UBuildingBar_C::BigHealthSwitcher' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, CommonBigHealthBar) == 0x000260, "Member 'UBuildingBar_C::CommonBigHealthBar' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, CommonHealthBar) == 0x000268, "Member 'UBuildingBar_C::CommonHealthBar' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapBox) == 0x000270, "Member 'UBuildingBar_C::TrapBox' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapItemCard) == 0x000278, "Member 'UBuildingBar_C::TrapItemCard' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapNameTextBlock) == 0x000280, "Member 'UBuildingBar_C::TrapNameTextBlock' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapUsesText) == 0x000288, "Member 'UBuildingBar_C::TrapUsesText' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, HP_FadeTimer) == 0x000290, "Member 'UBuildingBar_C::HP_FadeTimer' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, HP_FadeUpdateRate) == 0x000298, "Member 'UBuildingBar_C::HP_FadeUpdateRate' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, DisplayMode) == 0x00029C, "Member 'UBuildingBar_C::DisplayMode' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Max_Durability_Value) == 0x0002A0, "Member 'UBuildingBar_C::Max_Durability_Value' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Current_Durability_Value) == 0x0002A4, "Member 'UBuildingBar_C::Current_Durability_Value' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_Baseplate_Color) == 0x0002A8, "Member 'UBuildingBar_C::Default_Baseplate_Color' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_HP_Color_A) == 0x0002B8, "Member 'UBuildingBar_C::Default_HP_Color_A' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_HP_Color_B) == 0x0002C8, "Member 'UBuildingBar_C::Default_HP_Color_B' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_HP_Color_C) == 0x0002D8, "Member 'UBuildingBar_C::Default_HP_Color_C' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Alternate_HP_Color_A) == 0x0002E8, "Member 'UBuildingBar_C::Alternate_HP_Color_A' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Alternate_HP_Color_B) == 0x0002F8, "Member 'UBuildingBar_C::Alternate_HP_Color_B' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Alternate_HP_Color_C) == 0x000308, "Member 'UBuildingBar_C::Alternate_HP_Color_C' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Show_Trap_Durability_Text) == 0x000318, "Member 'UBuildingBar_C::Show_Trap_Durability_Text' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TemporaryTrapInstance) == 0x000320, "Member 'UBuildingBar_C::TemporaryTrapInstance' has a wrong offset!");

}

