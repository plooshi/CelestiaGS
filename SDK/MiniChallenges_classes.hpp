#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniChallenges

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MiniChallenges.MiniChallenges_C
// 0x0020 (0x0328 - 0x0308)
class UMiniChallenges_C final : public UAthenaMiniChallenges
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChallengeCountdown_C*                  CountdownTimer;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Header;                                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       MiniChallengeDescriptionsEB;                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MiniChallenges(int32 EntryPoint);
	void InspectModeEnabled(bool bEnabled);
	void AddQuestDetails(const class FText& QuestDescription, int32 AchivedCount, int32 GoalCount);
	void ClearQuestDescriptions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MiniChallenges_C">();
	}
	static class UMiniChallenges_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMiniChallenges_C>();
	}
};
static_assert(alignof(UMiniChallenges_C) == 0x000008, "Wrong alignment on UMiniChallenges_C");
static_assert(sizeof(UMiniChallenges_C) == 0x000328, "Wrong size on UMiniChallenges_C");
static_assert(offsetof(UMiniChallenges_C, UberGraphFrame) == 0x000308, "Member 'UMiniChallenges_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMiniChallenges_C, CountdownTimer) == 0x000310, "Member 'UMiniChallenges_C::CountdownTimer' has a wrong offset!");
static_assert(offsetof(UMiniChallenges_C, Header) == 0x000318, "Member 'UMiniChallenges_C::Header' has a wrong offset!");
static_assert(offsetof(UMiniChallenges_C, MiniChallengeDescriptionsEB) == 0x000320, "Member 'UMiniChallenges_C::MiniChallengeDescriptionsEB' has a wrong offset!");

}

