#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MasterPetAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_MasterPetAnimBP.B_MasterPetAnimBP_C.PetSkeletalControlLayer
// 0x0038 (0x0038 - 0x0000)
struct B_MasterPetAnimBP_C_PetSkeletalControlLayer final
{
public:
	struct FPoseLink                              Pose;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         Param_LookAtOverrideInput;                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_LookAtTargetLocationInput;                   // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_LegIKAlphaOverride;                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_HandIKAlphaOverride;                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              Param_PetSkeletalControlLayer;                     // 0x0028(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(B_MasterPetAnimBP_C_PetSkeletalControlLayer) == 0x000008, "Wrong alignment on B_MasterPetAnimBP_C_PetSkeletalControlLayer");
static_assert(sizeof(B_MasterPetAnimBP_C_PetSkeletalControlLayer) == 0x000038, "Wrong size on B_MasterPetAnimBP_C_PetSkeletalControlLayer");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Pose) == 0x000000, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Pose' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Param_LookAtOverrideInput) == 0x000010, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Param_LookAtOverrideInput' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Param_LookAtTargetLocationInput) == 0x000014, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Param_LookAtTargetLocationInput' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Param_LegIKAlphaOverride) == 0x000020, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Param_LegIKAlphaOverride' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Param_HandIKAlphaOverride) == 0x000024, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Param_HandIKAlphaOverride' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetSkeletalControlLayer, Param_PetSkeletalControlLayer) == 0x000028, "Member 'B_MasterPetAnimBP_C_PetSkeletalControlLayer::Param_PetSkeletalControlLayer' has a wrong offset!");

// Function B_MasterPetAnimBP.B_MasterPetAnimBP_C.PetFullOverrideLayer
// 0x0020 (0x0020 - 0x0000)
struct B_MasterPetAnimBP_C_PetFullOverrideLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_PetFullOverrideLayer;                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(B_MasterPetAnimBP_C_PetFullOverrideLayer) == 0x000008, "Wrong alignment on B_MasterPetAnimBP_C_PetFullOverrideLayer");
static_assert(sizeof(B_MasterPetAnimBP_C_PetFullOverrideLayer) == 0x000020, "Wrong size on B_MasterPetAnimBP_C_PetFullOverrideLayer");
static_assert(offsetof(B_MasterPetAnimBP_C_PetFullOverrideLayer, InPose) == 0x000000, "Member 'B_MasterPetAnimBP_C_PetFullOverrideLayer::InPose' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_PetFullOverrideLayer, Param_PetFullOverrideLayer) == 0x000010, "Member 'B_MasterPetAnimBP_C_PetFullOverrideLayer::Param_PetFullOverrideLayer' has a wrong offset!");

// Function B_MasterPetAnimBP.B_MasterPetAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct B_MasterPetAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(B_MasterPetAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on B_MasterPetAnimBP_C_AnimGraph");
static_assert(sizeof(B_MasterPetAnimBP_C_AnimGraph) == 0x000010, "Wrong size on B_MasterPetAnimBP_C_AnimGraph");
static_assert(offsetof(B_MasterPetAnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'B_MasterPetAnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function B_MasterPetAnimBP.B_MasterPetAnimBP_C.ExecuteUbergraph_B_MasterPetAnimBP
// 0x0010 (0x0010 - 0x0000)
struct B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP) == 0x000004, "Wrong alignment on B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP");
static_assert(sizeof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP) == 0x000010, "Wrong size on B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP");
static_assert(offsetof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP, EntryPoint) == 0x000000, "Member 'B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP, CallFunc_RandomInteger_ReturnValue) == 0x000004, "Member 'B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'B_MasterPetAnimBP_C_ExecuteUbergraph_B_MasterPetAnimBP::CallFunc_Clamp_ReturnValue' has a wrong offset!");

}

