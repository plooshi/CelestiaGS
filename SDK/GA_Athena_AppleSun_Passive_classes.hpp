#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_AppleSun_Passive

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_AppleSun_Passive.GA_Athena_AppleSun_Passive_C
// 0x0108 (0x0B80 - 0x0A78)
class UGA_Athena_AppleSun_Passive_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagRequirements               Falling_Tag;                                       // 0x0A80(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFortWorldItemDefinition*               ItemDef;                                           // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute;                                         // 0x0AC8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          HasFallImmunity;                                   // 0x0B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68AD[0x7];                                     // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ThrowDownMontage;                                  // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAirbagByJumping;                                // 0x0B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Throwing;                                          // 0x0B19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreviousCanAirbag;                                 // 0x0B1A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCloseToGround;                                   // 0x0B1B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TimeSinceGrounded;                                 // 0x0B1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateInterval;                                    // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxVelJumpPrompt;                                  // 0x0B24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinVelJumpPrompt;                                  // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeSinceGroundedForJumpPrompt;                 // 0x0B2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InInventory;                                       // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68AE[0x7];                                     // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               ItemDef_VR;                                        // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Recharging_Tags;                                   // 0x0B40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  VR_tag;                                            // 0x0B60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Athena_AppleSun_Passive(int32 EntryPoint);
	void Remove_Item_From_Inventory_();
	void Throw_Server();
	void UpdateIsCloseToGround();
	void UpdateCanCrashpad();
	void SpawnProjectile();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void Triggered_6CF7877A4087E6390DA1828899D54EFB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_6CF7877A4087E6390DA1828899D54EFB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_6CF7877A4087E6390DA1828899D54EFB(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Triggered_E2E08D9245B8C2437B278CACDF6A674C(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_E2E08D9245B8C2437B278CACDF6A674C(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_E2E08D9245B8C2437B278CACDF6A674C(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void EventReceived_88451BF04FEA60EEE79926856BA05A42(const struct FGameplayEventData& Payload);
	void HasEnoughStacks(bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_AppleSun_Passive_C">();
	}
	static class UGA_Athena_AppleSun_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_AppleSun_Passive_C>();
	}
};
static_assert(alignof(UGA_Athena_AppleSun_Passive_C) == 0x000008, "Wrong alignment on UGA_Athena_AppleSun_Passive_C");
static_assert(sizeof(UGA_Athena_AppleSun_Passive_C) == 0x000B80, "Wrong size on UGA_Athena_AppleSun_Passive_C");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_AppleSun_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, Falling_Tag) == 0x000A80, "Member 'UGA_Athena_AppleSun_Passive_C::Falling_Tag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, ItemDef) == 0x000AC0, "Member 'UGA_Athena_AppleSun_Passive_C::ItemDef' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, Attribute) == 0x000AC8, "Member 'UGA_Athena_AppleSun_Passive_C::Attribute' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, HasFallImmunity) == 0x000B00, "Member 'UGA_Athena_AppleSun_Passive_C::HasFallImmunity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, PlayerPawn) == 0x000B08, "Member 'UGA_Athena_AppleSun_Passive_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, ThrowDownMontage) == 0x000B10, "Member 'UGA_Athena_AppleSun_Passive_C::ThrowDownMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, CanAirbagByJumping) == 0x000B18, "Member 'UGA_Athena_AppleSun_Passive_C::CanAirbagByJumping' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, Throwing) == 0x000B19, "Member 'UGA_Athena_AppleSun_Passive_C::Throwing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, PreviousCanAirbag) == 0x000B1A, "Member 'UGA_Athena_AppleSun_Passive_C::PreviousCanAirbag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, IsCloseToGround) == 0x000B1B, "Member 'UGA_Athena_AppleSun_Passive_C::IsCloseToGround' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, TimeSinceGrounded) == 0x000B1C, "Member 'UGA_Athena_AppleSun_Passive_C::TimeSinceGrounded' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, UpdateInterval) == 0x000B20, "Member 'UGA_Athena_AppleSun_Passive_C::UpdateInterval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, MaxVelJumpPrompt) == 0x000B24, "Member 'UGA_Athena_AppleSun_Passive_C::MaxVelJumpPrompt' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, MinVelJumpPrompt) == 0x000B28, "Member 'UGA_Athena_AppleSun_Passive_C::MinVelJumpPrompt' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, MinTimeSinceGroundedForJumpPrompt) == 0x000B2C, "Member 'UGA_Athena_AppleSun_Passive_C::MinTimeSinceGroundedForJumpPrompt' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, InInventory) == 0x000B30, "Member 'UGA_Athena_AppleSun_Passive_C::InInventory' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, ItemDef_VR) == 0x000B38, "Member 'UGA_Athena_AppleSun_Passive_C::ItemDef_VR' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, Recharging_Tags) == 0x000B40, "Member 'UGA_Athena_AppleSun_Passive_C::Recharging_Tags' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_Passive_C, VR_tag) == 0x000B60, "Member 'UGA_Athena_AppleSun_Passive_C::VR_tag' has a wrong offset!");

}

