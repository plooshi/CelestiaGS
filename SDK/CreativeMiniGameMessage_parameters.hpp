#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeMiniGameMessage

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.GetMinigameHelper
// 0x0040 (0x0040 - 0x0000)
struct CreativeMiniGameMessage_C_GetMinigameHelper final
{
public:
	class AFortVolume*                            VolumeToCheck;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7025[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7026[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigame_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_GetMinigameHelper) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_GetMinigameHelper");
static_assert(sizeof(CreativeMiniGameMessage_C_GetMinigameHelper) == 0x000040, "Wrong size on CreativeMiniGameMessage_C_GetMinigameHelper");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, VolumeToCheck) == 0x000000, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::VolumeToCheck' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, ReturnValue) == 0x000008, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000018, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000028, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_GetMinigameHelper, CallFunc_GetMinigame_ReturnValue) == 0x000038, "Member 'CreativeMiniGameMessage_C_GetMinigameHelper::CallFunc_GetMinigame_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.ShouldRetry
// 0x0040 (0x0040 - 0x0000)
struct CreativeMiniGameMessage_C_ShouldRetry final
{
public:
	bool                                          bShouldRetry;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7027[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7028[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigame_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInPublishedVolume_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7029[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameMessage_C_ShouldRetry) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_ShouldRetry");
static_assert(sizeof(CreativeMiniGameMessage_C_ShouldRetry) == 0x000040, "Wrong size on CreativeMiniGameMessage_C_ShouldRetry");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, bShouldRetry) == 0x000000, "Member 'CreativeMiniGameMessage_C_ShouldRetry::bShouldRetry' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000010, "Member 'CreativeMiniGameMessage_C_ShouldRetry::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CreativeMiniGameMessage_C_ShouldRetry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_GetMinigame_ReturnValue) == 0x000020, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_GetMinigame_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_IsPlayerInPublishedVolume_ReturnValue) == 0x000028, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_IsPlayerInPublishedVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003B, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ShouldRetry, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'CreativeMiniGameMessage_C_ShouldRetry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.FinishVolumeBinding
// 0x0058 (0x0058 - 0x0000)
struct CreativeMiniGameMessage_C_FinishVolumeBinding final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, class FText HUDReasonText)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_702B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameMessage_C_FinishVolumeBinding) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_FinishVolumeBinding");
static_assert(sizeof(CreativeMiniGameMessage_C_FinishVolumeBinding) == 0x000058, "Wrong size on CreativeMiniGameMessage_C_FinishVolumeBinding");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000008, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000048, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, CallFunc_GetVolumeManager_OutIsValid) == 0x000050, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_FinishVolumeBinding, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'CreativeMiniGameMessage_C_FinishVolumeBinding::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.HandleLoadingScreenChanged
// 0x0038 (0x0038 - 0x0000)
struct CreativeMiniGameMessage_C_HandleLoadingScreenChanged final
{
public:
	class AFortPlayerControllerAthena*            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HUDReasonText;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisibilityForPublishedIslands_bIsVisible; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_HandleLoadingScreenChanged");
static_assert(sizeof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged) == 0x000038, "Wrong size on CreativeMiniGameMessage_C_HandleLoadingScreenChanged");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, PlayerController) == 0x000000, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::PlayerController' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, bEnabled) == 0x000008, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::bEnabled' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, HUDReasonText) == 0x000010, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::HUDReasonText' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, CallFunc_GetMinigameHelper_ReturnValue) == 0x000028, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::CallFunc_GetMinigameHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, CallFunc_SetVisibilityForPublishedIslands_bIsVisible) == 0x000031, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::CallFunc_SetVisibilityForPublishedIslands_bIsVisible' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_HandleLoadingScreenChanged, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'CreativeMiniGameMessage_C_HandleLoadingScreenChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.SetVisibilityForPublishedIslands
// 0x0028 (0x0028 - 0x0000)
struct CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands final
{
public:
	class AFortMinigame*                          MinigameToCheck;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ForceRefresh_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702D[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInPublishedVolume_ReturnValue;    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPregame_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands");
static_assert(sizeof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands) == 0x000028, "Wrong size on CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, MinigameToCheck) == 0x000000, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::MinigameToCheck' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, bIsVisible) == 0x000008, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::bIsVisible' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_ForceRefresh_ReturnValue) == 0x000009, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_ForceRefresh_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000018, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_IsPlayerInPublishedVolume_ReturnValue) == 0x000022, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_IsPlayerInPublishedVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_IsPregame_ReturnValue) == 0x000023, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_IsPregame_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'CreativeMiniGameMessage_C_SetVisibilityForPublishedIslands::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.BindMiniGameEvents
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameMessage_C_BindMiniGameEvents final
{
public:
	class AFortVolume*                            MinigameVolume;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_BindMiniGameEvents) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_BindMiniGameEvents");
static_assert(sizeof(CreativeMiniGameMessage_C_BindMiniGameEvents) == 0x000008, "Wrong size on CreativeMiniGameMessage_C_BindMiniGameEvents");
static_assert(offsetof(CreativeMiniGameMessage_C_BindMiniGameEvents, MinigameVolume) == 0x000000, "Member 'CreativeMiniGameMessage_C_BindMiniGameEvents::MinigameVolume' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.OnLeaveIsland
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameMessage_C_OnLeaveIsland final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_OnLeaveIsland) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_OnLeaveIsland");
static_assert(sizeof(CreativeMiniGameMessage_C_OnLeaveIsland) == 0x000008, "Wrong size on CreativeMiniGameMessage_C_OnLeaveIsland");
static_assert(offsetof(CreativeMiniGameMessage_C_OnLeaveIsland, PlayerPawn) == 0x000000, "Member 'CreativeMiniGameMessage_C_OnLeaveIsland::PlayerPawn' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.OnEnterVolume
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameMessage_C_OnEnterVolume final
{
public:
	class APlayerState*                           Client;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            Volume;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_OnEnterVolume) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_OnEnterVolume");
static_assert(sizeof(CreativeMiniGameMessage_C_OnEnterVolume) == 0x000010, "Wrong size on CreativeMiniGameMessage_C_OnEnterVolume");
static_assert(offsetof(CreativeMiniGameMessage_C_OnEnterVolume, Client) == 0x000000, "Member 'CreativeMiniGameMessage_C_OnEnterVolume::Client' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_OnEnterVolume, Volume) == 0x000008, "Member 'CreativeMiniGameMessage_C_OnEnterVolume::Volume' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.OnMinigameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct CreativeMiniGameMessage_C_OnMinigameStateChanged final
{
public:
	class AFortMinigame*                          ChangedMinigame;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            MinigameState;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_OnMinigameStateChanged) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_OnMinigameStateChanged");
static_assert(sizeof(CreativeMiniGameMessage_C_OnMinigameStateChanged) == 0x000010, "Wrong size on CreativeMiniGameMessage_C_OnMinigameStateChanged");
static_assert(offsetof(CreativeMiniGameMessage_C_OnMinigameStateChanged, ChangedMinigame) == 0x000000, "Member 'CreativeMiniGameMessage_C_OnMinigameStateChanged::ChangedMinigame' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_OnMinigameStateChanged, MinigameState) == 0x000008, "Member 'CreativeMiniGameMessage_C_OnMinigameStateChanged::MinigameState' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.UpdateVisibility
// 0x0008 (0x0008 - 0x0000)
struct CreativeMiniGameMessage_C_UpdateVisibility final
{
public:
	class AFortMinigame*                          MinigameToCheck;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreativeMiniGameMessage_C_UpdateVisibility) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_UpdateVisibility");
static_assert(sizeof(CreativeMiniGameMessage_C_UpdateVisibility) == 0x000008, "Wrong size on CreativeMiniGameMessage_C_UpdateVisibility");
static_assert(offsetof(CreativeMiniGameMessage_C_UpdateVisibility, MinigameToCheck) == 0x000000, "Member 'CreativeMiniGameMessage_C_UpdateVisibility::MinigameToCheck' has a wrong offset!");

// Function CreativeMiniGameMessage.CreativeMiniGameMessage_C.ExecuteUbergraph_CreativeMiniGameMessage
// 0x0208 (0x0208 - 0x0000)
struct CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_702E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena_1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue_1; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7030[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7031[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            K2Node_CustomEvent_MinigameVolume;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7032[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_PlayerPawn;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortPlayerPawn* PlayerPawn)> K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7033[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7034[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid_1;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7035[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Client;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            K2Node_CustomEvent_Volume;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue_3;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7036[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameHelper_ReturnValue_4;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetVisibilityForPublishedIslands_bIsVisible; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7037[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7038[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          K2Node_CustomEvent_ChangedMinigame;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            K2Node_CustomEvent_MinigameState;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7039[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena_1; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703A[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, class FText HUDReasonText)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ShouldRetry_bShouldRetry;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703B[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena_2; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703C[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetCurrentVolume_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703D[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          K2Node_CustomEvent_MinigameToCheck;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetVisibilityForPublishedIslands_bIsVisible_1; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703E[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_3;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena_3; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703F[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_4;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena_4; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInReadOnlyVolume_ReturnValue;     // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage) == 0x000008, "Wrong alignment on CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage");
static_assert(sizeof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage) == 0x000208, "Wrong size on CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, EntryPoint) == 0x000000, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000018, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Game_State_Athena_1) == 0x000028, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Game_State_Athena_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue) == 0x000031, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue_1) == 0x000032, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetMinigameHelper_ReturnValue) == 0x000040, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetMinigameHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000048, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, Temp_bool_Variable) == 0x000052, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_MinigameVolume) == 0x000058, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_MinigameVolume' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetMinigameHelper_ReturnValue_1) == 0x000060, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetMinigameHelper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetMinigameHelper_ReturnValue_2) == 0x000068, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetMinigameHelper_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000078, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_PlayerPawn) == 0x000080, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_PlayerPawn' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000098, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetVolumeManager_OutVolumeManager) == 0x0000A0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetVolumeManager_OutIsValid) == 0x0000A8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetVolumeManager_OutVolumeManager_1) == 0x0000B0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetVolumeManager_OutVolumeManager_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetVolumeManager_OutIsValid_1) == 0x0000B8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetVolumeManager_OutIsValid_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_SwitchEnum_CmpSuccess) == 0x0000B9, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000BA, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_Client) == 0x0000C0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_Client' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_Volume) == 0x0000C8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetMinigameHelper_ReturnValue_3) == 0x0000E0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetMinigameHelper_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue_3) == 0x0000E8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetMinigameHelper_ReturnValue_4) == 0x0000F0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetMinigameHelper_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_SetVisibilityForPublishedIslands_bIsVisible) == 0x0000F8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_SetVisibilityForPublishedIslands_bIsVisible' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue_4) == 0x0000F9, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000FC, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_3) == 0x00010C, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000120, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_ChangedMinigame) == 0x000128, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_ChangedMinigame' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_MinigameState) == 0x000130, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_MinigameState' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000138, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Player_Controller_Athena_1) == 0x000140, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Player_Controller_Athena_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_3) == 0x000148, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_4) == 0x00014C, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_5) == 0x00015C, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CreateDelegate_OutputDelegate_6) == 0x00016C, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_ShouldRetry_bShouldRetry) == 0x00017C, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_ShouldRetry_bShouldRetry' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000180, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x000188, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Player_Controller_Athena_2) == 0x000190, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Player_Controller_Athena_2' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_Less_IntInt_ReturnValue) == 0x000199, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetCurrentVolume_ReturnValue) == 0x0001A0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetCurrentVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsValid_ReturnValue_5) == 0x0001A8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_CustomEvent_MinigameToCheck) == 0x0001B0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_CustomEvent_MinigameToCheck' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_SetVisibilityForPublishedIslands_bIsVisible_1) == 0x0001B8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_SetVisibilityForPublishedIslands_bIsVisible_1' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsMobileGame_ReturnValue) == 0x0001B9, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x0001C0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayer_ReturnValue_3) == 0x0001C8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_Select_Default) == 0x0001D0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Player_Controller_Athena_3) == 0x0001E0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Player_Controller_Athena_3' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_5) == 0x0001E8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_GetOwningPlayer_ReturnValue_4) == 0x0001F0, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_GetOwningPlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_AsFort_Player_Controller_Athena_4) == 0x0001F8, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_AsFort_Player_Controller_Athena_4' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, K2Node_DynamicCast_bSuccess_6) == 0x000200, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage, CallFunc_IsPlayerInReadOnlyVolume_ReturnValue) == 0x000201, "Member 'CreativeMiniGameMessage_C_ExecuteUbergraph_CreativeMiniGameMessage::CallFunc_IsPlayerInReadOnlyVolume_ReturnValue' has a wrong offset!");

}

