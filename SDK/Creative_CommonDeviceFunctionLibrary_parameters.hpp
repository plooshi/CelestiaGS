#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Creative_CommonDeviceFunctionLibrary

#include "Basic.hpp"

#include "ECreativeColorSetType_structs.hpp"
#include "EAwardScoreType_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ECreativeTeamColor_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsOnUnpublishedIsland
// 0x0038 (0x0038 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Edit_Mode;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64C9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64CA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForActor_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortVolumeType                               CallFunc_GetFortVolumeType_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland) == 0x000038, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, Actor) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, Edit_Mode) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::Edit_Mode' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_GetVolumeManager_OutIsValid) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_GetVolumeForActor_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_GetVolumeForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_GetFortVolumeType_ReturnValue) == 0x000031, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_GetFortVolumeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsOnUnpublishedIsland::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.AwardScore
// 0x00E0 (0x00E0 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_AwardScore final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAwardScoreType                               Type;                                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64CB[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            Controller;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMinigameLogicComponent*            Minigame_Logic;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0020(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Score;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64CC[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMinigameManager*                   Local_MinigameManager;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64CD[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64CE[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64CF[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D0[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMinigameManager*                   CallFunc_GetMinigameManager_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStatForPlayer_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAwardScoreType                               Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D1[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetSourceAndContextTags_OutSourceTags;    // 0x00A0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_GetSourceAndContextTags_OutContextTags;   // 0x00C0(0x0020)()
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_AwardScore) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_AwardScore");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_AwardScore) == 0x0000E0, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_AwardScore");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Actor) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Score) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Score' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Type) == 0x00000C, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Type' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Controller) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Minigame_Logic) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Minigame_Logic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, TargetTags) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::TargetTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, __WorldContext) == 0x000040, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Local_Score) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Local_Score' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Local_MinigameManager) == 0x000050, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Local_MinigameManager' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Temp_int_Variable) == 0x00005C, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_Multiply_IntInt_ReturnValue) == 0x000060, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000068, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, K2Node_DynamicCast_AsFort_Player_State) == 0x000078, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_GetMinigameManager_ReturnValue) == 0x000088, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_GetMinigameManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_GetStatForPlayer_ReturnValue) == 0x000090, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_GetStatForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, Temp_byte_Variable) == 0x000098, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, K2Node_Select_Default) == 0x00009C, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_GetSourceAndContextTags_OutSourceTags) == 0x0000A0, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_GetSourceAndContextTags_OutSourceTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_AwardScore, CallFunc_GetSourceAndContextTags_OutContextTags) == 0x0000C0, "Member 'Creative_CommonDeviceFunctionLibrary_C_AwardScore::CallFunc_GetSourceAndContextTags_OutContextTags' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsValidTeam
// 0x0020 (0x0020 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsValidTeam final
{
public:
	int32                                         Team_to_Check;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Actor_To_Check;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorPvPTeamIndex_TeamIndex;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorPvPTeamIndex_ReturnValue;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsValidTeam");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam) == 0x000020, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsValidTeam");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, Team_to_Check) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::Team_to_Check' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, Actor_To_Check) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::Actor_To_Check' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, Valid) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::Valid' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001B, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_GetActorPvPTeamIndex_TeamIndex) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_GetActorPvPTeamIndex_TeamIndex' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_GetActorPvPTeamIndex_ReturnValue) == 0x00001D, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_GetActorPvPTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001E, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsValidTeam, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsValidTeam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsEnabledPhaseMatch
// 0x0028 (0x0028 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch final
{
public:
	EFortMinigameState                            State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PhaseIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Actor;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPlayMode_Play_Mode;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch) == 0x000028, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, State) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::State' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, PhaseIndex) == 0x000004, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::PhaseIndex' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, Actor) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, Enabled) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::Enabled' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_MakeLiteralByte_ReturnValue) == 0x00001B, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_Less_ByteByte_ReturnValue) == 0x00001D, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_IsInPlayMode_Play_Mode) == 0x00001E, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_IsInPlayMode_Play_Mode' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001F, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_BooleanAND_ReturnValue_1) == 0x000022, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_BooleanAND_ReturnValue_2) == 0x000023, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch, CallFunc_BooleanOR_ReturnValue_1) == 0x000024, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsEnabledPhaseMatch::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsActivatedOnPhase
// 0x0028 (0x0028 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase final
{
public:
	EFortMinigameState                            State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PhaseIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Actor;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPlayMode_Play_Mode;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase) == 0x000028, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, State) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::State' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, PhaseIndex) == 0x000004, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::PhaseIndex' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, Actor) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, Enabled) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::Enabled' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_IsInPlayMode_Play_Mode) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_IsInPlayMode_Play_Mode' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_MakeLiteralByte_ReturnValue) == 0x00001D, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001E, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001F, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanAND_ReturnValue_1) == 0x000021, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000022, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanAND_ReturnValue_2) == 0x000023, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanAND_ReturnValue_3) == 0x000024, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase, CallFunc_BooleanOR_ReturnValue_1) == 0x000026, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsActivatedOnPhase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.ActorCanTrigger
// 0x00C0 (0x00C0 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger final
{
public:
	class AActor*                                 Actor_To_Check;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Overlap_Component;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTrigger;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            Controller;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_CanTrigger;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DeviceDontTriggerTags;                             // 0x0030(0x0020)(Edit, BlueprintVisible)
	class AController*                            Local_controller;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D7[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D8[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D9[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger) == 0x0000C0, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Actor_To_Check) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Actor_To_Check' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Overlap_Component) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Overlap_Component' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CanTrigger) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CanTrigger' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Controller) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Local_CanTrigger) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Local_CanTrigger' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, DeviceDontTriggerTags) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::DeviceDontTriggerTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Local_controller) == 0x000050, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Local_controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, Temp_object_Variable) == 0x000058, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000070, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000078, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000080, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000090, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_IsValid_ReturnValue_2) == 0x000093, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000098, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_GetDriver_ReturnValue) == 0x0000B0, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0000B8, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'Creative_CommonDeviceFunctionLibrary_C_ActorCanTrigger::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMID
// 0x0038 (0x0038 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_GetMID final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_GetMID) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_GetMID");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_GetMID) == 0x000038, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_GetMID");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, Target) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::Target' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, Mid) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::Mid' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Update Team Color
// 0x0030 (0x0030 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color final
{
public:
	class UFortMinigameLogicComponent*            Minigame_Logic;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMID_MID;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Team_Color_Index_or_Team_Index_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color) == 0x000030, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, Minigame_Logic) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::Minigame_Logic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, Mesh) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::Mesh' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, Team) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::Team' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, __WorldContext) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, CallFunc_GetMID_MID) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::CallFunc_GetMID_MID' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, CallFunc_Get_Team_Color_Index_or_Team_Index_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::CallFunc_Get_Team_Color_Index_or_Team_Index_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Update_Team_Color::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Refresh Team Change Binding
// 0x0030 (0x0030 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding final
{
public:
	class UFortMinigameLogicComponent*            Minigame_Logic;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unbind;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64DB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Event;                                             // 0x000C(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	uint8                                         Pad_64DC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding) == 0x000030, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, Minigame_Logic) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::Minigame_Logic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, Unbind) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::Unbind' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, Event) == 0x00000C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::Event' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, __WorldContext) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, CallFunc_IsDedicatedServer_ReturnValue) == 0x000029, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'Creative_CommonDeviceFunctionLibrary_C_Refresh_Team_Change_Binding::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMID_FromMaterial
// 0x0048 (0x0048 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64DD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     SourceMaterial;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial) == 0x000048, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, Target) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::Target' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, Param_Index) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::Param_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, SourceMaterial) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::SourceMaterial' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, __WorldContext) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, Mid) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::Mid' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMID_FromMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Driver or Pawn Controller
// 0x00A8 (0x00A8 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller final
{
public:
	class AActor*                                 Actor_To_Check;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_Controller;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64DE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            Controller;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  DeviceDontTriggerTags;                             // 0x0020(0x0020)(Edit, BlueprintVisible)
	class AController*                            _Controller;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64DF[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E0[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E1[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E2[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller) == 0x0000A8, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, Actor_To_Check) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::Actor_To_Check' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, Valid_Controller) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::Valid_Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, Controller) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, DeviceDontTriggerTags) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::DeviceDontTriggerTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, _Controller) == 0x000040, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::_Controller' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, Temp_object_Variable) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, K2Node_DynamicCast_AsController) == 0x000050, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000068, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000078, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000088, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller, CallFunc_GetDriver_ReturnValue) == 0x0000A0, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Driver_or_Pawn_Controller::CallFunc_GetDriver_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsInPlayMode
// 0x0038 (0x0038 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Play_Mode;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetVolumeForActor_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadOnly_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode) == 0x000038, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, Actor) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, Play_Mode) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::Play_Mode' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_GetVolumeManager_OutIsValid) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_GetVolumeForActor_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_GetVolumeForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode, CallFunc_IsReadOnly_ReturnValue) == 0x000031, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsInPlayMode::CallFunc_IsReadOnly_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsLocalPawn
// 0x0050 (0x0050 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsLocalPawn;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E5[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E7[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn) == 0x000050, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, Actor) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, Param_IsLocalPawn) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::Param_IsLocalPawn' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_IsDedicatedServer_ReturnValue) == 0x000011, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_Array_Get_Item) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004A, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLocalPawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Team Color Index or Team Index
// 0x0030 (0x0030 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index final
{
public:
	class UFortMinigameLogicComponent*            Minigame_Logic;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team_Index;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64E8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_IndexToTeam_Team;                         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamColorIndex_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E9[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index) == 0x000030, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, Minigame_Logic) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::Minigame_Logic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, Team_Index) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::Team_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, Temp_bool_Variable) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, CallFunc_IndexToTeam_Team) == 0x00001D, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::CallFunc_IndexToTeam_Team' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, CallFunc_IsValid_ReturnValue) == 0x00001E, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, CallFunc_IsValid_ReturnValue_1) == 0x00001F, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, CallFunc_GetTeamColorIndex_ReturnValue) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::CallFunc_GetTeamColorIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index, K2Node_Select_Default) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_or_Team_Index::K2Node_Select_Default' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Team Color Index from Tag
// 0x00F8 (0x00F8 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag final
{
public:
	class AActor*                                 Actor_with_Tag;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          Minigame;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeColorSetType                         Color_Type_Out;                                    // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64EA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Check_Tag;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   GameplayTags;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   GameplayColorTags;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0048(0x0020)()
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64EB[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Dynamic_Team_Color_Array_Index;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Dynamic_Team_Color_Array_Index_1;     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64EC[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64ED[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64EE[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x00D8(0x0020)()
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag) == 0x0000F8, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Actor_with_Tag) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Actor_with_Tag' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Minigame) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Minigame' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, __WorldContext) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Array_Index) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Array_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Color_Type_Out) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Color_Type_Out' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Check_Tag) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Check_Tag' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, GameplayTags) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::GameplayTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, GameplayColorTags) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::GameplayColorTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Temp_struct_Variable) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, K2Node_MakeArray_Array) == 0x000068, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000078, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Temp_int_Array_Index_Variable) == 0x000088, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Array_Get_Item) == 0x000090, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A4, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Max_ReturnValue) == 0x0000A8, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Get_Dynamic_Team_Color_Array_Index) == 0x0000AC, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Get_Dynamic_Team_Color_Array_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Get_Dynamic_Team_Color_Array_Index_1) == 0x0000B0, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Get_Dynamic_Team_Color_Array_Index_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000B4, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x0000B5, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_Array_Find_ReturnValue) == 0x0000B8, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_MatchesTag_ReturnValue) == 0x0000BC, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000BD, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000C0, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0000D8, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Team_Color_Index_from_Tag::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Dynamic Team Color
// 0x0080 (0x0080 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          Minigame;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeColorSetType                         Color_Type;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64EF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   GameplayTags;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   GameplayColorTags;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ECreativeTeamColor                            Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECreativeTeamColor                            Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeTeamColor                            Temp_byte_Variable_2;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F2[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	EFortTeamAffiliation                          Temp_byte_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorPvPTeamIndex_TeamIndex;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorPvPTeamIndex_ReturnValue;         // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeTeamColor                            K2Node_Select_Default;                             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F3[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamColorIndex_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color) == 0x000080, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Actor) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Actor' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Minigame) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Minigame' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Color_Type) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Color_Type' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, __WorldContext) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Array_Index) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Array_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, GameplayTags) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::GameplayTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, GameplayColorTags) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::GameplayColorTags' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Temp_byte_Variable) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000050, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Temp_byte_Variable_1) == 0x000059, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Temp_byte_Variable_2) == 0x00005A, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_MakeLiteralByte_ReturnValue) == 0x00005B, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, K2Node_MakeArray_Array) == 0x000060, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, Temp_byte_Variable_3) == 0x000070, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_GetTeamAffiliation_ReturnValue) == 0x000071, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_GetActorPvPTeamIndex_TeamIndex) == 0x000072, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_GetActorPvPTeamIndex_TeamIndex' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_GetActorPvPTeamIndex_ReturnValue) == 0x000073, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_GetActorPvPTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_Add_ByteByte_ReturnValue) == 0x000074, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, K2Node_Select_Default) == 0x000075, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000078, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color, CallFunc_GetTeamColorIndex_ReturnValue) == 0x00007C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Get_Dynamic_Team_Color::CallFunc_GetTeamColorIndex_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsLogicInPlayMode
// 0x0018 (0x0018 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode final
{
public:
	const class UFortMinigameLogicComponent*      Logic;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Play_Mode;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode) == 0x000018, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, Logic) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::Logic' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, Play_Mode) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::Play_Mode' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode, CallFunc_IsInPlayMode_ReturnValue) == 0x000013, "Member 'Creative_CommonDeviceFunctionLibrary_C_IsLogicInPlayMode::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IndexToTeam
// 0x0018 (0x0018 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_IndexToTeam final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_IndexToTeam");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam) == 0x000018, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_IndexToTeam");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, Param_Index) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::Param_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, Team) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::Team' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, CallFunc_MakeLiteralByte_ReturnValue) == 0x000011, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, CallFunc_Conv_IntToByte_ReturnValue) == 0x000012, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_IndexToTeam, CallFunc_Add_ByteByte_ReturnValue) == 0x000013, "Member 'Creative_CommonDeviceFunctionLibrary_C_IndexToTeam::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.TeamToIndex
// 0x0020 (0x0020 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_TeamToIndex final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64F6[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_TeamToIndex");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex) == 0x000020, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_TeamToIndex");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, Team) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::Team' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, Param_Index) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, CallFunc_MakeLiteralByte_ReturnValue) == 0x000014, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000015, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_TeamToIndex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_TeamToIndex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Animate Float Curve
// 0x0060 (0x0060 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve final
{
public:
	float                                         Delta_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Time;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FCurve;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Animation_Time;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invert_Time;                                       // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64F7[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsComplete;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64F8[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EndTime;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveFloatResult;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeAlpha;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64F9[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64FA[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve) == 0x000060, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Delta_Time) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Delta_Time' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Current_Time) == 0x000004, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Current_Time' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, FCurve) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::FCurve' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Animation_Time) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Animation_Time' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Invert_Time) == 0x000014, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Invert_Time' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, __WorldContext) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Value) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Value' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, bIsComplete) == 0x000024, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::bIsComplete' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, EndTime) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::EndTime' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CurveFloatResult) == 0x00002C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CurveFloatResult' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, TimeAlpha) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::TimeAlpha' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Temp_bool_Variable) == 0x000035, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, K2Node_Select_Default) == 0x000044, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_GetFloatValue_ReturnValue) == 0x00004C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Temp_float_Variable) == 0x000050, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, Temp_bool_Variable_1) == 0x000054, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, K2Node_Select_Default_1) == 0x000058, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Animate_Float_Curve::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Wrapping Modulo
// 0x0028 (0x0028 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         B;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __Result;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo) == 0x000028, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, A) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::A' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, B) == 0x000004, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::B' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, Out) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::Out' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, __Result) == 0x000014, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::__Result' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Wrapping_Modulo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Reattach or Create MID
// 0x0040 (0x0040 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Target_MID;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatId;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64FB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64FC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID) == 0x000040, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, Mesh) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::Mesh' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, Target_MID) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::Target_MID' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, MatId) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::MatId' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, __WorldContext) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'Creative_CommonDeviceFunctionLibrary_C_Reattach_or_Create_MID::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMinigameSettingsMachineForMinigame
// 0x0030 (0x0030 - 0x0000)
struct Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMinigameSettingsMachine_C*             MinigameSettingsMachine;                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigameSettingsBuilding*          CallFunc_GetSettingsActorForVolume_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMinigameSettingsMachine_C*             K2Node_DynamicCast_AsMinigame_Settings_Machine;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame) == 0x000008, "Wrong alignment on Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame");
static_assert(sizeof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame) == 0x000030, "Wrong size on Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, Minigame) == 0x000000, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::Minigame' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, __WorldContext) == 0x000008, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::__WorldContext' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, MinigameSettingsMachine) == 0x000010, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::MinigameSettingsMachine' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, CallFunc_GetSettingsActorForVolume_ReturnValue) == 0x000018, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::CallFunc_GetSettingsActorForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, K2Node_DynamicCast_AsMinigame_Settings_Machine) == 0x000020, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::K2Node_DynamicCast_AsMinigame_Settings_Machine' has a wrong offset!");
static_assert(offsetof(Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Creative_CommonDeviceFunctionLibrary_C_GetMinigameSettingsMachineForMinigame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

