#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_DudeBro_Mini

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_DudeBro_Mini.BGA_DudeBro_Mini_C
// 0x01C0 (0x0970 - 0x07B0)
class ABGA_DudeBro_Mini_C : public AFortAthenaLowGravZone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        LoopingAmbAudio;                                   // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GeyserSteamBottom;                               // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GeyserSteam;                                     // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_FX_GeyserCone;                                   // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CorruptedVent_A;                                // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D; // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D;  // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437E[0x3];                                     // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Grow;                                              // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437F[0x4];                                     // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PrintingEffect;                                    // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RuneAmbientEffect;                                 // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebrisSpawnRateScale;                              // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeSpawnRateScale;                               // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmberSpawnRateScale;                               // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlowSpawnRateScale;                                // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebrisReset;                                       // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4380[0x4];                                     // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TraceGroundIgnoredActors;                          // 0x0830(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsAtRune;                                          // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4381[0x3];                                     // 0x0841(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GroundLocation;                                    // 0x0844(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSafeZone;                                    // 0x0850(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4382[0x3];                                     // 0x0851(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZeroGravPrj;                                       // 0x0854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CubeLookDirection;                                 // 0x0858(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4383[0x4];                                     // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Overlaps;                                          // 0x0868(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 ZapTarget;                                         // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToPlayer;                                 // 0x0880(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEndLocation;                                  // 0x088C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStartLocation;                                // 0x0898(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceMaxDistance;                                  // 0x08A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceHitLocation;                                  // 0x08A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceHitNormal;                                    // 0x08B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        ZapInstigator;                                     // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         CubeZapStrength;                                   // 0x08C8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TraceDown;                                         // 0x08E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4384[0x3];                                     // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Base_Bubbling_Mesh_Color;                          // 0x08EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Geyser_Illuminated_Mesh_Color;                     // 0x08FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x090C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4385[0x3];                                     // 0x090D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GeyserContrast;                                    // 0x0910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpwardLaunchVelocity;                              // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnActivate;                                   // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnDeactivate;                                 // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBoost;                                       // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowEffects;                                      // 0x0929(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDisabled;                                        // 0x092A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          EnabledLive;                                       // 0x092B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Vent_1_loc;                                        // 0x092C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartDisabledOffset;                               // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterLaunchVelocity;                           // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOverride;                                         // 0x0940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          XYOverride;                                        // 0x0941(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4386[0x2];                                     // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SavedConeScale;                                    // 0x0944(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VolcanoCue;                                        // 0x0950(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VentCue;                                           // 0x0958(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 VehicleActor;                                      // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EditParticleSystems;                               // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BGA_DudeBro_Mini(int32 EntryPoint);
	void ReceiveBeginPlay();
	void GeiserTimeout();
	void SetGeiserActive();
	void DeactivateGeyser();
	void ActiveGeyser();
	void BndEvt__S_FX_GeyserCone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__S_FX_GeyserCone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnReady_4FB5731B488F3EF6AE379C861ACDFAB8();
	void Grow__UpdateFunc();
	void Grow__FinishedFunc();
	void UserConstructionScript();
	void ProjEnter(class AFortProjectileBase* Projectile);
	void ProjExit(class AFortProjectileBase* Projectile);
	void ToyEnter(class APhysicsBall_Master_C* Projectile);
	void ToyExit(class APhysicsBall_Master_C* Projectile);
	void OnRep_IsActive();
	void OnRep_isDisabled();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_DudeBro_Mini_C">();
	}
	static class ABGA_DudeBro_Mini_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_DudeBro_Mini_C>();
	}
};
static_assert(alignof(ABGA_DudeBro_Mini_C) == 0x000008, "Wrong alignment on ABGA_DudeBro_Mini_C");
static_assert(sizeof(ABGA_DudeBro_Mini_C) == 0x000970, "Wrong size on ABGA_DudeBro_Mini_C");
static_assert(offsetof(ABGA_DudeBro_Mini_C, UberGraphFrame) == 0x0007B0, "Member 'ABGA_DudeBro_Mini_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, LoopingAmbAudio) == 0x0007B8, "Member 'ABGA_DudeBro_Mini_C::LoopingAmbAudio' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, P_GeyserSteamBottom) == 0x0007C0, "Member 'ABGA_DudeBro_Mini_C::P_GeyserSteamBottom' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, P_GeyserSteam) == 0x0007C8, "Member 'ABGA_DudeBro_Mini_C::P_GeyserSteam' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, S_FX_GeyserCone) == 0x0007D0, "Member 'ABGA_DudeBro_Mini_C::S_FX_GeyserCone' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SM_CorruptedVent_A) == 0x0007D8, "Member 'ABGA_DudeBro_Mini_C::SM_CorruptedVent_A' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Scene) == 0x0007E0, "Member 'ABGA_DudeBro_Mini_C::Scene' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D) == 0x0007E8, "Member 'ABGA_DudeBro_Mini_C::Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D) == 0x0007EC, "Member 'ABGA_DudeBro_Mini_C::Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow) == 0x0007F0, "Member 'ABGA_DudeBro_Mini_C::Grow' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Gravity) == 0x0007F8, "Member 'ABGA_DudeBro_Mini_C::Gravity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, MeshComponent) == 0x000800, "Member 'ABGA_DudeBro_Mini_C::MeshComponent' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, PrintingEffect) == 0x000808, "Member 'ABGA_DudeBro_Mini_C::PrintingEffect' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, RuneAmbientEffect) == 0x000810, "Member 'ABGA_DudeBro_Mini_C::RuneAmbientEffect' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DebrisSpawnRateScale) == 0x000818, "Member 'ABGA_DudeBro_Mini_C::DebrisSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SmokeSpawnRateScale) == 0x00081C, "Member 'ABGA_DudeBro_Mini_C::SmokeSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EmberSpawnRateScale) == 0x000820, "Member 'ABGA_DudeBro_Mini_C::EmberSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GlowSpawnRateScale) == 0x000824, "Member 'ABGA_DudeBro_Mini_C::GlowSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DebrisReset) == 0x000828, "Member 'ABGA_DudeBro_Mini_C::DebrisReset' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceGroundIgnoredActors) == 0x000830, "Member 'ABGA_DudeBro_Mini_C::TraceGroundIgnoredActors' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsAtRune) == 0x000840, "Member 'ABGA_DudeBro_Mini_C::IsAtRune' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GroundLocation) == 0x000844, "Member 'ABGA_DudeBro_Mini_C::GroundLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EnableSafeZone) == 0x000850, "Member 'ABGA_DudeBro_Mini_C::EnableSafeZone' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZeroGravPrj) == 0x000854, "Member 'ABGA_DudeBro_Mini_C::ZeroGravPrj' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CubeLookDirection) == 0x000858, "Member 'ABGA_DudeBro_Mini_C::CubeLookDirection' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Overlaps) == 0x000868, "Member 'ABGA_DudeBro_Mini_C::Overlaps' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZapTarget) == 0x000878, "Member 'ABGA_DudeBro_Mini_C::ZapTarget' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DirectionToPlayer) == 0x000880, "Member 'ABGA_DudeBro_Mini_C::DirectionToPlayer' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceEndLocation) == 0x00088C, "Member 'ABGA_DudeBro_Mini_C::TraceEndLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceStartLocation) == 0x000898, "Member 'ABGA_DudeBro_Mini_C::TraceStartLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceMaxDistance) == 0x0008A4, "Member 'ABGA_DudeBro_Mini_C::TraceMaxDistance' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceHitLocation) == 0x0008A8, "Member 'ABGA_DudeBro_Mini_C::TraceHitLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceHitNormal) == 0x0008B4, "Member 'ABGA_DudeBro_Mini_C::TraceHitNormal' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZapInstigator) == 0x0008C0, "Member 'ABGA_DudeBro_Mini_C::ZapInstigator' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CubeZapStrength) == 0x0008C8, "Member 'ABGA_DudeBro_Mini_C::CubeZapStrength' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceDown) == 0x0008E8, "Member 'ABGA_DudeBro_Mini_C::TraceDown' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Base_Bubbling_Mesh_Color) == 0x0008EC, "Member 'ABGA_DudeBro_Mini_C::Base_Bubbling_Mesh_Color' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Geyser_Illuminated_Mesh_Color) == 0x0008FC, "Member 'ABGA_DudeBro_Mini_C::Geyser_Illuminated_Mesh_Color' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsActive) == 0x00090C, "Member 'ABGA_DudeBro_Mini_C::IsActive' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GeyserContrast) == 0x000910, "Member 'ABGA_DudeBro_Mini_C::GeyserContrast' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, UpwardLaunchVelocity) == 0x000914, "Member 'ABGA_DudeBro_Mini_C::UpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SoundOnActivate) == 0x000918, "Member 'ABGA_DudeBro_Mini_C::SoundOnActivate' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SoundOnDeactivate) == 0x000920, "Member 'ABGA_DudeBro_Mini_C::SoundOnDeactivate' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ShouldBoost) == 0x000928, "Member 'ABGA_DudeBro_Mini_C::ShouldBoost' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, AllowEffects) == 0x000929, "Member 'ABGA_DudeBro_Mini_C::AllowEffects' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsDisabled) == 0x00092A, "Member 'ABGA_DudeBro_Mini_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EnabledLive) == 0x00092B, "Member 'ABGA_DudeBro_Mini_C::EnabledLive' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Vent_1_loc) == 0x00092C, "Member 'ABGA_DudeBro_Mini_C::Vent_1_loc' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, StartDisabledOffset) == 0x000938, "Member 'ABGA_DudeBro_Mini_C::StartDisabledOffset' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CharacterLaunchVelocity) == 0x00093C, "Member 'ABGA_DudeBro_Mini_C::CharacterLaunchVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZOverride) == 0x000940, "Member 'ABGA_DudeBro_Mini_C::ZOverride' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, XYOverride) == 0x000941, "Member 'ABGA_DudeBro_Mini_C::XYOverride' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SavedConeScale) == 0x000944, "Member 'ABGA_DudeBro_Mini_C::SavedConeScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VolcanoCue) == 0x000950, "Member 'ABGA_DudeBro_Mini_C::VolcanoCue' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VentCue) == 0x000958, "Member 'ABGA_DudeBro_Mini_C::VentCue' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VehicleActor) == 0x000960, "Member 'ABGA_DudeBro_Mini_C::VehicleActor' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EditParticleSystems) == 0x000968, "Member 'ABGA_DudeBro_Mini_C::EditParticleSystems' has a wrong offset!");

}

