#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemCollection_Touch_Vehicle

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemCollection_Touch_Vehicle.BP_ItemCollection_Touch_Vehicle_C.ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle
// 0x0108 (0x0108 - 0x0000)
struct BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D64[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_OverlappedComponent;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OtherBodyIndex;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSweep;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D65[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_SweepResult;                          // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D66[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue;             // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D67[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D68[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D69[0x1];                                     // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle) == 0x000008, "Wrong alignment on BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle");
static_assert(sizeof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle) == 0x000108, "Wrong size on BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, EntryPoint) == 0x000000, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_OverlappedComponent) == 0x000008, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_OtherActor) == 0x000010, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_OtherComp) == 0x000018, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_OtherBodyIndex) == 0x000020, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_bFromSweep) == 0x000024, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_Event_SweepResult) == 0x000028, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_Event_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x0000B8, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_GetAllPassengers_ReturnValue) == 0x0000C8, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_GetAllPassengers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0000E0, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000F0, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_IsInVehicle_ReturnValue) == 0x0000FA, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_ItemCollection_Touch_Vehicle_C_ExecuteUbergraph_BP_ItemCollection_Touch_Vehicle::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ItemCollection_Touch_Vehicle.BP_ItemCollection_Touch_Vehicle_C.Collected
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ItemCollection_Touch_Vehicle_C_Collected final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D6A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ItemCollection_Touch_Vehicle_C_Collected) == 0x000008, "Wrong alignment on BP_ItemCollection_Touch_Vehicle_C_Collected");
static_assert(sizeof(BP_ItemCollection_Touch_Vehicle_C_Collected) == 0x0000B0, "Wrong size on BP_ItemCollection_Touch_Vehicle_C_Collected");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, OverlappedComponent) == 0x000000, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, OtherActor) == 0x000008, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, OtherComp) == 0x000010, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, OtherBodyIndex) == 0x000018, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, bFromSweep) == 0x00001C, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ItemCollection_Touch_Vehicle_C_Collected, SweepResult) == 0x000020, "Member 'BP_ItemCollection_Touch_Vehicle_C_Collected::SweepResult' has a wrong offset!");

}

