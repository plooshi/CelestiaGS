#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestVisual_XPCoin_Hidden

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C
// 0x0248 (0x0470 - 0x0228)
class AQuestVisual_XPCoin_Hidden_C final : public AQuestVisual
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Trail;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowMesh;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SpinOverlap;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Light;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_0_Scale_3C8E777547B12BBB8819849BBFBD91C0; // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Rotation_3C8E777547B12BBB8819849BBFBD91C0; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_HeightPath_3C8E777547B12BBB8819849BBFBD91C0; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_3C8E777547B12BBB8819849BBFBD91C0; // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85BF[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PickedUp_TL_Location_01AA6252463321D1532526A8C1B41007; // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PickedUp_TL_BobHeight_01AA6252463321D1532526A8C1B41007; // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PickedUp_TL_zRotation_01AA6252463321D1532526A8C1B41007; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PickedUp_TL_Scale_01AA6252463321D1532526A8C1B41007; // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PickedUp_TL__Direction_01AA6252463321D1532526A8C1B41007; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C0[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PickedUp_TL;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinTL_PulseTime_A255424C4C28318C9EA1A7A7D3F4B6AF; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinTL_RiseTime_A255424C4C28318C9EA1A7A7D3F4B6AF;  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SpinTL__Direction_A255424C4C28318C9EA1A7A7D3F4B6AF; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C1[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SpinTL;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CoinCollectionSound;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CoinCollectionEmitter;                             // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreShrunkScale;                                    // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C2[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CoinSpinSound;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentRelativeScale;                              // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PulseSizeMultiplier;                               // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLight;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85C3[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RelativeRotationAmount;                            // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenSpin;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C4[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LoopTimerHandle;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CoinRelativeTransform;                             // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CoinRelativeRotationZ;                             // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID0;                                              // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID1;                                              // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BobHeightMax;                                      // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BobHeightMin;                                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CoinScale;                                         // 0x0360(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FinalLocation;                                     // 0x036C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocation;                                   // 0x0378(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalRotation;                                     // 0x0384(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                FinalScale;                                        // 0x0390(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentRotation;                                   // 0x039C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                CurrentScale;                                      // 0x03A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C5[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          HidingProp;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        NewVar_0;                                          // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Coin_Flare_up;                                     // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AQuestVisual_XPCoin_Hidden_C*           NewVar_1;                                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NewVar_2;                                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FlareUp;                                        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_Component;                                 // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_CoinFlareUp;                                    // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           VFXColor;                                          // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar_3;                                          // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VFXStreaks_Height;                                 // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VFXStreaks_Radius;                                 // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VFXStreaks_Offset;                                 // 0x0414(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HidingPropisDestroyed;                             // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85C6[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              VFXGlow_Scale;                                     // 0x0424(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VFXGlowDecalVelocityMultiplier;                    // 0x042C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VFXGlowDecalSizeMultiplier;                        // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           VFXDecalColor;                                     // 0x043C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VFXDecalOffset;                                    // 0x044C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VFXGlowOffset;                                     // 0x0458(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalStreaks;                                 // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StreaksScaleMultiplier;                            // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_QuestVisual_XPCoin_Hidden(int32 EntryPoint);
	void BeginSpinning();
	void HidingPropDestroyed();
	void BindHideProp(class ABuildingProp* Param_HidingProp, float Param_VFXStreaks_Height, float Param_VFXStreaks_Radius, float Param_AdditionalStreaks, float Param_StreaksScaleMultiplier, const struct FVector& SpawnOffset, const struct FVector& Param_VFXStreaks_Offset, const struct FVector& Param_VFXGlowOffset, const struct FVector2D& Param_VFXGlow_Scale);
	void ObjectiveCompleted(class AFortPlayerController* PlayerController);
	void EndSpinning();
	void BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void LoopForwards();
	void LoopBackwards();
	void ReceiveBeginPlay();
	void SpinTL__Start_Spin__EventFunc();
	void SpinTL__UpdateFunc();
	void SpinTL__FinishedFunc();
	void Timeline_0__FXSpawn__EventFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void PickedUp_TL__SpawnParticles__EventFunc();
	void PickedUp_TL__UpdateFunc();
	void PickedUp_TL__FinishedFunc();
	void UserConstructionScript();
	void Set_Niagara_System_User_Variable__Color_(class FName Param_Name, const struct FLinearColor& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestVisual_XPCoin_Hidden_C">();
	}
	static class AQuestVisual_XPCoin_Hidden_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQuestVisual_XPCoin_Hidden_C>();
	}
};
static_assert(alignof(AQuestVisual_XPCoin_Hidden_C) == 0x000008, "Wrong alignment on AQuestVisual_XPCoin_Hidden_C");
static_assert(sizeof(AQuestVisual_XPCoin_Hidden_C) == 0x000470, "Wrong size on AQuestVisual_XPCoin_Hidden_C");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, UberGraphFrame) == 0x000228, "Member 'AQuestVisual_XPCoin_Hidden_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Trail) == 0x000230, "Member 'AQuestVisual_XPCoin_Hidden_C::Trail' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, GlowMesh) == 0x000238, "Member 'AQuestVisual_XPCoin_Hidden_C::GlowMesh' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SM_Coin) == 0x000240, "Member 'AQuestVisual_XPCoin_Hidden_C::SM_Coin' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SpinOverlap) == 0x000248, "Member 'AQuestVisual_XPCoin_Hidden_C::SpinOverlap' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, DefaultSceneRoot) == 0x000250, "Member 'AQuestVisual_XPCoin_Hidden_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Light) == 0x000258, "Member 'AQuestVisual_XPCoin_Hidden_C::Light' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Timeline_0_Scale_3C8E777547B12BBB8819849BBFBD91C0) == 0x000260, "Member 'AQuestVisual_XPCoin_Hidden_C::Timeline_0_Scale_3C8E777547B12BBB8819849BBFBD91C0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Timeline_0_Rotation_3C8E777547B12BBB8819849BBFBD91C0) == 0x00026C, "Member 'AQuestVisual_XPCoin_Hidden_C::Timeline_0_Rotation_3C8E777547B12BBB8819849BBFBD91C0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Timeline_0_HeightPath_3C8E777547B12BBB8819849BBFBD91C0) == 0x000270, "Member 'AQuestVisual_XPCoin_Hidden_C::Timeline_0_HeightPath_3C8E777547B12BBB8819849BBFBD91C0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Timeline_0__Direction_3C8E777547B12BBB8819849BBFBD91C0) == 0x000274, "Member 'AQuestVisual_XPCoin_Hidden_C::Timeline_0__Direction_3C8E777547B12BBB8819849BBFBD91C0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Timeline_0) == 0x000278, "Member 'AQuestVisual_XPCoin_Hidden_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL_Location_01AA6252463321D1532526A8C1B41007) == 0x000280, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL_Location_01AA6252463321D1532526A8C1B41007' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL_BobHeight_01AA6252463321D1532526A8C1B41007) == 0x00028C, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL_BobHeight_01AA6252463321D1532526A8C1B41007' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL_zRotation_01AA6252463321D1532526A8C1B41007) == 0x000290, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL_zRotation_01AA6252463321D1532526A8C1B41007' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL_Scale_01AA6252463321D1532526A8C1B41007) == 0x000294, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL_Scale_01AA6252463321D1532526A8C1B41007' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL__Direction_01AA6252463321D1532526A8C1B41007) == 0x000298, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL__Direction_01AA6252463321D1532526A8C1B41007' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PickedUp_TL) == 0x0002A0, "Member 'AQuestVisual_XPCoin_Hidden_C::PickedUp_TL' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SpinTL_PulseTime_A255424C4C28318C9EA1A7A7D3F4B6AF) == 0x0002A8, "Member 'AQuestVisual_XPCoin_Hidden_C::SpinTL_PulseTime_A255424C4C28318C9EA1A7A7D3F4B6AF' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SpinTL_RiseTime_A255424C4C28318C9EA1A7A7D3F4B6AF) == 0x0002AC, "Member 'AQuestVisual_XPCoin_Hidden_C::SpinTL_RiseTime_A255424C4C28318C9EA1A7A7D3F4B6AF' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SpinTL__Direction_A255424C4C28318C9EA1A7A7D3F4B6AF) == 0x0002B0, "Member 'AQuestVisual_XPCoin_Hidden_C::SpinTL__Direction_A255424C4C28318C9EA1A7A7D3F4B6AF' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, SpinTL) == 0x0002B8, "Member 'AQuestVisual_XPCoin_Hidden_C::SpinTL' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinCollectionSound) == 0x0002C0, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinCollectionSound' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinCollectionEmitter) == 0x0002C8, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinCollectionEmitter' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PreShrunkScale) == 0x0002D0, "Member 'AQuestVisual_XPCoin_Hidden_C::PreShrunkScale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinSpinSound) == 0x0002E0, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinSpinSound' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CurrentRelativeScale) == 0x0002E8, "Member 'AQuestVisual_XPCoin_Hidden_C::CurrentRelativeScale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, PulseSizeMultiplier) == 0x0002F4, "Member 'AQuestVisual_XPCoin_Hidden_C::PulseSizeMultiplier' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, LightColor) == 0x0002F8, "Member 'AQuestVisual_XPCoin_Hidden_C::LightColor' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, UseLight) == 0x000308, "Member 'AQuestVisual_XPCoin_Hidden_C::UseLight' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, RelativeRotationAmount) == 0x00030C, "Member 'AQuestVisual_XPCoin_Hidden_C::RelativeRotationAmount' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, DelayBetweenSpin) == 0x000310, "Member 'AQuestVisual_XPCoin_Hidden_C::DelayBetweenSpin' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, LoopTimerHandle) == 0x000318, "Member 'AQuestVisual_XPCoin_Hidden_C::LoopTimerHandle' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinRelativeTransform) == 0x000320, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinRelativeTransform' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinRelativeRotationZ) == 0x00032C, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinRelativeRotationZ' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, MID0) == 0x000330, "Member 'AQuestVisual_XPCoin_Hidden_C::MID0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, MID1) == 0x000338, "Member 'AQuestVisual_XPCoin_Hidden_C::MID1' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, BobHeightMax) == 0x000340, "Member 'AQuestVisual_XPCoin_Hidden_C::BobHeightMax' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, BobHeightMin) == 0x000350, "Member 'AQuestVisual_XPCoin_Hidden_C::BobHeightMin' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CoinScale) == 0x000360, "Member 'AQuestVisual_XPCoin_Hidden_C::CoinScale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, FinalLocation) == 0x00036C, "Member 'AQuestVisual_XPCoin_Hidden_C::FinalLocation' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CurrentLocation) == 0x000378, "Member 'AQuestVisual_XPCoin_Hidden_C::CurrentLocation' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, FinalRotation) == 0x000384, "Member 'AQuestVisual_XPCoin_Hidden_C::FinalRotation' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, FinalScale) == 0x000390, "Member 'AQuestVisual_XPCoin_Hidden_C::FinalScale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CurrentRotation) == 0x00039C, "Member 'AQuestVisual_XPCoin_Hidden_C::CurrentRotation' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, CurrentScale) == 0x0003A8, "Member 'AQuestVisual_XPCoin_Hidden_C::CurrentScale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, HidingProp) == 0x0003B8, "Member 'AQuestVisual_XPCoin_Hidden_C::HidingProp' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NewVar_0) == 0x0003C0, "Member 'AQuestVisual_XPCoin_Hidden_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Coin_Flare_up) == 0x0003C8, "Member 'AQuestVisual_XPCoin_Hidden_C::Coin_Flare_up' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NewVar_1) == 0x0003D0, "Member 'AQuestVisual_XPCoin_Hidden_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NewVar_2) == 0x0003D8, "Member 'AQuestVisual_XPCoin_Hidden_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NS_FlareUp) == 0x0003E0, "Member 'AQuestVisual_XPCoin_Hidden_C::NS_FlareUp' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, Niagara_Component) == 0x0003E8, "Member 'AQuestVisual_XPCoin_Hidden_C::Niagara_Component' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NS_CoinFlareUp) == 0x0003F0, "Member 'AQuestVisual_XPCoin_Hidden_C::NS_CoinFlareUp' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXColor) == 0x0003F8, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXColor' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, NewVar_3) == 0x000408, "Member 'AQuestVisual_XPCoin_Hidden_C::NewVar_3' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXStreaks_Height) == 0x00040C, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXStreaks_Height' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXStreaks_Radius) == 0x000410, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXStreaks_Radius' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXStreaks_Offset) == 0x000414, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXStreaks_Offset' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, HidingPropisDestroyed) == 0x000420, "Member 'AQuestVisual_XPCoin_Hidden_C::HidingPropisDestroyed' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXGlow_Scale) == 0x000424, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXGlow_Scale' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXGlowDecalVelocityMultiplier) == 0x00042C, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXGlowDecalVelocityMultiplier' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXGlowDecalSizeMultiplier) == 0x000438, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXGlowDecalSizeMultiplier' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXDecalColor) == 0x00043C, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXDecalColor' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXDecalOffset) == 0x00044C, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXDecalOffset' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, VFXGlowOffset) == 0x000458, "Member 'AQuestVisual_XPCoin_Hidden_C::VFXGlowOffset' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, AdditionalStreaks) == 0x000464, "Member 'AQuestVisual_XPCoin_Hidden_C::AdditionalStreaks' has a wrong offset!");
static_assert(offsetof(AQuestVisual_XPCoin_Hidden_C, StreaksScaleMultiplier) == 0x000468, "Member 'AQuestVisual_XPCoin_Hidden_C::StreaksScaleMultiplier' has a wrong offset!");

}

