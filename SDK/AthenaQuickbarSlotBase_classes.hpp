#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaQuickbarSlotBase

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "ItemDisplayStyle_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaQuickbarSlotBase.AthenaQuickbarSlotBase_C
// 0x0080 (0x03E8 - 0x0368)
class UAthenaQuickbarSlotBase_C : public UFortQuickBarSlotBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GrowAnimation;                                     // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               _SizeBox__Item;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemLocked;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaGadgetFuelGauge_C*               JetpackFuelGauge;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo1;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo2;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        NativeModeSwitcher;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Selection;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxBottomKeybind;                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_BehindImage;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EItemDisplayStyle                             ItemDisplayStyle;                                  // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6695[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortItemCooldownType>                 CooldownTypesSupported;                            // 0x03D0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         AnimatedBoxScaleFactor;                            // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MinimumCardSize;                                   // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MaximumCardSize;                                   // 0x03E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldCollapseItemWidgetBorder;                    // 0x03E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          UseNativeCell;                                     // 0x03E7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UpdateItemBoxSize_Native();
	void UpdateItemBoxSize_Slow();
	void OnMaximizedStarted();
	void OnMinimizedFinished();
	void SetAnimatedBoxScaleFactor(float Value);
	void SwitchToNative(bool UseNative);
	void InitializeInvalidation();
	void UpdateItemBoxSize();
	void OnCooldownStopped(EFortItemCooldownType CooldownType);
	void OnCooldownStarted(EFortItemCooldownType CooldownType);
	void InitializeCooldowns();
	void MaximizeSlot(bool bShouldSkipAnimation);
	void MinimizeSlot(bool bShouldSkipAnimation);
	void SetSlotSelected(bool bSelected);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void WidgetAnimationEvt_GrowAnimation_K2Node_WidgetAnimationEvent_3();
	void WidgetAnimationEvt_GrowAnimation_K2Node_WidgetAnimationEvent_2();
	void OnRefreshItem();
	void ExecuteUbergraph_AthenaQuickbarSlotBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaQuickbarSlotBase_C">();
	}
	static class UAthenaQuickbarSlotBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaQuickbarSlotBase_C>();
	}
};
static_assert(alignof(UAthenaQuickbarSlotBase_C) == 0x000008, "Wrong alignment on UAthenaQuickbarSlotBase_C");
static_assert(sizeof(UAthenaQuickbarSlotBase_C) == 0x0003E8, "Wrong size on UAthenaQuickbarSlotBase_C");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, UberGraphFrame) == 0x000368, "Member 'UAthenaQuickbarSlotBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, GrowAnimation) == 0x000370, "Member 'UAthenaQuickbarSlotBase_C::GrowAnimation' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, Selected) == 0x000378, "Member 'UAthenaQuickbarSlotBase_C::Selected' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, _SizeBox__Item) == 0x000380, "Member 'UAthenaQuickbarSlotBase_C::_SizeBox__Item' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, ItemLocked) == 0x000388, "Member 'UAthenaQuickbarSlotBase_C::ItemLocked' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, JetpackFuelGauge) == 0x000390, "Member 'UAthenaQuickbarSlotBase_C::JetpackFuelGauge' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, KeybindTopCombo1) == 0x000398, "Member 'UAthenaQuickbarSlotBase_C::KeybindTopCombo1' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, KeybindTopCombo2) == 0x0003A0, "Member 'UAthenaQuickbarSlotBase_C::KeybindTopCombo2' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, NativeModeSwitcher) == 0x0003A8, "Member 'UAthenaQuickbarSlotBase_C::NativeModeSwitcher' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, Selection) == 0x0003B0, "Member 'UAthenaQuickbarSlotBase_C::Selection' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, SizeBoxBottomKeybind) == 0x0003B8, "Member 'UAthenaQuickbarSlotBase_C::SizeBoxBottomKeybind' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, Slot_BehindImage) == 0x0003C0, "Member 'UAthenaQuickbarSlotBase_C::Slot_BehindImage' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, ItemDisplayStyle) == 0x0003C8, "Member 'UAthenaQuickbarSlotBase_C::ItemDisplayStyle' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, CooldownTypesSupported) == 0x0003D0, "Member 'UAthenaQuickbarSlotBase_C::CooldownTypesSupported' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, AnimatedBoxScaleFactor) == 0x0003E0, "Member 'UAthenaQuickbarSlotBase_C::AnimatedBoxScaleFactor' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, MinimumCardSize) == 0x0003E4, "Member 'UAthenaQuickbarSlotBase_C::MinimumCardSize' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, MaximumCardSize) == 0x0003E5, "Member 'UAthenaQuickbarSlotBase_C::MaximumCardSize' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, ShouldCollapseItemWidgetBorder) == 0x0003E6, "Member 'UAthenaQuickbarSlotBase_C::ShouldCollapseItemWidgetBorder' has a wrong offset!");
static_assert(offsetof(UAthenaQuickbarSlotBase_C, UseNativeCell) == 0x0003E7, "Member 'UAthenaQuickbarSlotBase_C::UseNativeCell' has a wrong offset!");

}

