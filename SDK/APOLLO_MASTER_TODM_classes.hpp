#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: APOLLO_MASTER_TODM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass APOLLO_MASTER_TODM.APOLLO_MASTER_TODM_C
// 0x01E0 (0x1070 - 0x0E90)
class AAPOLLO_MASTER_TODM_C : public AFortTimeOfDayManagerAtmosphere
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  HeavySSAO_Postprocess;                             // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  EditorPostProcessMaterial_HackToWorkAroundTheOutlineShaderBeingInjectedByCodeAtRuntime_; // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         New_Storm_Timeline_Wind_Strength_1418199D40439300D6A294BFB0695C20; // 0x0EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Storm_Timeline_RainInt_1418199D40439300D6A294BFB0695C20; // 0x0EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Storm_Timeline_Lightning_Modulator_1418199D40439300D6A294BFB0695C20; // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Storm_Timeline_Storm_Ramp_In_Value_1418199D40439300D6A294BFB0695C20; // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            New_Storm_Timeline__Direction_1418199D40439300D6A294BFB0695C20; // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5F[0x7];                                     // 0x0EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     New_Storm_Timeline;                                // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlashLightning_LightningColorLERP_0384539D43C6E59E42B14C91632CFE4D; // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlashLightning_lightning_alpha_0384539D43C6E59E42B14C91632CFE4D; // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlashLightning_Lightning_Intensity_0384539D43C6E59E42B14C91632CFE4D; // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FlashLightning__Direction_0384539D43C6E59E42B14C91632CFE4D; // 0x0ED4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F60[0x3];                                     // 0x0ED5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FlashLightning;                                    // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindSpeed;                                         // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomWeatherWaitTime;                             // 0x0EE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentAmountOfRandomWeatherTimeLeft;              // 0x0EE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewWeatherLerpAmount;                              // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindStrength;                                      // 0x0EF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FutureWindStrength;                                // 0x0EF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FutureWindSpeed;                                   // 0x0EF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPickNewWindConditions;                            // 0x0EFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F61[0x3];                                     // 0x0EFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightningStrength;                                 // 0x0F00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThreatCloudStormAmount;                            // 0x0F04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRainWithStorms;                                 // 0x0F08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Play_a_Particle_Effect_Near_the_players_Feet;      // 0x0F09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WindEffects_Should_be_Active;                      // 0x0F0A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F62[0x5];                                     // 0x0F0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Storm_Foot_Particle_Outdoor;                       // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Storm_Foot_Particle_While_on_Terrain;              // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Storm_Foot_Particle_Indoor;                        // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Storm_Foot_Particle_While_NOT_on_Terrain;          // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Storm_Wind_Strength;                               // 0x0F30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Generate_Foliage_Wind_Gusts;                       // 0x0F34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F63[0x3];                                     // 0x0F35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LightningStrikeTimerHandle;                        // 0x0F38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PreviousDirectionalLightColor;                     // 0x0F40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Lightning_Flash_Color;                             // 0x0F50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Lightning_Flash_Timeline_Min;                      // 0x0F60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lightning_Flash_Timeline_Max;                      // 0x0F64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogMorningColor;                             // 0x0F68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogMorningLitColor;                          // 0x0F78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningDistance;                          // 0x0F88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningDiffuseAmount;                     // 0x0F8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningEmissiveAmount;                    // 0x0F90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningLitLength;                         // 0x0F94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningLitRotation;                       // 0x0F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogMorningLitOffset;                         // 0x0F9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogDayColor;                                 // 0x0FA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogDayLitColor;                              // 0x0FB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayDistance;                              // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayDiffuseAmount;                         // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayEmissiveAmount;                        // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayLitLength;                             // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayLitRotation;                           // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogDayLitOffset;                             // 0x0FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogEveningColor;                             // 0x0FD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogEveningLitColor;                          // 0x0FE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningDistance;                          // 0x0FF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningDiffuseAmount;                     // 0x0FFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningEmissiveAmount;                    // 0x1000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningLitLength;                         // 0x1004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningLitRotation;                       // 0x1008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogEveningLitOffset;                         // 0x100C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogNightColor;                               // 0x1010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkyboxFogNightLitColor;                            // 0x1020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightDistance;                            // 0x1030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightDiffuseAmount;                       // 0x1034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightEmissiveAmount;                      // 0x1038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightLitLength;                           // 0x103C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightLitRotation;                         // 0x1040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkyboxFogNightLitOffset;                           // 0x1044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         World_Border_Cloud_Base_Color_Brightness;          // 0x1048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           World_Border_Cloud_Sub_Surface_Color_and_Opacity;  // 0x104C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableCometDynamicPlacement;                       // 0x105C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F64[0x3];                                     // 0x105D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Cheat_RTDFShadowsDistance;                         // 0x1060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_APOLLO_MASTER_TODM(int32 EntryPoint);
	void UpdateShadowLevel();
	void Manual_Update_for_Override();
	void StartStorm();
	void OnStormStart();
	void OnStormEnd();
	void LightningStrike();
	void ReceiveTick(float DeltaSeconds);
	void UpdateSSAO();
	void EnableHDRRendering();
	void ReceiveBeginPlay();
	void DisableLightAndFog(bool Enable);
	void New_Storm_Timeline__FireOffRain__EventFunc();
	void New_Storm_Timeline__UpdateFunc();
	void New_Storm_Timeline__FinishedFunc();
	void FlashLightning__UpdateFunc();
	void FlashLightning__FinishedFunc();
	void UserConstructionScript();
	void SetHeavySSAO();
	void EmptyTransform(struct FTransform* Transform);
	void SetShadowStateMPC();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"APOLLO_MASTER_TODM_C">();
	}
	static class AAPOLLO_MASTER_TODM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAPOLLO_MASTER_TODM_C>();
	}
};
static_assert(alignof(AAPOLLO_MASTER_TODM_C) == 0x000010, "Wrong alignment on AAPOLLO_MASTER_TODM_C");
static_assert(sizeof(AAPOLLO_MASTER_TODM_C) == 0x001070, "Wrong size on AAPOLLO_MASTER_TODM_C");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, UberGraphFrame) == 0x000E90, "Member 'AAPOLLO_MASTER_TODM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, HeavySSAO_Postprocess) == 0x000E98, "Member 'AAPOLLO_MASTER_TODM_C::HeavySSAO_Postprocess' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, EditorPostProcessMaterial_HackToWorkAroundTheOutlineShaderBeingInjectedByCodeAtRuntime_) == 0x000EA0, "Member 'AAPOLLO_MASTER_TODM_C::EditorPostProcessMaterial_HackToWorkAroundTheOutlineShaderBeingInjectedByCodeAtRuntime_' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline_Wind_Strength_1418199D40439300D6A294BFB0695C20) == 0x000EA8, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline_Wind_Strength_1418199D40439300D6A294BFB0695C20' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline_RainInt_1418199D40439300D6A294BFB0695C20) == 0x000EAC, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline_RainInt_1418199D40439300D6A294BFB0695C20' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline_Lightning_Modulator_1418199D40439300D6A294BFB0695C20) == 0x000EB0, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline_Lightning_Modulator_1418199D40439300D6A294BFB0695C20' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline_Storm_Ramp_In_Value_1418199D40439300D6A294BFB0695C20) == 0x000EB4, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline_Storm_Ramp_In_Value_1418199D40439300D6A294BFB0695C20' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline__Direction_1418199D40439300D6A294BFB0695C20) == 0x000EB8, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline__Direction_1418199D40439300D6A294BFB0695C20' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, New_Storm_Timeline) == 0x000EC0, "Member 'AAPOLLO_MASTER_TODM_C::New_Storm_Timeline' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FlashLightning_LightningColorLERP_0384539D43C6E59E42B14C91632CFE4D) == 0x000EC8, "Member 'AAPOLLO_MASTER_TODM_C::FlashLightning_LightningColorLERP_0384539D43C6E59E42B14C91632CFE4D' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FlashLightning_lightning_alpha_0384539D43C6E59E42B14C91632CFE4D) == 0x000ECC, "Member 'AAPOLLO_MASTER_TODM_C::FlashLightning_lightning_alpha_0384539D43C6E59E42B14C91632CFE4D' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FlashLightning_Lightning_Intensity_0384539D43C6E59E42B14C91632CFE4D) == 0x000ED0, "Member 'AAPOLLO_MASTER_TODM_C::FlashLightning_Lightning_Intensity_0384539D43C6E59E42B14C91632CFE4D' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FlashLightning__Direction_0384539D43C6E59E42B14C91632CFE4D) == 0x000ED4, "Member 'AAPOLLO_MASTER_TODM_C::FlashLightning__Direction_0384539D43C6E59E42B14C91632CFE4D' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FlashLightning) == 0x000ED8, "Member 'AAPOLLO_MASTER_TODM_C::FlashLightning' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, WindSpeed) == 0x000EE0, "Member 'AAPOLLO_MASTER_TODM_C::WindSpeed' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, RandomWeatherWaitTime) == 0x000EE4, "Member 'AAPOLLO_MASTER_TODM_C::RandomWeatherWaitTime' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, CurrentAmountOfRandomWeatherTimeLeft) == 0x000EE8, "Member 'AAPOLLO_MASTER_TODM_C::CurrentAmountOfRandomWeatherTimeLeft' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, NewWeatherLerpAmount) == 0x000EEC, "Member 'AAPOLLO_MASTER_TODM_C::NewWeatherLerpAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, WindStrength) == 0x000EF0, "Member 'AAPOLLO_MASTER_TODM_C::WindStrength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FutureWindStrength) == 0x000EF4, "Member 'AAPOLLO_MASTER_TODM_C::FutureWindStrength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, FutureWindSpeed) == 0x000EF8, "Member 'AAPOLLO_MASTER_TODM_C::FutureWindSpeed' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, bPickNewWindConditions) == 0x000EFC, "Member 'AAPOLLO_MASTER_TODM_C::bPickNewWindConditions' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, LightningStrength) == 0x000F00, "Member 'AAPOLLO_MASTER_TODM_C::LightningStrength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, ThreatCloudStormAmount) == 0x000F04, "Member 'AAPOLLO_MASTER_TODM_C::ThreatCloudStormAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, UseRainWithStorms) == 0x000F08, "Member 'AAPOLLO_MASTER_TODM_C::UseRainWithStorms' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Play_a_Particle_Effect_Near_the_players_Feet) == 0x000F09, "Member 'AAPOLLO_MASTER_TODM_C::Play_a_Particle_Effect_Near_the_players_Feet' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, WindEffects_Should_be_Active) == 0x000F0A, "Member 'AAPOLLO_MASTER_TODM_C::WindEffects_Should_be_Active' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Storm_Foot_Particle_Outdoor) == 0x000F10, "Member 'AAPOLLO_MASTER_TODM_C::Storm_Foot_Particle_Outdoor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Storm_Foot_Particle_While_on_Terrain) == 0x000F18, "Member 'AAPOLLO_MASTER_TODM_C::Storm_Foot_Particle_While_on_Terrain' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Storm_Foot_Particle_Indoor) == 0x000F20, "Member 'AAPOLLO_MASTER_TODM_C::Storm_Foot_Particle_Indoor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Storm_Foot_Particle_While_NOT_on_Terrain) == 0x000F28, "Member 'AAPOLLO_MASTER_TODM_C::Storm_Foot_Particle_While_NOT_on_Terrain' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Storm_Wind_Strength) == 0x000F30, "Member 'AAPOLLO_MASTER_TODM_C::Storm_Wind_Strength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Generate_Foliage_Wind_Gusts) == 0x000F34, "Member 'AAPOLLO_MASTER_TODM_C::Generate_Foliage_Wind_Gusts' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, LightningStrikeTimerHandle) == 0x000F38, "Member 'AAPOLLO_MASTER_TODM_C::LightningStrikeTimerHandle' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, PreviousDirectionalLightColor) == 0x000F40, "Member 'AAPOLLO_MASTER_TODM_C::PreviousDirectionalLightColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Lightning_Flash_Color) == 0x000F50, "Member 'AAPOLLO_MASTER_TODM_C::Lightning_Flash_Color' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Lightning_Flash_Timeline_Min) == 0x000F60, "Member 'AAPOLLO_MASTER_TODM_C::Lightning_Flash_Timeline_Min' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Lightning_Flash_Timeline_Max) == 0x000F64, "Member 'AAPOLLO_MASTER_TODM_C::Lightning_Flash_Timeline_Max' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningColor) == 0x000F68, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningLitColor) == 0x000F78, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningLitColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningDistance) == 0x000F88, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningDistance' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningDiffuseAmount) == 0x000F8C, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningDiffuseAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningEmissiveAmount) == 0x000F90, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningEmissiveAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningLitLength) == 0x000F94, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningLitLength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningLitRotation) == 0x000F98, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningLitRotation' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogMorningLitOffset) == 0x000F9C, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogMorningLitOffset' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayColor) == 0x000FA0, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayLitColor) == 0x000FB0, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayLitColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayDistance) == 0x000FC0, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayDistance' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayDiffuseAmount) == 0x000FC4, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayDiffuseAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayEmissiveAmount) == 0x000FC8, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayEmissiveAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayLitLength) == 0x000FCC, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayLitLength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayLitRotation) == 0x000FD0, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayLitRotation' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogDayLitOffset) == 0x000FD4, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogDayLitOffset' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningColor) == 0x000FD8, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningLitColor) == 0x000FE8, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningLitColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningDistance) == 0x000FF8, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningDistance' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningDiffuseAmount) == 0x000FFC, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningDiffuseAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningEmissiveAmount) == 0x001000, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningEmissiveAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningLitLength) == 0x001004, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningLitLength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningLitRotation) == 0x001008, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningLitRotation' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogEveningLitOffset) == 0x00100C, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogEveningLitOffset' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightColor) == 0x001010, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightLitColor) == 0x001020, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightLitColor' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightDistance) == 0x001030, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightDistance' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightDiffuseAmount) == 0x001034, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightDiffuseAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightEmissiveAmount) == 0x001038, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightEmissiveAmount' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightLitLength) == 0x00103C, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightLitLength' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightLitRotation) == 0x001040, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightLitRotation' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, SkyboxFogNightLitOffset) == 0x001044, "Member 'AAPOLLO_MASTER_TODM_C::SkyboxFogNightLitOffset' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, World_Border_Cloud_Base_Color_Brightness) == 0x001048, "Member 'AAPOLLO_MASTER_TODM_C::World_Border_Cloud_Base_Color_Brightness' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, World_Border_Cloud_Sub_Surface_Color_and_Opacity) == 0x00104C, "Member 'AAPOLLO_MASTER_TODM_C::World_Border_Cloud_Sub_Surface_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, EnableCometDynamicPlacement) == 0x00105C, "Member 'AAPOLLO_MASTER_TODM_C::EnableCometDynamicPlacement' has a wrong offset!");
static_assert(offsetof(AAPOLLO_MASTER_TODM_C, Cheat_RTDFShadowsDistance) == 0x001060, "Member 'AAPOLLO_MASTER_TODM_C::Cheat_RTDFShadowsDistance' has a wrong offset!");

}

