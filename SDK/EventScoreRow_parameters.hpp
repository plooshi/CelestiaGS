#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventScoreRow

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function EventScoreRow.EventScoreRow_C.SetData
// 0x0038 (0x0038 - 0x0000)
struct EventScoreRow_C_SetData final
{
public:
	class FText                                   Label;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Value;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77EB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(EventScoreRow_C_SetData) == 0x000008, "Wrong alignment on EventScoreRow_C_SetData");
static_assert(sizeof(EventScoreRow_C_SetData) == 0x000038, "Wrong size on EventScoreRow_C_SetData");
static_assert(offsetof(EventScoreRow_C_SetData, Label) == 0x000000, "Member 'EventScoreRow_C_SetData::Label' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_SetData, Value) == 0x000018, "Member 'EventScoreRow_C_SetData::Value' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_SetData, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'EventScoreRow_C_SetData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function EventScoreRow.EventScoreRow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EventScoreRow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EventScoreRow_C_PreConstruct) == 0x000001, "Wrong alignment on EventScoreRow_C_PreConstruct");
static_assert(sizeof(EventScoreRow_C_PreConstruct) == 0x000001, "Wrong size on EventScoreRow_C_PreConstruct");
static_assert(offsetof(EventScoreRow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EventScoreRow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function EventScoreRow.EventScoreRow_C.ExecuteUbergraph_EventScoreRow
// 0x000C (0x000C - 0x0000)
struct EventScoreRow_C_ExecuteUbergraph_EventScoreRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow) == 0x000004, "Wrong alignment on EventScoreRow_C_ExecuteUbergraph_EventScoreRow");
static_assert(sizeof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow) == 0x00000C, "Wrong size on EventScoreRow_C_ExecuteUbergraph_EventScoreRow");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, EntryPoint) == 0x000000, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, Temp_bool_Variable) == 0x000004, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, Temp_byte_Variable) == 0x000005, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, Temp_byte_Variable_1) == 0x000006, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, K2Node_Event_IsDesignTime) == 0x000007, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EventScoreRow_C_ExecuteUbergraph_EventScoreRow, K2Node_Select_Default) == 0x000008, "Member 'EventScoreRow_C_ExecuteUbergraph_EventScoreRow::K2Node_Select_Default' has a wrong offset!");

}

