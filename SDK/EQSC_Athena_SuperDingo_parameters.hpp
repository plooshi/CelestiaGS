#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EQSC_Athena_SuperDingo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EQSC_Athena_SuperDingo.EQSC_Athena_SuperDingo_C.ProvideSingleLocation
// 0x0080 (0x0080 - 0x0000)
struct EQSC_Athena_SuperDingo_C_ProvideSingleLocation final
{
public:
	class UObject*                                QuerierObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuerierActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultingLocation;                                 // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZLoc;                                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation) == 0x000008, "Wrong alignment on EQSC_Athena_SuperDingo_C_ProvideSingleLocation");
static_assert(sizeof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation) == 0x000080, "Wrong size on EQSC_Athena_SuperDingo_C_ProvideSingleLocation");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, QuerierObject) == 0x000000, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::QuerierObject' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, QuerierActor) == 0x000008, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::QuerierActor' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, ResultingLocation) == 0x000010, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::ResultingLocation' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, ZLoc) == 0x00001C, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::ZLoc' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x00003C, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000040, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000044, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_BreakVector_X) == 0x000068, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_BreakVector_Y) == 0x00006C, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_BreakVector_Z) == 0x000070, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(EQSC_Athena_SuperDingo_C_ProvideSingleLocation, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'EQSC_Athena_SuperDingo_C_ProvideSingleLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

