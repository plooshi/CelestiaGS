#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_ChBrowserMessage

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Cr_ChBrowserMessage.Cr_ChBrowserMessage_C.ExecuteUbergraph_Cr_ChBrowserMessage
// 0x0004 (0x0004 - 0x0000)
struct Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage) == 0x000004, "Wrong alignment on Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage");
static_assert(sizeof(Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage) == 0x000004, "Wrong size on Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage");
static_assert(offsetof(Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage, EntryPoint) == 0x000000, "Member 'Cr_ChBrowserMessage_C_ExecuteUbergraph_Cr_ChBrowserMessage::EntryPoint' has a wrong offset!");

// Function Cr_ChBrowserMessage.Cr_ChBrowserMessage_C.Populate
// 0x0108 (0x0108 - 0x0000)
struct Cr_ChBrowserMessage_C_Populate final
{
public:
	bool                                          IsTx;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Param_Message;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Param_Channel;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0098(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C0(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79F9[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x00F0(0x0018)()
};
static_assert(alignof(Cr_ChBrowserMessage_C_Populate) == 0x000008, "Wrong alignment on Cr_ChBrowserMessage_C_Populate");
static_assert(sizeof(Cr_ChBrowserMessage_C_Populate) == 0x000108, "Wrong size on Cr_ChBrowserMessage_C_Populate");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, IsTx) == 0x000000, "Member 'Cr_ChBrowserMessage_C_Populate::IsTx' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Param_Message) == 0x000008, "Member 'Cr_ChBrowserMessage_C_Populate::Param_Message' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Param_Channel) == 0x000020, "Member 'Cr_ChBrowserMessage_C_Populate::Param_Channel' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_bool_Variable) == 0x000038, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_bool_Variable_1) == 0x000039, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_byte_Variable) == 0x00003A, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_byte_Variable_1) == 0x00003B, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_bool_Variable_2) == 0x00003C, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_byte_Variable_2) == 0x00003D, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_byte_Variable_3) == 0x00003E, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_bool_Variable_3) == 0x00003F, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_text_Variable) == 0x000040, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, Temp_text_Variable_1) == 0x000058, "Member 'Cr_ChBrowserMessage_C_Populate::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_MakeStruct_SlateColor_1) == 0x000098, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_Select_Default) == 0x0000C0, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_Select_Default_1) == 0x0000E8, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_Select_Default_2) == 0x0000E9, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Cr_ChBrowserMessage_C_Populate, K2Node_Select_Default_3) == 0x0000F0, "Member 'Cr_ChBrowserMessage_C_Populate::K2Node_Select_Default_3' has a wrong offset!");

}

