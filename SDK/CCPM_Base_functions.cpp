#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CCPM_Base

#include "Basic.hpp"

#include "CCPM_Base_classes.hpp"
#include "CCPM_Base_parameters.hpp"


namespace SDK
{

// Function CCPM_Base.CCPM_Base_C.ExecuteUbergraph_CCPM_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACCPM_Base_C::ExecuteUbergraph_CCPM_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "ExecuteUbergraph_CCPM_Base");

	Params::CCPM_Base_C_ExecuteUbergraph_CCPM_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CCPM_Base.CCPM_Base_C.Attachment
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::Attachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "Attachment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.OnPawnAndPartChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ACCPM_Base_C::OnPawnAndPartChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "OnPawnAndPartChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.isHiddingInProp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHidden                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACCPM_Base_C::IsHiddingInProp(bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "isHiddingInProp");

	Params::CCPM_Base_C_IsHiddingInProp Parms{};

	Parms.IsHidden = IsHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CCPM_Base.CCPM_Base_C.PlayerMovementTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OldLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OldVelocity                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACCPM_Base_C::PlayerMovementTick(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "PlayerMovementTick");

	Params::CCPM_Base_C_PlayerMovementTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OldLocation = move(OldLocation);
	Parms.OldVelocity = move(OldVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CCPM_Base.CCPM_Base_C.ExitVehicle
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::ExitVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "ExitVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.EnterVehicle
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::EnterVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "EnterVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.Open
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.ExitingHidingProp
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::ExitingHidingProp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "ExitingHidingProp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.EnteringHidingProp
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::EnteringHidingProp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "EnteringHidingProp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.OnTargetingOrFirstPersonCameraChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ACCPM_Base_C::OnTargetingOrFirstPersonCameraChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "OnTargetingOrFirstPersonCameraChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.Close
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.OnEndSkydiving
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::OnEndSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "OnEndSkydiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.OnBeginSkydiving
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::OnBeginSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "OnBeginSkydiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.Reset Enter Vehicle
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::Reset_Enter_Vehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "Reset Enter Vehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.Reset Exit Vehicle
// (BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::Reset_Exit_Vehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "Reset Exit Vehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACCPM_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CCPM_Base.CCPM_Base_C.attachParticleSystem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent*         Particle_System_Component                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACCPM_Base_C::AttachParticleSystem(class UParticleSystemComponent* Particle_System_Component, class FName Socket_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "attachParticleSystem");

	Params::CCPM_Base_C_AttachParticleSystem Parms{};

	Parms.Particle_System_Component = Particle_System_Component;
	Parms.Socket_Name = Socket_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CCPM_Base.CCPM_Base_C.overrideCharacterPartType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortCustomPartType                     Part_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACCPM_Base_C::OverrideCharacterPartType(EFortCustomPartType Part_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CCPM_Base_C", "overrideCharacterPartType");

	Params::CCPM_Base_C_OverrideCharacterPartType Parms{};

	Parms.Part_Type = Part_Type;

	UObject::ProcessEvent(Func, &Parms);
}

}

