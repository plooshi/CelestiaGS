#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Particle_Deco

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Particle_Deco.Particle_Deco_C
// 0x00B8 (0x0C20 - 0x0B68)
class AParticle_Deco_C final : public ABuildingDeco
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               DecoEmitter;                                       // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterActivateChance;                             // 0x0B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F8D[0x4];                                     // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Particle;                                          // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleScale;                                     // 0x0B90(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F8E[0x4];                                     // 0x0B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundCue;                                          // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowRandomParticleScale;                          // 0x0BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F8F[0x3];                                     // 0x0BA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Particle_Random_Scale_Max_Range;                   // 0x0BAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSpotlight;                                   // 0x0BB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F90[0xF];                                     // 0x0BB1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpotLightRelativeTransformOffset;                  // 0x0BC0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         SpotLightAttenuationRadius;                        // 0x0BF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightIntensity;                                // 0x0BF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SpotLightColor;                                    // 0x0BF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightInnerConeAngle;                           // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpotlightOuterConeAngle;                           // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpotLightCastShadows;                              // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F91[0x3];                                     // 0x0C11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpotLightVolumetricScatteringIntensity;            // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomValue_5_59614;                               // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Particle_Deco(int32 EntryPoint);
	void ActivateDecoEmitter();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	float MaterialEditorSine(float LookUpValue, float Period);
	void PseudoRandomScale(const struct FVector& ActorLocation, const struct FVector& Param_ParticleScale, struct FVector* RandomScale);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Particle_Deco_C">();
	}
	static class AParticle_Deco_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AParticle_Deco_C>();
	}
};
static_assert(alignof(AParticle_Deco_C) == 0x000010, "Wrong alignment on AParticle_Deco_C");
static_assert(sizeof(AParticle_Deco_C) == 0x000C20, "Wrong size on AParticle_Deco_C");
static_assert(offsetof(AParticle_Deco_C, UberGraphFrame) == 0x000B68, "Member 'AParticle_Deco_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, Audio) == 0x000B70, "Member 'AParticle_Deco_C::Audio' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, DecoEmitter) == 0x000B78, "Member 'AParticle_Deco_C::DecoEmitter' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, EmitterActivateChance) == 0x000B80, "Member 'AParticle_Deco_C::EmitterActivateChance' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, Particle) == 0x000B88, "Member 'AParticle_Deco_C::Particle' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, ParticleScale) == 0x000B90, "Member 'AParticle_Deco_C::ParticleScale' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SoundCue) == 0x000BA0, "Member 'AParticle_Deco_C::SoundCue' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, AllowRandomParticleScale) == 0x000BA8, "Member 'AParticle_Deco_C::AllowRandomParticleScale' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, Particle_Random_Scale_Max_Range) == 0x000BAC, "Member 'AParticle_Deco_C::Particle_Random_Scale_Max_Range' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, EnableSpotlight) == 0x000BB0, "Member 'AParticle_Deco_C::EnableSpotlight' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotLightRelativeTransformOffset) == 0x000BC0, "Member 'AParticle_Deco_C::SpotLightRelativeTransformOffset' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotLightAttenuationRadius) == 0x000BF0, "Member 'AParticle_Deco_C::SpotLightAttenuationRadius' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotlightIntensity) == 0x000BF4, "Member 'AParticle_Deco_C::SpotlightIntensity' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotLightColor) == 0x000BF8, "Member 'AParticle_Deco_C::SpotLightColor' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotlightInnerConeAngle) == 0x000C08, "Member 'AParticle_Deco_C::SpotlightInnerConeAngle' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotlightOuterConeAngle) == 0x000C0C, "Member 'AParticle_Deco_C::SpotlightOuterConeAngle' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotLightCastShadows) == 0x000C10, "Member 'AParticle_Deco_C::SpotLightCastShadows' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, SpotLightVolumetricScatteringIntensity) == 0x000C14, "Member 'AParticle_Deco_C::SpotLightVolumetricScatteringIntensity' has a wrong offset!");
static_assert(offsetof(AParticle_Deco_C, RandomValue_5_59614) == 0x000C18, "Member 'AParticle_Deco_C::RandomValue_5_59614' has a wrong offset!");

}

