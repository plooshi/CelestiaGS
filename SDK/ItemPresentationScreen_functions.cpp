#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemPresentationScreen

#include "Basic.hpp"

#include "ItemPresentationScreen_classes.hpp"
#include "ItemPresentationScreen_parameters.hpp"


namespace SDK
{

// Function ItemPresentationScreen.ItemPresentationScreen_C.ExecuteUbergraph_ItemPresentationScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemPresentationScreen_C::ExecuteUbergraph_ItemPresentationScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "ExecuteUbergraph_ItemPresentationScreen");

	Params::ItemPresentationScreen_C_ExecuteUbergraph_ItemPresentationScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.SwitchToPaidItems
// (BlueprintCallable, BlueprintEvent)

void UItemPresentationScreen_C::SwitchToPaidItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "SwitchToPaidItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnDisplayItemsCollectedText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCloseScreen                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnDisplayItemsCollectedText(bool bCloseScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnDisplayItemsCollectedText");

	Params::ItemPresentationScreen_C_OnDisplayItemsCollectedText Parms{};

	Parms.bCloseScreen = bCloseScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnFinishDisplayingHotItems
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowOtherRewards                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnFinishDisplayingHotItems(bool bShowOtherRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnFinishDisplayingHotItems");

	Params::ItemPresentationScreen_C_OnFinishDisplayingHotItems Parms{};

	Parms.bShowOtherRewards = bShowOtherRewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnUpdateNextButtonText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNext                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnUpdateNextButtonText(bool bShowNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnUpdateNextButtonText");

	Params::ItemPresentationScreen_C_OnUpdateNextButtonText Parms{};

	Parms.bShowNext = bShowNext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnCloseScreen
// (Event, Protected, BlueprintEvent)

void UItemPresentationScreen_C::OnCloseScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnCloseScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnDisplayEquipButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanEquip                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnDisplayEquipButton(bool bCanEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnDisplayEquipButton");

	Params::ItemPresentationScreen_C_OnDisplayEquipButton Parms{};

	Parms.bCanEquip = bCanEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnInitialIconAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUsingListView                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnInitialIconAnimation(bool bUsingListView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnInitialIconAnimation");

	Params::ItemPresentationScreen_C_OnInitialIconAnimation Parms{};

	Parms.bUsingListView = bUsingListView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnUpdateItemEquipped
// (Event, Protected, BlueprintEvent)

void UItemPresentationScreen_C::OnUpdateItemEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnUpdateItemEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnUpdateOwnedItemText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::OnUpdateOwnedItemText(bool bShowText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnUpdateOwnedItemText");

	Params::ItemPresentationScreen_C_OnUpdateOwnedItemText Parms{};

	Parms.bShowText = bShowText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnUpdateItemInformation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        FortItem                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemPresentationScreen_C::OnUpdateItemInformation(const class UFortItem* FortItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnUpdateItemInformation");

	Params::ItemPresentationScreen_C_OnUpdateItemInformation Parms{};

	Parms.FortItem = FortItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.OnUpdateHeaderInformation
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortItemHeaderInformation       HeaderInformation                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UItemPresentationScreen_C::OnUpdateHeaderInformation(const struct FFortItemHeaderInformation& HeaderInformation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "OnUpdateHeaderInformation");

	Params::ItemPresentationScreen_C_OnUpdateHeaderInformation Parms{};

	Parms.HeaderInformation = move(HeaderInformation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UItemPresentationScreen_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.HandleAnimationInitialState
// (Public, BlueprintCallable, BlueprintEvent)

void UItemPresentationScreen_C::HandleAnimationInitialState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "HandleAnimationInitialState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.PlayIntro
// (Public, BlueprintCallable, BlueprintEvent)

void UItemPresentationScreen_C::PlayIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "PlayIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.StartFade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCloseScreen                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemPresentationScreen_C::StartFade(bool bCloseScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "StartFade");

	Params::ItemPresentationScreen_C_StartFade Parms{};

	Parms.bCloseScreen = bCloseScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.HandlePaidItemIntro
// (Public, BlueprintCallable, BlueprintEvent)

void UItemPresentationScreen_C::HandlePaidItemIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "HandlePaidItemIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemPresentationScreen.ItemPresentationScreen_C.HandleFadeAnimFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UItemPresentationScreen_C::HandleFadeAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemPresentationScreen_C", "HandleFadeAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}

}

