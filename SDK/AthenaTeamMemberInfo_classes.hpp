#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaTeamMemberInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaTeamMemberInfo.AthenaTeamMemberInfo_C
// 0x0078 (0x0438 - 0x03C0)
class UAthenaTeamMemberInfo_C final : public UAthenaPlayerInfoBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DangerPulse;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PulseMember;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BG_Active;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GameModeIcon;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_HealthShields;                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ResurrectChip_Uncollected;                   // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainVertBox;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_PlayerStates;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           DBNOPulseTimer;                                    // 0x0408(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  RelevantPlaylistTags;                              // 0x0410(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsTalking;                                        // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowBackgroundOverridden;                         // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetBackgroundVisibility(bool bOverride, bool bBackgroundVisible);
	void DoFlash();
	void BP_HandleDBNOStateChanged(bool bDBNO);
	void BP_HandleSeasonLevelUIDisplayChanged(int32 Level);
	void BP_HandlePlaylistExtensionWidgetCreated(class UUserWidget* Widget);
	void BP_HandleGameModeIconChanged(class UTexture2D* Param_GameModeIcon);
	void BP_HandlePlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void ClearDBNOFlashing();
	void BP_HandleResurrectionStateChanged(const struct FFortResurrectionUIData& ResurrectionStateData);
	void Danger_Pulse();
	void Pulse();
	void OverrideShowBackground(bool bShowBackground);
	void BP_HandleTalkingVisualDisplayChanged(bool bTalkingVisualsActive);
	void ExecuteUbergraph_AthenaTeamMemberInfo(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaTeamMemberInfo_C">();
	}
	static class UAthenaTeamMemberInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaTeamMemberInfo_C>();
	}
};
static_assert(alignof(UAthenaTeamMemberInfo_C) == 0x000008, "Wrong alignment on UAthenaTeamMemberInfo_C");
static_assert(sizeof(UAthenaTeamMemberInfo_C) == 0x000438, "Wrong size on UAthenaTeamMemberInfo_C");
static_assert(offsetof(UAthenaTeamMemberInfo_C, UberGraphFrame) == 0x0003C0, "Member 'UAthenaTeamMemberInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, DangerPulse) == 0x0003C8, "Member 'UAthenaTeamMemberInfo_C::DangerPulse' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, PulseMember) == 0x0003D0, "Member 'UAthenaTeamMemberInfo_C::PulseMember' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, BG_Active) == 0x0003D8, "Member 'UAthenaTeamMemberInfo_C::BG_Active' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, GameModeIcon) == 0x0003E0, "Member 'UAthenaTeamMemberInfo_C::GameModeIcon' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, HorizontalBox_HealthShields) == 0x0003E8, "Member 'UAthenaTeamMemberInfo_C::HorizontalBox_HealthShields' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, Image_ResurrectChip_Uncollected) == 0x0003F0, "Member 'UAthenaTeamMemberInfo_C::Image_ResurrectChip_Uncollected' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, MainVertBox) == 0x0003F8, "Member 'UAthenaTeamMemberInfo_C::MainVertBox' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, SizeBox_PlayerStates) == 0x000400, "Member 'UAthenaTeamMemberInfo_C::SizeBox_PlayerStates' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, DBNOPulseTimer) == 0x000408, "Member 'UAthenaTeamMemberInfo_C::DBNOPulseTimer' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, RelevantPlaylistTags) == 0x000410, "Member 'UAthenaTeamMemberInfo_C::RelevantPlaylistTags' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, bIsTalking) == 0x000430, "Member 'UAthenaTeamMemberInfo_C::bIsTalking' has a wrong offset!");
static_assert(offsetof(UAthenaTeamMemberInfo_C, bShowBackgroundOverridden) == 0x000431, "Member 'UAthenaTeamMemberInfo_C::bShowBackgroundOverridden' has a wrong offset!");

}

