#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_QuestInteractable_TimeTrials

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "TimeTrialRunnerData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Prop_QuestInteractable_TimeTrials.Prop_QuestInteractable_TimeTrials_C
// 0x0428 (0x0FE8 - 0x0BC0)
class AProp_QuestInteractable_TimeTrials_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   FloatingAlarm;                                     // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WheelClock;                                        // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AlarmClock;                                        // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InteractPlacement;                                 // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AmbientGodBeamFX;                                  // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP8Coll;                                           // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail7;                           // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocations7;                // 0x0C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint8;                                       // 0x0C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail6;                           // 0x0C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail5;                           // 0x0C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail4;                           // 0x0C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail3;                           // 0x0C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail2;                           // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail1;                           // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_Trail;                            // 0x0C40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation6;                 // 0x0C48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation5;                 // 0x0C50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation4;                 // 0x0C58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation3;                 // 0x0C60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation2;                 // 0x0C68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation1;                 // 0x0C70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TimedChallenge_InWorldLocation;                  // 0x0C78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP7Collision;                                      // 0x0C80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint7;                                       // 0x0C88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP6Collision;                                      // 0x0C90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint6;                                       // 0x0C98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP5Collision;                                      // 0x0CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint5;                                       // 0x0CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP4Collision;                                      // 0x0CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint4;                                       // 0x0CB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP3Colllision;                                     // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint3;                                       // 0x0CC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP2Collision;                                      // 0x0CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint2;                                       // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CP1Collision;                                      // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Checkpoint1;                                       // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   AmbientLight;                                      // 0x0CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AmbientSound;                                      // 0x0CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_92F521FF45B403E2B0085896F0368CBD; // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_92F521FF45B403E2B0085896F0368CBD; // 0x0D04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F4[0x3];                                     // 0x0D05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TIMER_VISUALS_BurstTime_C932E683484067425FBCB8820D8FCBB8; // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TIMER_VISUALS_FadeTime_C932E683484067425FBCB8820D8FCBB8; // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TIMER_VISUALS__Direction_C932E683484067425FBCB8820D8FCBB8; // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F5[0x7];                                     // 0x0D19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TIMER_VISUALS;                                     // 0x0D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_ClockShrinkTime_A251E41D426C6D8A20303A9CA9903A48; // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_MoveTime_A251E41D426C6D8A20303A9CA9903A48; // 0x0D2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A251E41D426C6D8A20303A9CA9903A48; // 0x0D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F6[0x7];                                     // 0x0D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailFade_FadeTime_EB31C2E74E2EC89E95E918A2A65023D8; // 0x0D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FailFade__Direction_EB31C2E74E2EC89E95E918A2A65023D8; // 0x0D44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F7[0x3];                                     // 0x0D45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FailFade;                                          // 0x0D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CP2Movement_MoveTime_705803EC4F97916856CB7EB6950DBFDF; // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CP2Movement__Direction_705803EC4F97916856CB7EB6950DBFDF; // 0x0D54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F8[0x3];                                     // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CP2Movement;                                       // 0x0D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CP1Movement_ClockShrinkTime_A4EEC2064632AE1BA2736DA535C3A1C4; // 0x0D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CP1Movement_MoveTime_A4EEC2064632AE1BA2736DA535C3A1C4; // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CP1Movement__Direction_A4EEC2064632AE1BA2736DA535C3A1C4; // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F9[0x7];                                     // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CP1Movement;                                       // 0x0D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InteractText;                                      // 0x0D78(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFortQuestItemDefinition*               QuestItem;                                         // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   QuestBackendObjectiveName;                         // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USoundBase*                             QuestSuccessSound;                                 // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        QuestSuccessFX;                                    // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  QuestTag;                                          // 0x0DB0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                          QuestCompleted;                                    // 0x0DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLocallyValid;                                    // 0x0DD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FA[0x2];                                     // 0x0DD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CP1_Location;                                      // 0x0DD4(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP2_Location;                                      // 0x0DE0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP3_Location;                                      // 0x0DEC(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumCPsHit;                                         // 0x0DF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeTrialTime;                                     // 0x0DFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FTimerHandle                           TrialTimer;                                        // 0x0E00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CPNumPlacement;                                    // 0x0E08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP4_Location;                                      // 0x0E0C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP5_Location;                                      // 0x0E18(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP6_Location;                                      // 0x0E24(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP7_Location;                                      // 0x0E30(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82FB[0x4];                                     // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CPTriggeredFX;                                     // 0x0E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CPTriggeredSound;                                  // 0x0E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP1Mat;                                            // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP2Mat;                                            // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP3Mat;                                            // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP4Mat;                                            // 0x0E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP5Mat;                                            // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP6Mat;                                            // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CP7Mat;                                            // 0x0E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TimerStartedSound;                                 // 0x0E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TimerSound;                                        // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TriggeredSound;                                    // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCPNumber;                                     // 0x0EA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0EA4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FC[0x3];                                     // 0x0EA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        TimeTrialSuccessFX;                                // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        TimeTrialActivationFX;                             // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeForCPsToMoveIntoPlace;                         // 0x0EB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TestSetup;                                         // 0x0EBC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_82FD[0x3];                                     // 0x0EBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CP8Mat;                                            // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CP8Location;                                       // 0x0EC8(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82FE[0x4];                                     // 0x0ED4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTimeTrialRunnerData>           Runners;                                           // 0x0ED8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          FoundRunner;                                       // 0x0EE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FF[0x3];                                     // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckRunnersTimeDelta;                             // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USoundBase*                             TimeTrialSuccessSound;                             // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TimeTrialFailureSound;                             // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CP_Hit_Pitch_Mulitplier;                           // 0x0F00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TimeTrialRunning;                                  // 0x0F04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8300[0x3];                                     // 0x0F05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   TimerNumberLookup;                                 // 0x0F08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TimerFinalSecondsSound;                            // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SafetyTimer;                                       // 0x0F20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimerBuffer;                                       // 0x0F28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CreativeMode;                                      // 0x0F2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8301[0x3];                                     // 0x0F2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ServerGraceTime;                                   // 0x0F30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVehicleTimeTrial;                               // 0x0F34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8302[0x3];                                     // 0x0F35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   VehicleInteractText;                               // 0x0F38(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                CurrentBottomClockScale;                           // 0x0F50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8303[0x4];                                     // 0x0F5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CPArray;                                           // 0x0F60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           GateArray;                                         // 0x0F70(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurrentBottomClock;                                // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CPArrayAndInitial;                                 // 0x0F88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          bLockFlagZRot;                                     // 0x0F98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsQuestShared;                                     // 0x0F99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ExcludeVehicles;                                   // 0x0F9A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8304[0x5];                                     // 0x0F9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  VehicleTag;                                        // 0x0FA0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                  PlayerInVehicleTag;                                // 0x0FC0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          MoveZToWaterSurface;                               // 0x0FE0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8305[0x3];                                     // 0x0FE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubmergeCheckCount;                                // 0x0FE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Prop_QuestInteractable_TimeTrials(int32 EntryPoint);
	void CheckIfSubmerged();
	void HideAllGates();
	void GateHit(int32 FlagIndex);
	void MakeGatesVisible();
	void MoveGatesIntoPlace();
	void SafetyTimeOut();
	void ClientStartTrial(class AFortPlayerController* InPlayer);
	void CP8Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void End_Visual_Timer_Countdown();
	void Start_Visual_Timer_Countdown();
	void Failure_FX(class AFortPlayerController* Player);
	void Reset_Time_Trial();
	void AwardQuest(class AFortPawn* PawnDoingTrial);
	void InitializeNextCP();
	void Check_Runners_Timers();
	void CP7_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP6_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP5_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP4_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP3_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP2_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CP1_Triggered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Unbind_CP_Overlaps();
	void Bind_CP_Overlaps();
	void MoveCPsIntoPlace();
	void PlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void ParentQuestUpdated();
	void QuestInitializedAndValid();
	void PlaySuccessFX(class AFortPlayerController* Controller);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void ReceiveBeginPlay();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void FailFade__UpdateFunc();
	void FailFade__FinishedFunc();
	void TIMER_VISUALS__NotifyEnding__EventFunc();
	void TIMER_VISUALS__UpdateFunc();
	void TIMER_VISUALS__FinishedFunc();
	void CP2Movement__UpdateFunc();
	void CP2Movement__FinishedFunc();
	void CP1Movement__UpdateFunc();
	void CP1Movement__FinishedFunc();
	void UserConstructionScript();
	void HideQuestProp();
	void SetUpCPsAndTimerVisuals();
	void IsRunnerTracked(class AFortPawn* InPawn, bool* RunnerIsTracked, int32* RunnerIndex);
	void CheckTrialRunFinished(class AFortPawn* RunningPawn);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	struct FVector GetFocusedSocketLocation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Prop_QuestInteractable_TimeTrials_C">();
	}
	static class AProp_QuestInteractable_TimeTrials_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_QuestInteractable_TimeTrials_C>();
	}
};
static_assert(alignof(AProp_QuestInteractable_TimeTrials_C) == 0x000008, "Wrong alignment on AProp_QuestInteractable_TimeTrials_C");
static_assert(sizeof(AProp_QuestInteractable_TimeTrials_C) == 0x000FE8, "Wrong size on AProp_QuestInteractable_TimeTrials_C");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, UberGraphFrame) == 0x000BC0, "Member 'AProp_QuestInteractable_TimeTrials_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, FloatingAlarm) == 0x000BC8, "Member 'AProp_QuestInteractable_TimeTrials_C::FloatingAlarm' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, WheelClock) == 0x000BD0, "Member 'AProp_QuestInteractable_TimeTrials_C::WheelClock' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, AlarmClock) == 0x000BD8, "Member 'AProp_QuestInteractable_TimeTrials_C::AlarmClock' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, InteractPlacement) == 0x000BE0, "Member 'AProp_QuestInteractable_TimeTrials_C::InteractPlacement' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, AmbientGodBeamFX) == 0x000BE8, "Member 'AProp_QuestInteractable_TimeTrials_C::AmbientGodBeamFX' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP8Coll) == 0x000BF0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP8Coll' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail7) == 0x000BF8, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail7' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocations7) == 0x000C00, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocations7' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint8) == 0x000C08, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail6) == 0x000C10, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail6' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail5) == 0x000C18, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail5' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail4) == 0x000C20, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail3) == 0x000C28, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail3' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail2) == 0x000C30, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail2' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail1) == 0x000C38, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail1' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_Trail) == 0x000C40, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_Trail' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation6) == 0x000C48, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation6' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation5) == 0x000C50, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation5' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation4) == 0x000C58, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation3) == 0x000C60, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation3' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation2) == 0x000C68, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation2' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation1) == 0x000C70, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation1' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, P_TimedChallenge_InWorldLocation) == 0x000C78, "Member 'AProp_QuestInteractable_TimeTrials_C::P_TimedChallenge_InWorldLocation' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP7Collision) == 0x000C80, "Member 'AProp_QuestInteractable_TimeTrials_C::CP7Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint7) == 0x000C88, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint7' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP6Collision) == 0x000C90, "Member 'AProp_QuestInteractable_TimeTrials_C::CP6Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint6) == 0x000C98, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint6' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP5Collision) == 0x000CA0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP5Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint5) == 0x000CA8, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint5' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP4Collision) == 0x000CB0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP4Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint4) == 0x000CB8, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP3Colllision) == 0x000CC0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP3Colllision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint3) == 0x000CC8, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint3' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2Collision) == 0x000CD0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint2) == 0x000CD8, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint2' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Collision) == 0x000CE0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Collision' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Checkpoint1) == 0x000CE8, "Member 'AProp_QuestInteractable_TimeTrials_C::Checkpoint1' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, AmbientLight) == 0x000CF0, "Member 'AProp_QuestInteractable_TimeTrials_C::AmbientLight' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, AmbientSound) == 0x000CF8, "Member 'AProp_QuestInteractable_TimeTrials_C::AmbientSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_1_NewTrack_0_92F521FF45B403E2B0085896F0368CBD) == 0x000D00, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_1_NewTrack_0_92F521FF45B403E2B0085896F0368CBD' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_1__Direction_92F521FF45B403E2B0085896F0368CBD) == 0x000D04, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_1__Direction_92F521FF45B403E2B0085896F0368CBD' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_1) == 0x000D08, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TIMER_VISUALS_BurstTime_C932E683484067425FBCB8820D8FCBB8) == 0x000D10, "Member 'AProp_QuestInteractable_TimeTrials_C::TIMER_VISUALS_BurstTime_C932E683484067425FBCB8820D8FCBB8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TIMER_VISUALS_FadeTime_C932E683484067425FBCB8820D8FCBB8) == 0x000D14, "Member 'AProp_QuestInteractable_TimeTrials_C::TIMER_VISUALS_FadeTime_C932E683484067425FBCB8820D8FCBB8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TIMER_VISUALS__Direction_C932E683484067425FBCB8820D8FCBB8) == 0x000D18, "Member 'AProp_QuestInteractable_TimeTrials_C::TIMER_VISUALS__Direction_C932E683484067425FBCB8820D8FCBB8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TIMER_VISUALS) == 0x000D20, "Member 'AProp_QuestInteractable_TimeTrials_C::TIMER_VISUALS' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_0_ClockShrinkTime_A251E41D426C6D8A20303A9CA9903A48) == 0x000D28, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_0_ClockShrinkTime_A251E41D426C6D8A20303A9CA9903A48' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_0_MoveTime_A251E41D426C6D8A20303A9CA9903A48) == 0x000D2C, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_0_MoveTime_A251E41D426C6D8A20303A9CA9903A48' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_0__Direction_A251E41D426C6D8A20303A9CA9903A48) == 0x000D30, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_0__Direction_A251E41D426C6D8A20303A9CA9903A48' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Timeline_0) == 0x000D38, "Member 'AProp_QuestInteractable_TimeTrials_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, FailFade_FadeTime_EB31C2E74E2EC89E95E918A2A65023D8) == 0x000D40, "Member 'AProp_QuestInteractable_TimeTrials_C::FailFade_FadeTime_EB31C2E74E2EC89E95E918A2A65023D8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, FailFade__Direction_EB31C2E74E2EC89E95E918A2A65023D8) == 0x000D44, "Member 'AProp_QuestInteractable_TimeTrials_C::FailFade__Direction_EB31C2E74E2EC89E95E918A2A65023D8' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, FailFade) == 0x000D48, "Member 'AProp_QuestInteractable_TimeTrials_C::FailFade' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2Movement_MoveTime_705803EC4F97916856CB7EB6950DBFDF) == 0x000D50, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2Movement_MoveTime_705803EC4F97916856CB7EB6950DBFDF' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2Movement__Direction_705803EC4F97916856CB7EB6950DBFDF) == 0x000D54, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2Movement__Direction_705803EC4F97916856CB7EB6950DBFDF' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2Movement) == 0x000D58, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2Movement' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Movement_ClockShrinkTime_A4EEC2064632AE1BA2736DA535C3A1C4) == 0x000D60, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Movement_ClockShrinkTime_A4EEC2064632AE1BA2736DA535C3A1C4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Movement_MoveTime_A4EEC2064632AE1BA2736DA535C3A1C4) == 0x000D64, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Movement_MoveTime_A4EEC2064632AE1BA2736DA535C3A1C4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Movement__Direction_A4EEC2064632AE1BA2736DA535C3A1C4) == 0x000D68, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Movement__Direction_A4EEC2064632AE1BA2736DA535C3A1C4' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Movement) == 0x000D70, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Movement' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, InteractText) == 0x000D78, "Member 'AProp_QuestInteractable_TimeTrials_C::InteractText' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestItem) == 0x000D90, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestItem' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestBackendObjectiveName) == 0x000D98, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestBackendObjectiveName' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestSuccessSound) == 0x000DA0, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestSuccessSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestSuccessFX) == 0x000DA8, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestSuccessFX' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestTag) == 0x000DB0, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestTag' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, QuestCompleted) == 0x000DD0, "Member 'AProp_QuestInteractable_TimeTrials_C::QuestCompleted' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, IsLocallyValid) == 0x000DD1, "Member 'AProp_QuestInteractable_TimeTrials_C::IsLocallyValid' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1_Location) == 0x000DD4, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2_Location) == 0x000DE0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP3_Location) == 0x000DEC, "Member 'AProp_QuestInteractable_TimeTrials_C::CP3_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, NumCPsHit) == 0x000DF8, "Member 'AProp_QuestInteractable_TimeTrials_C::NumCPsHit' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialTime) == 0x000DFC, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialTime' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TrialTimer) == 0x000E00, "Member 'AProp_QuestInteractable_TimeTrials_C::TrialTimer' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CPNumPlacement) == 0x000E08, "Member 'AProp_QuestInteractable_TimeTrials_C::CPNumPlacement' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP4_Location) == 0x000E0C, "Member 'AProp_QuestInteractable_TimeTrials_C::CP4_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP5_Location) == 0x000E18, "Member 'AProp_QuestInteractable_TimeTrials_C::CP5_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP6_Location) == 0x000E24, "Member 'AProp_QuestInteractable_TimeTrials_C::CP6_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP7_Location) == 0x000E30, "Member 'AProp_QuestInteractable_TimeTrials_C::CP7_Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CPTriggeredFX) == 0x000E40, "Member 'AProp_QuestInteractable_TimeTrials_C::CPTriggeredFX' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CPTriggeredSound) == 0x000E48, "Member 'AProp_QuestInteractable_TimeTrials_C::CPTriggeredSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP1Mat) == 0x000E50, "Member 'AProp_QuestInteractable_TimeTrials_C::CP1Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP2Mat) == 0x000E58, "Member 'AProp_QuestInteractable_TimeTrials_C::CP2Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP3Mat) == 0x000E60, "Member 'AProp_QuestInteractable_TimeTrials_C::CP3Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP4Mat) == 0x000E68, "Member 'AProp_QuestInteractable_TimeTrials_C::CP4Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP5Mat) == 0x000E70, "Member 'AProp_QuestInteractable_TimeTrials_C::CP5Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP6Mat) == 0x000E78, "Member 'AProp_QuestInteractable_TimeTrials_C::CP6Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP7Mat) == 0x000E80, "Member 'AProp_QuestInteractable_TimeTrials_C::CP7Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimerStartedSound) == 0x000E88, "Member 'AProp_QuestInteractable_TimeTrials_C::TimerStartedSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimerSound) == 0x000E90, "Member 'AProp_QuestInteractable_TimeTrials_C::TimerSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TriggeredSound) == 0x000E98, "Member 'AProp_QuestInteractable_TimeTrials_C::TriggeredSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TotalCPNumber) == 0x000EA0, "Member 'AProp_QuestInteractable_TimeTrials_C::TotalCPNumber' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Success) == 0x000EA4, "Member 'AProp_QuestInteractable_TimeTrials_C::Success' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialSuccessFX) == 0x000EA8, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialSuccessFX' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialActivationFX) == 0x000EB0, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialActivationFX' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeForCPsToMoveIntoPlace) == 0x000EB8, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeForCPsToMoveIntoPlace' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TestSetup) == 0x000EBC, "Member 'AProp_QuestInteractable_TimeTrials_C::TestSetup' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP8Mat) == 0x000EC0, "Member 'AProp_QuestInteractable_TimeTrials_C::CP8Mat' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP8Location) == 0x000EC8, "Member 'AProp_QuestInteractable_TimeTrials_C::CP8Location' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, Runners) == 0x000ED8, "Member 'AProp_QuestInteractable_TimeTrials_C::Runners' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, FoundRunner) == 0x000EE8, "Member 'AProp_QuestInteractable_TimeTrials_C::FoundRunner' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CheckRunnersTimeDelta) == 0x000EEC, "Member 'AProp_QuestInteractable_TimeTrials_C::CheckRunnersTimeDelta' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialSuccessSound) == 0x000EF0, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialSuccessSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialFailureSound) == 0x000EF8, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialFailureSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CP_Hit_Pitch_Mulitplier) == 0x000F00, "Member 'AProp_QuestInteractable_TimeTrials_C::CP_Hit_Pitch_Mulitplier' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimeTrialRunning) == 0x000F04, "Member 'AProp_QuestInteractable_TimeTrials_C::TimeTrialRunning' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimerNumberLookup) == 0x000F08, "Member 'AProp_QuestInteractable_TimeTrials_C::TimerNumberLookup' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimerFinalSecondsSound) == 0x000F18, "Member 'AProp_QuestInteractable_TimeTrials_C::TimerFinalSecondsSound' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, SafetyTimer) == 0x000F20, "Member 'AProp_QuestInteractable_TimeTrials_C::SafetyTimer' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, TimerBuffer) == 0x000F28, "Member 'AProp_QuestInteractable_TimeTrials_C::TimerBuffer' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CreativeMode) == 0x000F2C, "Member 'AProp_QuestInteractable_TimeTrials_C::CreativeMode' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, ServerGraceTime) == 0x000F30, "Member 'AProp_QuestInteractable_TimeTrials_C::ServerGraceTime' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, bIsVehicleTimeTrial) == 0x000F34, "Member 'AProp_QuestInteractable_TimeTrials_C::bIsVehicleTimeTrial' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, VehicleInteractText) == 0x000F38, "Member 'AProp_QuestInteractable_TimeTrials_C::VehicleInteractText' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CurrentBottomClockScale) == 0x000F50, "Member 'AProp_QuestInteractable_TimeTrials_C::CurrentBottomClockScale' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CPArray) == 0x000F60, "Member 'AProp_QuestInteractable_TimeTrials_C::CPArray' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, GateArray) == 0x000F70, "Member 'AProp_QuestInteractable_TimeTrials_C::GateArray' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CurrentBottomClock) == 0x000F80, "Member 'AProp_QuestInteractable_TimeTrials_C::CurrentBottomClock' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, CPArrayAndInitial) == 0x000F88, "Member 'AProp_QuestInteractable_TimeTrials_C::CPArrayAndInitial' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, bLockFlagZRot) == 0x000F98, "Member 'AProp_QuestInteractable_TimeTrials_C::bLockFlagZRot' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, IsQuestShared) == 0x000F99, "Member 'AProp_QuestInteractable_TimeTrials_C::IsQuestShared' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, ExcludeVehicles) == 0x000F9A, "Member 'AProp_QuestInteractable_TimeTrials_C::ExcludeVehicles' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, VehicleTag) == 0x000FA0, "Member 'AProp_QuestInteractable_TimeTrials_C::VehicleTag' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, PlayerInVehicleTag) == 0x000FC0, "Member 'AProp_QuestInteractable_TimeTrials_C::PlayerInVehicleTag' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, MoveZToWaterSurface) == 0x000FE0, "Member 'AProp_QuestInteractable_TimeTrials_C::MoveZToWaterSurface' has a wrong offset!");
static_assert(offsetof(AProp_QuestInteractable_TimeTrials_C, SubmergeCheckCount) == 0x000FE4, "Member 'AProp_QuestInteractable_TimeTrials_C::SubmergeCheckCount' has a wrong offset!");

}

