#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_CurieState_ElementAttached_Fire

#include "Basic.hpp"

#include "GCNL_CurieState_ElementAttached_Fire_classes.hpp"
#include "GCNL_CurieState_ElementAttached_Fire_parameters.hpp"


namespace SDK
{

// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.ExecuteUbergraph_GCNL_CurieState_ElementAttached_Fire
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::ExecuteUbergraph_GCNL_CurieState_ElementAttached_Fire(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "ExecuteUbergraph_GCNL_CurieState_ElementAttached_Fire");

	Params::GCNL_CurieState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_CurieState_ElementAttached_Fire Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.FadeBodyFXOut
// (BlueprintCallable, BlueprintEvent)

void AGCNL_CurieState_ElementAttached_Fire_C::FadeBodyFXOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "FadeBodyFXOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.OnApplication
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UParticleSystemComponent*> ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<class UAudioComponent*>          AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UCameraShake*                     BurstCameraShakeInstance                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADecalActor*                      BurstDecalInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::OnApplication(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "OnApplication");

	Params::GCNL_CurieState_ElementAttached_Fire_C_OnApplication Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = move(Parameters);
	Parms.ParticleComponents = move(ParticleComponents);
	Parms.AudioComponents = move(AudioComponents);
	Parms.BurstCameraShakeInstance = BurstCameraShakeInstance;
	Parms.BurstDecalInstance = BurstDecalInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.OnRemoval
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UParticleSystemComponent*> ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<class UAudioComponent*>          AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UCameraShake*                     BurstCameraShakeInstance                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADecalActor*                      BurstDecalInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "OnRemoval");

	Params::GCNL_CurieState_ElementAttached_Fire_C_OnRemoval Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = move(Parameters);
	Parms.ParticleComponents = move(ParticleComponents);
	Parms.AudioComponents = move(AudioComponents);
	Parms.BurstCameraShakeInstance = BurstCameraShakeInstance;
	Parms.BurstDecalInstance = BurstDecalInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.SetBodyFXParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EB_Enum_PlayerFireStates                Param_PreviousPlayerFireState                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::SetBodyFXParameters(EB_Enum_PlayerFireStates Param_PreviousPlayerFireState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "SetBodyFXParameters");

	Params::GCNL_CurieState_ElementAttached_Fire_C_SetBodyFXParameters Parms{};

	Parms.Param_PreviousPlayerFireState = Param_PreviousPlayerFireState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.GetPlayerFireState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EB_Enum_PlayerFireStates                Player_State                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::GetPlayerFireState(EB_Enum_PlayerFireStates* Player_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "GetPlayerFireState");

	Params::GCNL_CurieState_ElementAttached_Fire_C_GetPlayerFireState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_State != nullptr)
		*Player_State = Parms.Player_State;
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.OnCurieStateChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCurieContainerHandle            ContainerHandle                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     StateIdentifier                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::OnCurieStateChanged(class UObject* Param_Owner, const struct FCurieContainerHandle& ContainerHandle, const struct FGameplayTag& StateIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "OnCurieStateChanged");

	Params::GCNL_CurieState_ElementAttached_Fire_C_OnCurieStateChanged Parms{};

	Parms.Param_Owner = Param_Owner;
	Parms.ContainerHandle = move(ContainerHandle);
	Parms.StateIdentifier = move(StateIdentifier);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.ActivateBodyFX
// (Public, BlueprintCallable, BlueprintEvent)

void AGCNL_CurieState_ElementAttached_Fire_C::ActivateBodyFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "ActivateBodyFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.DeactivateBodyFX
// (Public, BlueprintCallable, BlueprintEvent)

void AGCNL_CurieState_ElementAttached_Fire_C::DeactivateBodyFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "DeactivateBodyFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.UpdatePlayerVisualsByState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EB_Enum_PlayerFireStates                PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_CurieState_ElementAttached_Fire_C::UpdatePlayerVisualsByState(EB_Enum_PlayerFireStates PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "UpdatePlayerVisualsByState");

	Params::GCNL_CurieState_ElementAttached_Fire_C_UpdatePlayerVisualsByState Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.ClearAllHandles
// (Public, BlueprintCallable, BlueprintEvent)

void AGCNL_CurieState_ElementAttached_Fire_C::ClearAllHandles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "ClearAllHandles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C.FadeOnFireAudioComponent
// (Public, BlueprintCallable, BlueprintEvent)

void AGCNL_CurieState_ElementAttached_Fire_C::FadeOnFireAudioComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_CurieState_ElementAttached_Fire_C", "FadeOnFireAudioComponent");

	UObject::ProcessEvent(Func, nullptr);
}

}

