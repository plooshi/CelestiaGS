#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestVisual_XPCoin_Hidden

#include "Basic.hpp"

#include "QuestVisual_XPCoin_Hidden_classes.hpp"
#include "QuestVisual_XPCoin_Hidden_parameters.hpp"


namespace SDK
{

// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.ExecuteUbergraph_QuestVisual_XPCoin_Hidden
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQuestVisual_XPCoin_Hidden_C::ExecuteUbergraph_QuestVisual_XPCoin_Hidden(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "ExecuteUbergraph_QuestVisual_XPCoin_Hidden");

	Params::QuestVisual_XPCoin_Hidden_C_ExecuteUbergraph_QuestVisual_XPCoin_Hidden Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.BeginSpinning
// (BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::BeginSpinning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "BeginSpinning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.HidingPropDestroyed
// (BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::HidingPropDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "HidingPropDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.BindHideProp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABuildingProp*                    Param_HidingProp                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_VFXStreaks_Height                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_VFXStreaks_Radius                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_AdditionalStreaks                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_StreaksScaleMultiplier                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpawnOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_VFXStreaks_Offset                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_VFXGlowOffset                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Param_VFXGlow_Scale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQuestVisual_XPCoin_Hidden_C::BindHideProp(class ABuildingProp* Param_HidingProp, float Param_VFXStreaks_Height, float Param_VFXStreaks_Radius, float Param_AdditionalStreaks, float Param_StreaksScaleMultiplier, const struct FVector& SpawnOffset, const struct FVector& Param_VFXStreaks_Offset, const struct FVector& Param_VFXGlowOffset, const struct FVector2D& Param_VFXGlow_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "BindHideProp");

	Params::QuestVisual_XPCoin_Hidden_C_BindHideProp Parms{};

	Parms.Param_HidingProp = Param_HidingProp;
	Parms.Param_VFXStreaks_Height = Param_VFXStreaks_Height;
	Parms.Param_VFXStreaks_Radius = Param_VFXStreaks_Radius;
	Parms.Param_AdditionalStreaks = Param_AdditionalStreaks;
	Parms.Param_StreaksScaleMultiplier = Param_StreaksScaleMultiplier;
	Parms.SpawnOffset = move(SpawnOffset);
	Parms.Param_VFXStreaks_Offset = move(Param_VFXStreaks_Offset);
	Parms.Param_VFXGlowOffset = move(Param_VFXGlowOffset);
	Parms.Param_VFXGlow_Scale = move(Param_VFXGlow_Scale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.ObjectiveCompleted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQuestVisual_XPCoin_Hidden_C::ObjectiveCompleted(class AFortPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "ObjectiveCompleted");

	Params::QuestVisual_XPCoin_Hidden_C_ObjectiveCompleted Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.EndSpinning
// (BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::EndSpinning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "EndSpinning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQuestVisual_XPCoin_Hidden_C::BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");

	Params::QuestVisual_XPCoin_Hidden_C_BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AQuestVisual_XPCoin_Hidden_C::BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::QuestVisual_XPCoin_Hidden_C_BndEvt__SpinOverlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.LoopForwards
// (BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::LoopForwards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "LoopForwards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.LoopBackwards
// (BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::LoopBackwards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "LoopBackwards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.SpinTL__Start Spin__EventFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::SpinTL__Start_Spin__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "SpinTL__Start Spin__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.SpinTL__UpdateFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::SpinTL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "SpinTL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.SpinTL__FinishedFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::SpinTL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "SpinTL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.Timeline_0__FXSpawn__EventFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::Timeline_0__FXSpawn__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "Timeline_0__FXSpawn__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.PickedUp_TL__SpawnParticles__EventFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::PickedUp_TL__SpawnParticles__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "PickedUp_TL__SpawnParticles__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.PickedUp_TL__UpdateFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::PickedUp_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "PickedUp_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.PickedUp_TL__FinishedFunc
// (BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::PickedUp_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "PickedUp_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AQuestVisual_XPCoin_Hidden_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestVisual_XPCoin_Hidden.QuestVisual_XPCoin_Hidden_C.set Niagara System User Variable (Color)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQuestVisual_XPCoin_Hidden_C::Set_Niagara_System_User_Variable__Color_(class FName Param_Name, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestVisual_XPCoin_Hidden_C", "set Niagara System User Variable (Color)");

	Params::QuestVisual_XPCoin_Hidden_C_Set_Niagara_System_User_Variable__Color_ Parms{};

	Parms.Param_Name = Param_Name;
	Parms.Value = move(Value);

	UObject::ProcessEvent(Func, &Parms);
}

}

