#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LGB_MANG_Patrol_WaitAndOrLook

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LGB_MANG_Patrol_WaitAndOrLook.LGB_MANG_Patrol_WaitAndOrLook_C
// 0x0028 (0x0258 - 0x0230)
class ALGB_MANG_Patrol_WaitAndOrLook_C final : public AFortAthenaLocalGameplayBehavior
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        DirectionArrow;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeMin;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeMax;                                       // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookWhileWaiting;                                  // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_LGB_MANG_Patrol_WaitAndOrLook(int32 EntryPoint);
	void OnExecute(class AActor* Activator);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LGB_MANG_Patrol_WaitAndOrLook_C">();
	}
	static class ALGB_MANG_Patrol_WaitAndOrLook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALGB_MANG_Patrol_WaitAndOrLook_C>();
	}
};
static_assert(alignof(ALGB_MANG_Patrol_WaitAndOrLook_C) == 0x000008, "Wrong alignment on ALGB_MANG_Patrol_WaitAndOrLook_C");
static_assert(sizeof(ALGB_MANG_Patrol_WaitAndOrLook_C) == 0x000258, "Wrong size on ALGB_MANG_Patrol_WaitAndOrLook_C");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, UberGraphFrame) == 0x000230, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, DirectionArrow) == 0x000238, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::DirectionArrow' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, TextRender) == 0x000240, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::TextRender' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, WaitTimeMin) == 0x000248, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::WaitTimeMin' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, WaitTimeMax) == 0x00024C, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::WaitTimeMax' has a wrong offset!");
static_assert(offsetof(ALGB_MANG_Patrol_WaitAndOrLook_C, LookWhileWaiting) == 0x000250, "Member 'ALGB_MANG_Patrol_WaitAndOrLook_C::LookWhileWaiting' has a wrong offset!");

}

