#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CameraLens_Geyser

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_CameraLens_Geyser.B_CameraLens_Geyser_C.ExecuteUbergraph_B_CameraLens_Geyser
// 0x000C (0x000C - 0x0000)
struct B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingDetailMode_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser) == 0x000004, "Wrong alignment on B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser");
static_assert(sizeof(B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser) == 0x00000C, "Wrong size on B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser");
static_assert(offsetof(B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser, EntryPoint) == 0x000000, "Member 'B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser, CallFunc_GetRenderingDetailMode_ReturnValue) == 0x000004, "Member 'B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser::CallFunc_GetRenderingDetailMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'B_CameraLens_Geyser_C_ExecuteUbergraph_B_CameraLens_Geyser::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

