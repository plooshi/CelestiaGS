#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SW_Interrupt

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BP_SW_Interrupt.BP_SW_Interrupt_C.ExecuteUbergraph_BP_SW_Interrupt
// 0x0018 (0x0018 - 0x0000)
struct BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7ED5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt) == 0x000008, "Wrong alignment on BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt");
static_assert(sizeof(BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt) == 0x000018, "Wrong size on BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt");
static_assert(offsetof(BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt, EntryPoint) == 0x000000, "Member 'BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt, K2Node_Event_InteractingPawn) == 0x000008, "Member 'BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt, K2Node_Event_InteractionBeingAttempted) == 0x000010, "Member 'BP_SW_Interrupt_C_ExecuteUbergraph_BP_SW_Interrupt::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");

// Function BP_SW_Interrupt.BP_SW_Interrupt_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_SW_Interrupt_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SW_Interrupt_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on BP_SW_Interrupt_C_BlueprintOnInteract");
static_assert(sizeof(BP_SW_Interrupt_C_BlueprintOnInteract) == 0x000010, "Wrong size on BP_SW_Interrupt_C_BlueprintOnInteract");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'BP_SW_Interrupt_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'BP_SW_Interrupt_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function BP_SW_Interrupt.BP_SW_Interrupt_C.ShouldDie
// 0x0020 (0x0020 - 0x0000)
struct BP_SW_Interrupt_C_ShouldDie final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7ED6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SW_Interrupt_C_ShouldDie) == 0x000008, "Wrong alignment on BP_SW_Interrupt_C_ShouldDie");
static_assert(sizeof(BP_SW_Interrupt_C_ShouldDie) == 0x000020, "Wrong size on BP_SW_Interrupt_C_ShouldDie");
static_assert(offsetof(BP_SW_Interrupt_C_ShouldDie, Damage) == 0x000000, "Member 'BP_SW_Interrupt_C_ShouldDie::Damage' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_ShouldDie, EventInstigator) == 0x000008, "Member 'BP_SW_Interrupt_C_ShouldDie::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_ShouldDie, DamageCauser) == 0x000010, "Member 'BP_SW_Interrupt_C_ShouldDie::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_ShouldDie, ReturnValue) == 0x000018, "Member 'BP_SW_Interrupt_C_ShouldDie::ReturnValue' has a wrong offset!");

// Function BP_SW_Interrupt.BP_SW_Interrupt_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_SW_Interrupt_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckActorHasTags_bDidActorHaveTags; // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SW_Interrupt_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on BP_SW_Interrupt_C_BlueprintCanInteract");
static_assert(sizeof(BP_SW_Interrupt_C_BlueprintCanInteract) == 0x000010, "Wrong size on BP_SW_Interrupt_C_BlueprintCanInteract");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'BP_SW_Interrupt_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'BP_SW_Interrupt_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'BP_SW_Interrupt_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'BP_SW_Interrupt_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintCanInteract, CallFunc_Athena_CheckActorHasTags_bDidActorHaveTags) == 0x00000B, "Member 'BP_SW_Interrupt_C_BlueprintCanInteract::CallFunc_Athena_CheckActorHasTags_bDidActorHaveTags' has a wrong offset!");

// Function BP_SW_Interrupt.BP_SW_Interrupt_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct BP_SW_Interrupt_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7ED7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_SW_Interrupt_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on BP_SW_Interrupt_C_BlueprintGetInteractionString");
static_assert(sizeof(BP_SW_Interrupt_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on BP_SW_Interrupt_C_BlueprintGetInteractionString");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'BP_SW_Interrupt_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'BP_SW_Interrupt_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BP_SW_Interrupt_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'BP_SW_Interrupt_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

}

