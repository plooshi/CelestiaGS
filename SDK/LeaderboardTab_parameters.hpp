#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LeaderboardTab

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LeaderboardTab.LeaderboardTab_C.Colorize
// 0x0170 (0x0170 - 0x0000)
struct LeaderboardTab_C_Colorize final
{
public:
	struct FFortTournamentDisplayInfo             Color_Info;                                        // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LeaderboardTab_C_Colorize) == 0x000008, "Wrong alignment on LeaderboardTab_C_Colorize");
static_assert(sizeof(LeaderboardTab_C_Colorize) == 0x000170, "Wrong size on LeaderboardTab_C_Colorize");
static_assert(offsetof(LeaderboardTab_C_Colorize, Color_Info) == 0x000000, "Member 'LeaderboardTab_C_Colorize::Color_Info' has a wrong offset!");

// Function LeaderboardTab.LeaderboardTab_C.Set Event
// 0x0020 (0x0020 - 0x0000)
struct LeaderboardTab_C_Set_Event final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventWindowId;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderboardTab_C_Set_Event) == 0x000008, "Wrong alignment on LeaderboardTab_C_Set_Event");
static_assert(sizeof(LeaderboardTab_C_Set_Event) == 0x000020, "Wrong size on LeaderboardTab_C_Set_Event");
static_assert(offsetof(LeaderboardTab_C_Set_Event, EventId) == 0x000000, "Member 'LeaderboardTab_C_Set_Event::EventId' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_Set_Event, EventWindowId) == 0x000010, "Member 'LeaderboardTab_C_Set_Event::EventWindowId' has a wrong offset!");

// Function LeaderboardTab.LeaderboardTab_C.ExecuteUbergraph_LeaderboardTab
// 0x01C8 (0x01C8 - 0x0000)
struct LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_773D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULeaderboardListViewWrapper_C*          K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventId;                        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventWindowId;                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFortTournamentDisplayInfo             K2Node_CustomEvent_Color_Info;                     // 0x0038(0x0170)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULeaderboardListViewWrapper_C*          K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper_1; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab) == 0x000008, "Wrong alignment on LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab");
static_assert(sizeof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab) == 0x0001C8, "Wrong size on LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, EntryPoint) == 0x000000, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper) == 0x000008, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_CustomEvent_EventId) == 0x000018, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_CustomEvent_EventId' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_CustomEvent_EventWindowId) == 0x000028, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_CustomEvent_EventWindowId' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_CustomEvent_Color_Info) == 0x000038, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_CustomEvent_Color_Info' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_MakeStruct_LinearColor) == 0x0001A8, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper_1) == 0x0001B8, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper_1' has a wrong offset!");
static_assert(offsetof(LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'LeaderboardTab_C_ExecuteUbergraph_LeaderboardTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

