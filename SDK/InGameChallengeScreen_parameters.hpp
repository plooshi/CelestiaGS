#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameChallengeScreen

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function InGameChallengeScreen.InGameChallengeScreen_C.ExecuteUbergraph_InGameChallengeScreen
// 0x0040 (0x0040 - 0x0000)
struct InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EAC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EAD[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0018(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBack_PassThrough;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen) == 0x000008, "Wrong alignment on InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen");
static_assert(sizeof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen) == 0x000040, "Wrong size on InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, EntryPoint) == 0x000000, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, Temp_bool_Variable) == 0x000010, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, Temp_byte_Variable) == 0x000011, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, Temp_byte_Variable_1) == 0x000012, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, K2Node_MakeStruct_DataTableRowHandle) == 0x000018, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, CallFunc_IsMobileGame_ReturnValue) == 0x000038, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, CallFunc_HandleBack_PassThrough) == 0x000039, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::CallFunc_HandleBack_PassThrough' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen, K2Node_Select_Default) == 0x00003A, "Member 'InGameChallengeScreen_C_ExecuteUbergraph_InGameChallengeScreen::K2Node_Select_Default' has a wrong offset!");

// Function InGameChallengeScreen.InGameChallengeScreen_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'InGameChallengeScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function InGameChallengeScreen.InGameChallengeScreen_C.HandleBack
// 0x0020 (0x0020 - 0x0000)
struct InGameChallengeScreen_C_HandleBack final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EAE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InGameChallengeScreen_C_HandleBack) == 0x000008, "Wrong alignment on InGameChallengeScreen_C_HandleBack");
static_assert(sizeof(InGameChallengeScreen_C_HandleBack) == 0x000020, "Wrong size on InGameChallengeScreen_C_HandleBack");
static_assert(offsetof(InGameChallengeScreen_C_HandleBack, PassThrough) == 0x000000, "Member 'InGameChallengeScreen_C_HandleBack::PassThrough' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_HandleBack, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'InGameChallengeScreen_C_HandleBack::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_HandleBack, CallFunc_GetContext_ReturnValue_1) == 0x000010, "Member 'InGameChallengeScreen_C_HandleBack::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_HandleBack, CallFunc_GetSubGame_ReturnValue) == 0x000018, "Member 'InGameChallengeScreen_C_HandleBack::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameChallengeScreen_C_HandleBack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'InGameChallengeScreen_C_HandleBack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

