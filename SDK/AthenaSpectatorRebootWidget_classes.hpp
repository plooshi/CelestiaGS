#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSpectatorRebootWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C
// 0x00B0 (0x0350 - 0x02A0)
class UAthenaSpectatorRebootWidget_C final : public UFortSpectatorRebootWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_ProgressBarFull;                              // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RebootProgressBarFillUp;                           // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ChipExpiresIn;                                // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Progress;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ResurrectionChipExpirationBar;               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   MessageText_1;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   MessageText_2;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TimeLeftText;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   AwaitingReboot;                                    // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   GrabCard;                                          // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           CardTimerHandle;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HeartbeatDisplayDelayTime;                         // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C9[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DisplayMessageHearbeatTimer;                       // 0x0328(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   RebootMomentarily;                                 // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LoadingScreenEnabled;                              // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48CA[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RebootDurationTime;                                // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void HandleOnResurrectionStateChanged();
	void DisplayChipAvailableMessage();
	void Construct();
	void Destruct();
	void HandleCardAvailableTimer();
	void OnResurrectionStateChanged();
	void HandleOnLoadScreenChanged(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, const class FText& HUDReasonText);
	void PlayRebootProgress();
	void OnFillComplete();
	void ResetProgressBar();
	void ExecuteUbergraph_AthenaSpectatorRebootWidget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaSpectatorRebootWidget_C">();
	}
	static class UAthenaSpectatorRebootWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaSpectatorRebootWidget_C>();
	}
};
static_assert(alignof(UAthenaSpectatorRebootWidget_C) == 0x000008, "Wrong alignment on UAthenaSpectatorRebootWidget_C");
static_assert(sizeof(UAthenaSpectatorRebootWidget_C) == 0x000350, "Wrong size on UAthenaSpectatorRebootWidget_C");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, UberGraphFrame) == 0x0002A0, "Member 'UAthenaSpectatorRebootWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, Anim_ProgressBarFull) == 0x0002A8, "Member 'UAthenaSpectatorRebootWidget_C::Anim_ProgressBarFull' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, RebootProgressBarFillUp) == 0x0002B0, "Member 'UAthenaSpectatorRebootWidget_C::RebootProgressBarFillUp' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, Anim_ChipExpiresIn) == 0x0002B8, "Member 'UAthenaSpectatorRebootWidget_C::Anim_ChipExpiresIn' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, Border_Progress) == 0x0002C0, "Member 'UAthenaSpectatorRebootWidget_C::Border_Progress' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, Image_ResurrectionChipExpirationBar) == 0x0002C8, "Member 'UAthenaSpectatorRebootWidget_C::Image_ResurrectionChipExpirationBar' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, MessageText_1) == 0x0002D0, "Member 'UAthenaSpectatorRebootWidget_C::MessageText_1' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, MessageText_2) == 0x0002D8, "Member 'UAthenaSpectatorRebootWidget_C::MessageText_2' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, TimeLeftText) == 0x0002E0, "Member 'UAthenaSpectatorRebootWidget_C::TimeLeftText' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, AwaitingReboot) == 0x0002E8, "Member 'UAthenaSpectatorRebootWidget_C::AwaitingReboot' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, GrabCard) == 0x000300, "Member 'UAthenaSpectatorRebootWidget_C::GrabCard' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, CardTimerHandle) == 0x000318, "Member 'UAthenaSpectatorRebootWidget_C::CardTimerHandle' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, HeartbeatDisplayDelayTime) == 0x000320, "Member 'UAthenaSpectatorRebootWidget_C::HeartbeatDisplayDelayTime' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, DisplayMessageHearbeatTimer) == 0x000328, "Member 'UAthenaSpectatorRebootWidget_C::DisplayMessageHearbeatTimer' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, RebootMomentarily) == 0x000330, "Member 'UAthenaSpectatorRebootWidget_C::RebootMomentarily' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, LoadingScreenEnabled) == 0x000348, "Member 'UAthenaSpectatorRebootWidget_C::LoadingScreenEnabled' has a wrong offset!");
static_assert(offsetof(UAthenaSpectatorRebootWidget_C, RebootDurationTime) == 0x00034C, "Member 'UAthenaSpectatorRebootWidget_C::RebootDurationTime' has a wrong offset!");

}

