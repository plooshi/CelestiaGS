#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Generic_TimerManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Generic_TimerManager.BP_Generic_TimerManager_C
// 0x0068 (0x0288 - 0x0220)
class ABP_Generic_TimerManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ServerWorldSecondsAtEvent;                         // 0x0230(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeOffsetSeconds;                                 // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CountDownTimerAccuracyfix;                         // 0x0238(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilCountdownEnd;                             // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondsRemaining;                                  // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C6[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              TimespanRemaining;                                 // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 CalendarEventName;                                 // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CountdownTimerHandle;                              // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Phase3VisualDuration;                              // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Lights_Emissive_Value;                             // 0x0274(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Generic_TimerManager(int32 EntryPoint);
	void ClearTimerVisuals();
	void ContinueClockCountdown();
	void VisualUpdateEverySecond();
	void CountdownTimer_New();
	void CountDownTimer_AccuracyFix();
	void StartFinalAccuracyadjustment();
	void ErrorCorrection();
	void ReceiveBeginPlay();
	void OnReady_B337321A443C013690B7869DF30E5BCC(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnReady_5CD17C734C5C64794A8D0BA05D00B72C();
	void OnEventActive_60E8057840996C096DE192A0F298D20C(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_60E8057840996C096DE192A0F298D20C(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_60E8057840996C096DE192A0F298D20C(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnRep_ServerWorldSecondsAtEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Generic_TimerManager_C">();
	}
	static class ABP_Generic_TimerManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Generic_TimerManager_C>();
	}
};
static_assert(alignof(ABP_Generic_TimerManager_C) == 0x000008, "Wrong alignment on ABP_Generic_TimerManager_C");
static_assert(sizeof(ABP_Generic_TimerManager_C) == 0x000288, "Wrong size on ABP_Generic_TimerManager_C");
static_assert(offsetof(ABP_Generic_TimerManager_C, UberGraphFrame) == 0x000220, "Member 'ABP_Generic_TimerManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_Generic_TimerManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, ServerWorldSecondsAtEvent) == 0x000230, "Member 'ABP_Generic_TimerManager_C::ServerWorldSecondsAtEvent' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, TimeOffsetSeconds) == 0x000234, "Member 'ABP_Generic_TimerManager_C::TimeOffsetSeconds' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, CountDownTimerAccuracyfix) == 0x000238, "Member 'ABP_Generic_TimerManager_C::CountDownTimerAccuracyfix' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, TimeUntilCountdownEnd) == 0x000240, "Member 'ABP_Generic_TimerManager_C::TimeUntilCountdownEnd' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, SecondsRemaining) == 0x000248, "Member 'ABP_Generic_TimerManager_C::SecondsRemaining' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, TimespanRemaining) == 0x000250, "Member 'ABP_Generic_TimerManager_C::TimespanRemaining' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, CalendarEventName) == 0x000258, "Member 'ABP_Generic_TimerManager_C::CalendarEventName' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, CountdownTimerHandle) == 0x000268, "Member 'ABP_Generic_TimerManager_C::CountdownTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, Phase3VisualDuration) == 0x000270, "Member 'ABP_Generic_TimerManager_C::Phase3VisualDuration' has a wrong offset!");
static_assert(offsetof(ABP_Generic_TimerManager_C, Lights_Emissive_Value) == 0x000274, "Member 'ABP_Generic_TimerManager_C::Lights_Emissive_Value' has a wrong offset!");

}

