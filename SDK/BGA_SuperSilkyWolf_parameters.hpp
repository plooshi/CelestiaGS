#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_SuperSilkyWolf

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BGA_SuperSilkyWolf.BGA_SuperSilkyWolf_C.ExecuteUbergraph_BGA_SuperSilkyWolf
// 0x01D8 (0x01D8 - 0x0000)
struct BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_662B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_662C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_662D[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_662E[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_662F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6630[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6631[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue; // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6632[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_FluidSim_FN_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_FluidSim_FN_C*                      CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6633[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6634[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6635[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaterSubsystem*                        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShallowWaterSimulationEnabled_ReturnValue; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6636[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6637[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaterSubsystem*                        CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class ABP_FluidSim_FN_C*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x01B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_FluidSim_FN_C*                      CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf) == 0x000008, "Wrong alignment on BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf");
static_assert(sizeof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf) == 0x0001D8, "Wrong size on BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, EntryPoint) == 0x000000, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OverlappedComponent_1) == 0x000008, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherActor_1) == 0x000010, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherComp_1) == 0x000018, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000020, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_bFromSweep) == 0x000024, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_SweepResult) == 0x000028, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OverlappedComponent) == 0x0000B8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherActor) == 0x0000C0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherComp) == 0x0000C8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CustomEvent_OtherBodyIndex) == 0x0000D0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_DynamicCast_AsFort_Pawn) == 0x0000D8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000E8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000F8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000100, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x000108, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000110, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue) == 0x000118, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsValid_ReturnValue_1) == 0x000121, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetAllActorsOfClass_OutActors) == 0x000128, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_Array_Get_Item) == 0x000138, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetMaterial_ReturnValue) == 0x000140, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsValid_ReturnValue_2) == 0x000148, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000150, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000158, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000168, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CreateDelegate_OutputDelegate) == 0x00016C, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000180, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsShallowWaterSimulationEnabled_ReturnValue) == 0x000188, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsShallowWaterSimulationEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CreateDelegate_OutputDelegate_1) == 0x00018C, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x0001A0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001A8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0001B8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsValid_ReturnValue_3) == 0x0001D0, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf, CallFunc_IsValid_ReturnValue_4) == 0x0001D1, "Member 'BGA_SuperSilkyWolf_C_ExecuteUbergraph_BGA_SuperSilkyWolf::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BGA_SuperSilkyWolf.BGA_SuperSilkyWolf_C.OnComponentEndOverlap_Event_0
// 0x0020 (0x0020 - 0x0000)
struct BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0) == 0x000008, "Wrong alignment on BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0");
static_assert(sizeof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0) == 0x000020, "Wrong size on BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0, OtherActor) == 0x000008, "Member 'BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0, OtherComp) == 0x000010, "Member 'BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BGA_SuperSilkyWolf_C_OnComponentEndOverlap_Event_0::OtherBodyIndex' has a wrong offset!");

// Function BGA_SuperSilkyWolf.BGA_SuperSilkyWolf_C.OnComponentBeginOverlap_Event_0
// 0x00B0 (0x00B0 - 0x0000)
struct BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6638[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0) == 0x000008, "Wrong alignment on BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0");
static_assert(sizeof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0) == 0x0000B0, "Wrong size on BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, OtherActor) == 0x000008, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, OtherComp) == 0x000010, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, bFromSweep) == 0x00001C, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0, SweepResult) == 0x000020, "Member 'BGA_SuperSilkyWolf_C_OnComponentBeginOverlap_Event_0::SweepResult' has a wrong offset!");

}

