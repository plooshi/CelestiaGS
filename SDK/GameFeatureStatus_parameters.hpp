#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameFeatureStatus

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GameFeatureStatus.GameFeatureStatus_C.HandleStatusChanged
// 0x0048 (0x0048 - 0x0000)
struct GameFeatureStatus_C_HandleStatusChanged final
{
public:
	EAthenaGameFeatureStatus                      CurrentStatus;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAthenaGameFeatureStatus                      Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74EE[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaGameFeatureStatus                      Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74EF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GameFeatureStatus_C_HandleStatusChanged) == 0x000008, "Wrong alignment on GameFeatureStatus_C_HandleStatusChanged");
static_assert(sizeof(GameFeatureStatus_C_HandleStatusChanged) == 0x000048, "Wrong size on GameFeatureStatus_C_HandleStatusChanged");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, CurrentStatus) == 0x000000, "Member 'GameFeatureStatus_C_HandleStatusChanged::CurrentStatus' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'GameFeatureStatus_C_HandleStatusChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, Temp_byte_Variable) == 0x000002, "Member 'GameFeatureStatus_C_HandleStatusChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'GameFeatureStatus_C_HandleStatusChanged::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, Temp_byte_Variable_1) == 0x000010, "Member 'GameFeatureStatus_C_HandleStatusChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, K2Node_Select_Default) == 0x000014, "Member 'GameFeatureStatus_C_HandleStatusChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'GameFeatureStatus_C_HandleStatusChanged::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'GameFeatureStatus_C_HandleStatusChanged::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, K2Node_Select_Default_1) == 0x000038, "Member 'GameFeatureStatus_C_HandleStatusChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_HandleStatusChanged, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000040, "Member 'GameFeatureStatus_C_HandleStatusChanged::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function GameFeatureStatus.GameFeatureStatus_C.OnStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct GameFeatureStatus_C_OnStatusChanged final
{
public:
	EAthenaGameFeatureStatus                      NewStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFeatureStatus_C_OnStatusChanged) == 0x000001, "Wrong alignment on GameFeatureStatus_C_OnStatusChanged");
static_assert(sizeof(GameFeatureStatus_C_OnStatusChanged) == 0x000001, "Wrong size on GameFeatureStatus_C_OnStatusChanged");
static_assert(offsetof(GameFeatureStatus_C_OnStatusChanged, NewStatus) == 0x000000, "Member 'GameFeatureStatus_C_OnStatusChanged::NewStatus' has a wrong offset!");

// Function GameFeatureStatus.GameFeatureStatus_C.ExecuteUbergraph_GameFeatureStatus
// 0x0008 (0x0008 - 0x0000)
struct GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaGameFeatureStatus                      K2Node_Event_NewStatus;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus) == 0x000004, "Wrong alignment on GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus");
static_assert(sizeof(GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus) == 0x000008, "Wrong size on GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus");
static_assert(offsetof(GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus, EntryPoint) == 0x000000, "Member 'GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus, K2Node_Event_NewStatus) == 0x000004, "Member 'GameFeatureStatus_C_ExecuteUbergraph_GameFeatureStatus::K2Node_Event_NewStatus' has a wrong offset!");

}

