#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniChallengeNotification

#include "Basic.hpp"

#include "MiniChallengeNotification_classes.hpp"
#include "MiniChallengeNotification_parameters.hpp"


namespace SDK
{

// Function MiniChallengeNotification.MiniChallengeNotification_C.ExecuteUbergraph_MiniChallengeNotification
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniChallengeNotification_C::ExecuteUbergraph_MiniChallengeNotification(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "ExecuteUbergraph_MiniChallengeNotification");

	Params::MiniChallengeNotification_C_ExecuteUbergraph_MiniChallengeNotification Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.Play Inro Sound
// (BlueprintCallable, BlueprintEvent)

void UMiniChallengeNotification_C::Play_Inro_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "Play Inro Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.WidgetAnimationEvt_Outro_K2Node_WidgetAnimationEvent_0
// (BlueprintEvent)

void UMiniChallengeNotification_C::WidgetAnimationEvt_Outro_K2Node_WidgetAnimationEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "WidgetAnimationEvt_Outro_K2Node_WidgetAnimationEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMiniChallengeNotification_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.TriggerXpToast_Event_0
// (BlueprintCallable, BlueprintEvent)

void UMiniChallengeNotification_C::TriggerXpToast_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "TriggerXpToast_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.MiniChallengeToastFinished
// (BlueprintCallable, BlueprintEvent)

void UMiniChallengeNotification_C::MiniChallengeToastFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "MiniChallengeToastFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.StartNotificationIntro
// (Event, Protected, BlueprintEvent)

void UMiniChallengeNotification_C::StartNotificationIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "StartNotificationIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MiniChallengeNotification.MiniChallengeNotification_C.StartNotificationOutro
// (Event, Public, BlueprintEvent)

void UMiniChallengeNotification_C::StartNotificationOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniChallengeNotification_C", "StartNotificationOutro");

	UObject::ProcessEvent(Func, nullptr);
}

}

