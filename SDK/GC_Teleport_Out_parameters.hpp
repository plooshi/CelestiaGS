#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Teleport_Out

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GC_Teleport_Out.GC_Teleport_Out_C.OnExecute
// 0x01F0 (0x01F0 - 0x0000)
struct GC_Teleport_Out_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BB[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72BC[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00D0(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x00F8(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0118(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnExecute_ReturnValue;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BD[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_Parent_C*           K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent;   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72BE[0xF];                                     // 0x0191(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72BF[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuplicateResOutMesh_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Teleport_Out_C_OnExecute) == 0x000010, "Wrong alignment on GC_Teleport_Out_C_OnExecute");
static_assert(sizeof(GC_Teleport_Out_C_OnExecute) == 0x0001F0, "Wrong size on GC_Teleport_Out_C_OnExecute");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_Teleport_Out_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, Parameters) == 0x000008, "Member 'GC_Teleport_Out_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, ReturnValue) == 0x0000C0, "Member 'GC_Teleport_Out_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, Temp_bool_Variable) == 0x0000C1, "Member 'GC_Teleport_Out_C_OnExecute::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000C4, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000C8, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000D0, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x0000E8, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x0000F0, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x0000F8, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000118, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_Location) == 0x000138, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_Normal) == 0x000144, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000150, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000158, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000160, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000168, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000170, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x000174, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000178, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_OnExecute_ReturnValue) == 0x000180, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_OnExecute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000181, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent) == 0x000188, "Member 'GC_Teleport_Out_C_OnExecute::K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'GC_Teleport_Out_C_OnExecute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, K2Node_Select_Default) == 0x0001D8, "Member 'GC_Teleport_Out_C_OnExecute::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GC_Teleport_Out_C_OnExecute, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E0, "Member 'GC_Teleport_Out_C_OnExecute::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

