#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_ChBrowserDeviceTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C
// 0x0068 (0x0BD8 - 0x0B70)
class UCr_ChBrowserDeviceTile_C final : public UCommonButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Border;                                      // 0x0B78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Device;                                      // 0x0B80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InputAction;                               // 0x0B88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Teleport;                                  // 0x0B90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_DeviceName;                                   // 0x0B98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_Messages;                                     // 0x0BA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   DeviceName;                                        // 0x0BA8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class AActor*                                 ActorRef;                                          // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CloseUI;                                           // 0x0BC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CloseUI__DelegateSignature();
	void ExecuteUbergraph_Cr_ChBrowserDeviceTile(int32 EntryPoint);
	void BP_OnUnhovered();
	void BP_OnHovered();
	void BP_OnDeselected();
	void BP_OnSelected();
	void BP_OnClicked();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Populate(const class FText& InName, TArray<class FText>& InTxMessages, TArray<class FText>& InRxMessages);
	void AddTxMessage(const class FText& InMessage, const class FText& InChannel);
	void Add_Rx_Message(const class FText& InMessage, const class FText& InChannel);
	void UpdateName(const class FText& InName);
	void UpdateArt(class UTexture2D* InTexture2D, const struct FSlateBrush& InSlateBrush);
	void Focus();
	void BeginFlying();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cr_ChBrowserDeviceTile_C">();
	}
	static class UCr_ChBrowserDeviceTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCr_ChBrowserDeviceTile_C>();
	}
};
static_assert(alignof(UCr_ChBrowserDeviceTile_C) == 0x000008, "Wrong alignment on UCr_ChBrowserDeviceTile_C");
static_assert(sizeof(UCr_ChBrowserDeviceTile_C) == 0x000BD8, "Wrong size on UCr_ChBrowserDeviceTile_C");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, UberGraphFrame) == 0x000B70, "Member 'UCr_ChBrowserDeviceTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Image_Border) == 0x000B78, "Member 'UCr_ChBrowserDeviceTile_C::Image_Border' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Image_Device) == 0x000B80, "Member 'UCr_ChBrowserDeviceTile_C::Image_Device' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Overlay_InputAction) == 0x000B88, "Member 'UCr_ChBrowserDeviceTile_C::Overlay_InputAction' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Overlay_Teleport) == 0x000B90, "Member 'UCr_ChBrowserDeviceTile_C::Overlay_Teleport' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Text_DeviceName) == 0x000B98, "Member 'UCr_ChBrowserDeviceTile_C::Text_DeviceName' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, VBox_Messages) == 0x000BA0, "Member 'UCr_ChBrowserDeviceTile_C::VBox_Messages' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, DeviceName) == 0x000BA8, "Member 'UCr_ChBrowserDeviceTile_C::DeviceName' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, ActorRef) == 0x000BC0, "Member 'UCr_ChBrowserDeviceTile_C::ActorRef' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, CloseUI) == 0x000BC8, "Member 'UCr_ChBrowserDeviceTile_C::CloseUI' has a wrong offset!");

}

