#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaBroadcastNameplate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaBroadcastNameplate.AthenaBroadcastNameplate_C
// 0x0090 (0x0380 - 0x02F0)
class UAthenaBroadcastNameplate_C final : public UAthenaSpectatorNameplateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          Background;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chevron;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaSpectatorHitPointBar_C*          HealthBar;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               HealthBarSB;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerName;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaSpectatorHitPointBar_C*          ShieldBar;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ShieldBarSB;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          TeamColor;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          TeamColor2;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TeamColor2SB;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TeamNumber;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TeamSB;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaSpectatorHitPointBar_C*          VehicleHealthBar;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VehicleHealthSB;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         HitPointBarNearHeight;                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitPointBarFarHeight;                              // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InVehicle;                                         // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EAthenaSpectatorNameplateDetailState          DesignTime_DetailState;                            // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignTime_InVehicle;                              // 0x037A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldColorArrow;                                  // 0x037B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AthenaBroadcastNameplate(int32 EntryPoint);
	void OnVehicleStateChanged(class AActor* NewVehicle, class AActor* OldVehicle);
	void SetArrowTeamColorVisible(bool bArrowTeamColorVisible);
	void SetTeamColorVisible(bool bTeamColorVisible);
	void SetSquadIdVisibility(bool bSquadIdVisible);
	void OnDetailStateChanged(EAthenaSpectatorNameplateDetailState NewDetailState);
	void OnSquadIdChanged(class UAthenaRemotePlayerViewData* InPlayerData, uint8 InSquadId);
	void OnPlayerNameChanged(class UAthenaRemotePlayerViewData* InPlayerData, const class FString& InPlayerName);
	void OnTeamColorChanged(class UAthenaRemotePlayerViewData* InPlayerData, const struct FLinearColor& InTeamColor);
	void OnDistanceStateChanged(EAthenaSpectatorNameplateDistanceState NewDistanceState);
	void OnPlayerDataSet(class UAthenaRemotePlayerViewData* InPlayerData);
	void PreConstruct(bool IsDesignTime);
	void UpdateBackgroundRenderScale();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaBroadcastNameplate_C">();
	}
	static class UAthenaBroadcastNameplate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaBroadcastNameplate_C>();
	}
};
static_assert(alignof(UAthenaBroadcastNameplate_C) == 0x000008, "Wrong alignment on UAthenaBroadcastNameplate_C");
static_assert(sizeof(UAthenaBroadcastNameplate_C) == 0x000380, "Wrong size on UAthenaBroadcastNameplate_C");
static_assert(offsetof(UAthenaBroadcastNameplate_C, UberGraphFrame) == 0x0002F0, "Member 'UAthenaBroadcastNameplate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, Background) == 0x0002F8, "Member 'UAthenaBroadcastNameplate_C::Background' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, Chevron) == 0x000300, "Member 'UAthenaBroadcastNameplate_C::Chevron' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, HealthBar) == 0x000308, "Member 'UAthenaBroadcastNameplate_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, HealthBarSB) == 0x000310, "Member 'UAthenaBroadcastNameplate_C::HealthBarSB' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, PlayerName) == 0x000318, "Member 'UAthenaBroadcastNameplate_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, ShieldBar) == 0x000320, "Member 'UAthenaBroadcastNameplate_C::ShieldBar' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, ShieldBarSB) == 0x000328, "Member 'UAthenaBroadcastNameplate_C::ShieldBarSB' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, SizeBox) == 0x000330, "Member 'UAthenaBroadcastNameplate_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, TeamColor) == 0x000338, "Member 'UAthenaBroadcastNameplate_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, TeamColor2) == 0x000340, "Member 'UAthenaBroadcastNameplate_C::TeamColor2' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, TeamColor2SB) == 0x000348, "Member 'UAthenaBroadcastNameplate_C::TeamColor2SB' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, TeamNumber) == 0x000350, "Member 'UAthenaBroadcastNameplate_C::TeamNumber' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, TeamSB) == 0x000358, "Member 'UAthenaBroadcastNameplate_C::TeamSB' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, VehicleHealthBar) == 0x000360, "Member 'UAthenaBroadcastNameplate_C::VehicleHealthBar' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, VehicleHealthSB) == 0x000368, "Member 'UAthenaBroadcastNameplate_C::VehicleHealthSB' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, HitPointBarNearHeight) == 0x000370, "Member 'UAthenaBroadcastNameplate_C::HitPointBarNearHeight' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, HitPointBarFarHeight) == 0x000374, "Member 'UAthenaBroadcastNameplate_C::HitPointBarFarHeight' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, InVehicle) == 0x000378, "Member 'UAthenaBroadcastNameplate_C::InVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, DesignTime_DetailState) == 0x000379, "Member 'UAthenaBroadcastNameplate_C::DesignTime_DetailState' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, DesignTime_InVehicle) == 0x00037A, "Member 'UAthenaBroadcastNameplate_C::DesignTime_InVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastNameplate_C, ShouldColorArrow) == 0x00037B, "Member 'UAthenaBroadcastNameplate_C::ShouldColorArrow' has a wrong offset!");

}

