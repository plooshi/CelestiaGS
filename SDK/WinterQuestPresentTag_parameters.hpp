#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinterQuestPresentTag

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WinterQuestPresentTag.WinterQuestPresentTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WinterQuestPresentTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WinterQuestPresentTag_C_PreConstruct) == 0x000001, "Wrong alignment on WinterQuestPresentTag_C_PreConstruct");
static_assert(sizeof(WinterQuestPresentTag_C_PreConstruct) == 0x000001, "Wrong size on WinterQuestPresentTag_C_PreConstruct");
static_assert(offsetof(WinterQuestPresentTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WinterQuestPresentTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WinterQuestPresentTag.WinterQuestPresentTag_C.OnSetupCharacterNameTag
// 0x0010 (0x0010 - 0x0000)
struct WinterQuestPresentTag_C_OnSetupCharacterNameTag final
{
public:
	struct FLinearColor                           CharacterName;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentTag_C_OnSetupCharacterNameTag) == 0x000004, "Wrong alignment on WinterQuestPresentTag_C_OnSetupCharacterNameTag");
static_assert(sizeof(WinterQuestPresentTag_C_OnSetupCharacterNameTag) == 0x000010, "Wrong size on WinterQuestPresentTag_C_OnSetupCharacterNameTag");
static_assert(offsetof(WinterQuestPresentTag_C_OnSetupCharacterNameTag, CharacterName) == 0x000000, "Member 'WinterQuestPresentTag_C_OnSetupCharacterNameTag::CharacterName' has a wrong offset!");

// Function WinterQuestPresentTag.WinterQuestPresentTag_C.ExecuteUbergraph_WinterQuestPresentTag
// 0x0138 (0x0138 - 0x0000)
struct WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750A[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750B[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_750C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_750D[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_CharacterName;                        // 0x00A8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue_1;    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue_2;    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue_3;    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue_4;    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750E[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x00D8(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x00F0(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x0108(0x0018)()
	class FText                                   K2Node_Select_Default_7;                           // 0x0120(0x0018)()
};
static_assert(alignof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag) == 0x000008, "Wrong alignment on WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag");
static_assert(sizeof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag) == 0x000138, "Wrong size on WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, EntryPoint) == 0x000000, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_struct_Variable) == 0x000004, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_struct_Variable_1) == 0x000014, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_struct_Variable_2) == 0x000024, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_int_Variable) == 0x000034, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable) == 0x000038, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable_1) == 0x00003C, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable_2) == 0x000040, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_int_Variable_1) == 0x000044, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable_3) == 0x000048, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable_4) == 0x00004C, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_float_Variable_5) == 0x000050, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default) == 0x000054, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_1) == 0x000058, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_bool_Variable) == 0x00005C, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_MakeStruct_Margin) == 0x000060, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_bool_Variable_1) == 0x000070, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_bool_Variable_2) == 0x000071, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_bool_Variable_3) == 0x000072, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_bool_Variable_4) == 0x000073, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Event_IsDesignTime) == 0x000074, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_RandomInteger_ReturnValue) == 0x000078, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, Temp_int_Variable_2) == 0x000088, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000090, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_2) == 0x000098, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Event_CharacterName) == 0x0000A8, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Event_CharacterName' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_LinearColor_IsNearEqual_ReturnValue) == 0x0000B8, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_LinearColor_IsNearEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_LinearColor_IsNearEqual_ReturnValue_1) == 0x0000B9, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_LinearColor_IsNearEqual_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_LinearColor_IsNearEqual_ReturnValue_2) == 0x0000BA, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_LinearColor_IsNearEqual_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_LinearColor_IsNearEqual_ReturnValue_3) == 0x0000BB, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_LinearColor_IsNearEqual_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, CallFunc_LinearColor_IsNearEqual_ReturnValue_4) == 0x0000BC, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::CallFunc_LinearColor_IsNearEqual_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_3) == 0x0000C0, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_4) == 0x0000D8, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_5) == 0x0000F0, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_6) == 0x000108, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag, K2Node_Select_Default_7) == 0x000120, "Member 'WinterQuestPresentTag_C_ExecuteUbergraph_WinterQuestPresentTag::K2Node_Select_Default_7' has a wrong offset!");

}

