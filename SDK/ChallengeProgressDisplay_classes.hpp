#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeProgressDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeProgressDisplay.ChallengeProgressDisplay_C
// 0x0020 (0x0260 - 0x0240)
class UChallengeProgressDisplay_C final : public UAthenaChallengeProgressBar
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SelectedHovered;                                   // 0x0248(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxProgressContainer;                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Text_Desired_Minimum_Width;                        // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChallengeProgressDisplay(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SelectedHoveredFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeProgressDisplay_C">();
	}
	static class UChallengeProgressDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeProgressDisplay_C>();
	}
};
static_assert(alignof(UChallengeProgressDisplay_C) == 0x000008, "Wrong alignment on UChallengeProgressDisplay_C");
static_assert(sizeof(UChallengeProgressDisplay_C) == 0x000260, "Wrong size on UChallengeProgressDisplay_C");
static_assert(offsetof(UChallengeProgressDisplay_C, UberGraphFrame) == 0x000240, "Member 'UChallengeProgressDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeProgressDisplay_C, SelectedHovered) == 0x000248, "Member 'UChallengeProgressDisplay_C::SelectedHovered' has a wrong offset!");
static_assert(offsetof(UChallengeProgressDisplay_C, SizeBoxProgressContainer) == 0x000250, "Member 'UChallengeProgressDisplay_C::SizeBoxProgressContainer' has a wrong offset!");
static_assert(offsetof(UChallengeProgressDisplay_C, Text_Desired_Minimum_Width) == 0x000258, "Member 'UChallengeProgressDisplay_C::Text_Desired_Minimum_Width' has a wrong offset!");

}

