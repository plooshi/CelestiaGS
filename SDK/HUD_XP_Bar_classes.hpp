#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_XP_Bar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_XP_Bar.HUD_XP_Bar_C
// 0x0150 (0x03F8 - 0x02A8)
class UHUD_XP_Bar_C final : public UAthenaXPBarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimateDeltaGlow;                                  // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DO_NOT_USE_ShowDelta;                              // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DO_NOT_USE_XPScreenLayout;                         // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DO_NOT_USE_AnimateDeltaGlow;                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DO_NOT_USE_Intro;                                  // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DO_NOT_USE_Outro;                                  // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFortSimpleWidgetAnimationsPanel*       AnimationsPanel;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Border_GlowScale;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_canvas;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_GlowScale;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_PlayerLevel_title;                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_PlayerLevel_Value;                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_superchargetext;                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_xpstats;                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           DeltaBar;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DeltaGlow;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxisRested;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_FlareCross;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RestXPMarker;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_spikeball;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FuseSpark;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayFullContainer;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayTopLevel;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URestedIcon_C*                          RestedIcon;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Container;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Glow;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_InnerSize;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           XpBar;                                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsRested;                                          // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABA[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   RestedColor;                                       // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   NotRestedColor;                                    // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         XPCurrent;                                         // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XPTarget;                                          // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewXPPercent;                                      // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeltaAnimated;                                   // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABB[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HideBarTimerHandle;                                // 0x03C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          XpBarHidden;                                       // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanFadeXPBar;                                      // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsXPLayout;                                        // 0x03D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABC[0x1];                                     // 0x03D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaAnimSpeed;                                    // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Anim_Intro;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Anim_Outro;                                        // 0x03E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Anim_ShowDelta;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Anim_AnimateDeltaGlow;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateBar(int32 XpToGain, int32 CurrentDisplayXp, int32 XpToLevel, int32 CurrentLevel, int32 TotalRestXpRemaining, bool bIsXPBarOnly);
	void InitilizeBar(int32 CurrentLevel, int32 CurrentXp, int32 TotalXp);
	void PreConstruct(bool IsDesignTime);
	void SetRestedVisuals();
	void UpdateRestXP(int32 RestXpRemaining);
	void HideXpBar();
	void XpBarFillFinished();
	void EventXPLayout(class FName Placement);
	void Construct();
	void ExecuteUbergraph_HUD_XP_Bar(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_XP_Bar_C">();
	}
	static class UHUD_XP_Bar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_XP_Bar_C>();
	}
};
static_assert(alignof(UHUD_XP_Bar_C) == 0x000008, "Wrong alignment on UHUD_XP_Bar_C");
static_assert(sizeof(UHUD_XP_Bar_C) == 0x0003F8, "Wrong size on UHUD_XP_Bar_C");
static_assert(offsetof(UHUD_XP_Bar_C, UberGraphFrame) == 0x0002A8, "Member 'UHUD_XP_Bar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, AnimateDeltaGlow) == 0x0002B0, "Member 'UHUD_XP_Bar_C::AnimateDeltaGlow' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DO_NOT_USE_ShowDelta) == 0x0002B8, "Member 'UHUD_XP_Bar_C::DO_NOT_USE_ShowDelta' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DO_NOT_USE_XPScreenLayout) == 0x0002C0, "Member 'UHUD_XP_Bar_C::DO_NOT_USE_XPScreenLayout' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DO_NOT_USE_AnimateDeltaGlow) == 0x0002C8, "Member 'UHUD_XP_Bar_C::DO_NOT_USE_AnimateDeltaGlow' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DO_NOT_USE_Intro) == 0x0002D0, "Member 'UHUD_XP_Bar_C::DO_NOT_USE_Intro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DO_NOT_USE_Outro) == 0x0002D8, "Member 'UHUD_XP_Bar_C::DO_NOT_USE_Outro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, AnimationsPanel) == 0x0002E0, "Member 'UHUD_XP_Bar_C::AnimationsPanel' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Border_GlowScale) == 0x0002E8, "Member 'UHUD_XP_Bar_C::Border_GlowScale' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CanvasPanel_canvas) == 0x0002F0, "Member 'UHUD_XP_Bar_C::CanvasPanel_canvas' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CommonBorder_GlowScale) == 0x0002F8, "Member 'UHUD_XP_Bar_C::CommonBorder_GlowScale' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CommonTextBlock_PlayerLevel_title) == 0x000300, "Member 'UHUD_XP_Bar_C::CommonTextBlock_PlayerLevel_title' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CommonTextBlock_PlayerLevel_Value) == 0x000308, "Member 'UHUD_XP_Bar_C::CommonTextBlock_PlayerLevel_Value' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CommonTextBlock_superchargetext) == 0x000310, "Member 'UHUD_XP_Bar_C::CommonTextBlock_superchargetext' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CommonTextBlock_xpstats) == 0x000318, "Member 'UHUD_XP_Bar_C::CommonTextBlock_xpstats' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DeltaBar) == 0x000320, "Member 'UHUD_XP_Bar_C::DeltaBar' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DeltaGlow) == 0x000328, "Member 'UHUD_XP_Bar_C::DeltaGlow' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, HorizontalBoxisRested) == 0x000330, "Member 'UHUD_XP_Bar_C::HorizontalBoxisRested' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Image_FlareCross) == 0x000338, "Member 'UHUD_XP_Bar_C::Image_FlareCross' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Image_RestXPMarker) == 0x000340, "Member 'UHUD_XP_Bar_C::Image_RestXPMarker' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Image_spikeball) == 0x000348, "Member 'UHUD_XP_Bar_C::Image_spikeball' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Overlay_FuseSpark) == 0x000350, "Member 'UHUD_XP_Bar_C::Overlay_FuseSpark' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, OverlayFullContainer) == 0x000358, "Member 'UHUD_XP_Bar_C::OverlayFullContainer' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, OverlayTopLevel) == 0x000360, "Member 'UHUD_XP_Bar_C::OverlayTopLevel' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, RestedIcon) == 0x000368, "Member 'UHUD_XP_Bar_C::RestedIcon' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, SizeBox_Container) == 0x000370, "Member 'UHUD_XP_Bar_C::SizeBox_Container' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, SizeBox_Glow) == 0x000378, "Member 'UHUD_XP_Bar_C::SizeBox_Glow' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, SizeBox_InnerSize) == 0x000380, "Member 'UHUD_XP_Bar_C::SizeBox_InnerSize' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, XpBar) == 0x000388, "Member 'UHUD_XP_Bar_C::XpBar' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, IsRested) == 0x000390, "Member 'UHUD_XP_Bar_C::IsRested' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, RestedColor) == 0x000398, "Member 'UHUD_XP_Bar_C::RestedColor' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, NotRestedColor) == 0x0003A8, "Member 'UHUD_XP_Bar_C::NotRestedColor' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, XPCurrent) == 0x0003B8, "Member 'UHUD_XP_Bar_C::XPCurrent' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, XPTarget) == 0x0003BC, "Member 'UHUD_XP_Bar_C::XPTarget' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, NewXPPercent) == 0x0003C0, "Member 'UHUD_XP_Bar_C::NewXPPercent' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, IsDeltaAnimated) == 0x0003C4, "Member 'UHUD_XP_Bar_C::IsDeltaAnimated' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, HideBarTimerHandle) == 0x0003C8, "Member 'UHUD_XP_Bar_C::HideBarTimerHandle' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, XpBarHidden) == 0x0003D0, "Member 'UHUD_XP_Bar_C::XpBarHidden' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, CanFadeXPBar) == 0x0003D1, "Member 'UHUD_XP_Bar_C::CanFadeXPBar' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, IsXPLayout) == 0x0003D2, "Member 'UHUD_XP_Bar_C::IsXPLayout' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, DeltaAnimSpeed) == 0x0003D4, "Member 'UHUD_XP_Bar_C::DeltaAnimSpeed' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Anim_Intro) == 0x0003D8, "Member 'UHUD_XP_Bar_C::Anim_Intro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Anim_Outro) == 0x0003E0, "Member 'UHUD_XP_Bar_C::Anim_Outro' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Anim_ShowDelta) == 0x0003E8, "Member 'UHUD_XP_Bar_C::Anim_ShowDelta' has a wrong offset!");
static_assert(offsetof(UHUD_XP_Bar_C, Anim_AnimateDeltaGlow) == 0x0003F0, "Member 'UHUD_XP_Bar_C::Anim_AnimateDeltaGlow' has a wrong offset!");

}

