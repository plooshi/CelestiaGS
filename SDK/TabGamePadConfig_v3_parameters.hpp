#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabGamePadConfig_v3

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortRadioButtonItemStruct_structs.hpp"


namespace SDK::Params
{

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.TabGamePadActionsThatNeedBinds__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature final
{
public:
	TArray<class FText>                           ScreenLabels;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature");
static_assert(sizeof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature");
static_assert(offsetof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature, ScreenLabels) == 0x000000, "Member 'TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature::ScreenLabels' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ExecuteUbergraph_TabGamePadConfig_v3
// 0x02E0 (0x02E0 - 0x0000)
struct TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7123[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_CustomEvent_AssociatedButton;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7124[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonButton*                          K2Node_CustomEvent_AssociatedButton_1;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& Key)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7125[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Key;                            // 0x0058(0x0018)(HasGetValueTypeHash)
	TDelegate<void(int32 SelectedIndex, class FName ActionName)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_SelectedIndex;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ActionName;                     // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7126[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInputDataIndexForActionName_ReturnValue; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7127[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConfirmationDialogAction>      CallFunc_CreateCustomResetToDefaultList_ReturnValue; // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowConfirmationDialog_NUI_ReturnValue;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7128[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue;        // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void(class FName TabId)>            K2Node_CreateDelegate_OutputDelegate_6;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	ECommonGamepadType                            Temp_byte_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7129[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_TabId;                          // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable_1;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable_2;                              // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712A[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue_1;      // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable_3;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712B[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	ECommonGamepadType                            K2Node_Select_Default_1;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_NewInputType;                         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712C[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_712D[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_712E[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             Temp_byte_Variable_4;                              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_712F[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomConfig_ReturnValue;               // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7130[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7131[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetInputDataIndexForActionName_ReturnValue_1; // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_2;                 // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleApply_PassThrough;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleApply_PassThrough_1;                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7132[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue_3;                 // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7133[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue_2;      // 0x0220(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue_4;                 // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             Temp_byte_Variable_5;                              // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7134[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7135[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result_1;                       // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7136[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName_1;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value_1;                        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0288(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate_17;           // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate_18;           // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7137[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSelectedTabId_ReturnValue;             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreWeOkayWithThisChange_IsOkay;           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3");
static_assert(sizeof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3) == 0x0002E0, "Wrong size on TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, EntryPoint) == 0x000000, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::EntryPoint' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_AssociatedButton) == 0x000008, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ButtonIndex) == 0x000010, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsConsole_ReturnValue) == 0x000014, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_AssociatedButton_1) == 0x000038, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_AssociatedButton_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ButtonIndex_1) == 0x000040, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ButtonIndex_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Key) == 0x000058, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_SelectedIndex) == 0x000080, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_SelectedIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ActionName) == 0x000084, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_4) == 0x00008C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable) == 0x00009C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable_1) == 0x0000A0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000A4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue) == 0x0000B8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputDataIndexForActionName_ReturnValue) == 0x0000C0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputDataIndexForActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_CreateCustomResetToDefaultList_ReturnValue) == 0x0000C8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_CreateCustomResetToDefaultList_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable_2) == 0x0000D8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_MakeLiteralName_ReturnValue) == 0x0000DC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable_3) == 0x0000E4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_ShowConfirmationDialog_NUI_ReturnValue) == 0x0000E8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_ShowConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Select_Default) == 0x0000F0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue) == 0x0000F8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_6) == 0x000108, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable) == 0x000118, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_TabId) == 0x00011C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_TabId' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable_1) == 0x000124, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable_2) == 0x000125, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue_1) == 0x000128, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable_3) == 0x000138, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable_4) == 0x00013C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_7) == 0x000140, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Select_Default_1) == 0x000150, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Event_NewInputType) == 0x000151, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Event_NewInputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_8) == 0x000154, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_9) == 0x000164, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue_1) == 0x000178, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_10) == 0x000180, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetSubGame_ReturnValue) == 0x000190, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_SwitchEnum_CmpSuccess) == 0x000191, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue) == 0x000198, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001A0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable_4) == 0x0001B1, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_12) == 0x0001B4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_name_Variable) == 0x0001C4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsCustomConfig_ReturnValue) == 0x0001CC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsCustomConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Result) == 0x0001CD, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ResultName) == 0x0001D0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001D8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsVisible_ReturnValue) == 0x0001E8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001EC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputDataIndexForActionName_ReturnValue_1) == 0x0001FC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputDataIndexForActionName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue_2) == 0x000200, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_HandleApply_PassThrough) == 0x000208, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_HandleApply_PassThrough' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_HandleApply_PassThrough_1) == 0x000209, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_HandleApply_PassThrough_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue_3) == 0x000210, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetCurrentInputType_ReturnValue) == 0x000218, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue_2) == 0x000220, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue_4) == 0x000230, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000238, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x000239, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00023A, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_BooleanOR_ReturnValue) == 0x00023B, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable_5) == 0x00023C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_name_Variable_1) == 0x000240, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000248, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_Conv_NameToString_ReturnValue) == 0x000250, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_15) == 0x000260, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000270, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000271, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000272, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000273, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Result_1) == 0x000274, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ResultName_1) == 0x000278, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ResultName_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Value_1) == 0x000280, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Value_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Value) == 0x000284, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_16) == 0x000288, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_17) == 0x000298, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate_18) == 0x0002A8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Event_IsDesignTime) == 0x0002B8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_Array_Get_Item) == 0x0002C0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetSelectedTabId_ReturnValue) == 0x0002D0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetSelectedTabId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_AreWeOkayWithThisChange_IsOkay) == 0x0002D8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_AreWeOkayWithThisChange_IsOkay' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0002D9, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_v3_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_PreConstruct) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_PreConstruct");
static_assert(sizeof(TabGamePadConfig_v3_C_PreConstruct) == 0x000001, "Wrong size on TabGamePadConfig_v3_C_PreConstruct");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TabGamePadConfig_v3_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DeadZoneMoveSettingValueChanged_Bind
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind) == 0x000004, "Wrong size on TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind, Value) == 0x000000, "Member 'TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind::Value' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DeadZoneLookSettingValueChanged_Bind
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind) == 0x000004, "Wrong size on TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind, Value) == 0x000000, "Member 'TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind::Value' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleUsingGamepadChanged
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_v3_C_HandleUsingGamepadChanged final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_HandleUsingGamepadChanged");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged) == 0x000001, "Wrong size on TabGamePadConfig_v3_C_HandleUsingGamepadChanged");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged, NewInputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleUsingGamepadChanged::NewInputType' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ModesTabSelected_Bind
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_v3_C_ModesTabSelected_Bind final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_ModesTabSelected_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_ModesTabSelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_ModesTabSelected_Bind) == 0x000008, "Wrong size on TabGamePadConfig_v3_C_ModesTabSelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_ModesTabSelected_Bind, TabId) == 0x000000, "Member 'TabGamePadConfig_v3_C_ModesTabSelected_Bind::TabId' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CustomActionSelected_Bind
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_CustomActionSelected_Bind final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CustomActionSelected_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_CustomActionSelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_CustomActionSelected_Bind) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_CustomActionSelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomActionSelected_Bind, SelectedIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_CustomActionSelected_Bind::SelectedIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomActionSelected_Bind, ActionName) == 0x000004, "Member 'TabGamePadConfig_v3_C_CustomActionSelected_Bind::ActionName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CustomKeySelected_Bind
// 0x0018 (0x0018 - 0x0000)
struct TabGamePadConfig_v3_C_CustomKeySelected_Bind final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CustomKeySelected_Bind) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_CustomKeySelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_CustomKeySelected_Bind) == 0x000018, "Wrong size on TabGamePadConfig_v3_C_CustomKeySelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomKeySelected_Bind, Key) == 0x000000, "Member 'TabGamePadConfig_v3_C_CustomKeySelected_Bind::Key' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.GamepadPlatformConfigChanged
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_GamepadPlatformConfigChanged final
{
public:
	class UCommonButton*                          AssociatedButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_GamepadPlatformConfigChanged");
static_assert(sizeof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_GamepadPlatformConfigChanged");
static_assert(offsetof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged, AssociatedButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_GamepadPlatformConfigChanged::AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged, ButtonIndex) == 0x000008, "Member 'TabGamePadConfig_v3_C_GamepadPlatformConfigChanged::ButtonIndex' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.Gamepad Config Changed
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_Gamepad_Config_Changed final
{
public:
	class UCommonButton*                          AssociatedButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_Gamepad_Config_Changed) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_Gamepad_Config_Changed");
static_assert(sizeof(TabGamePadConfig_v3_C_Gamepad_Config_Changed) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_Gamepad_Config_Changed");
static_assert(offsetof(TabGamePadConfig_v3_C_Gamepad_Config_Changed, AssociatedButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_Gamepad_Config_Changed::AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_Gamepad_Config_Changed, ButtonIndex) == 0x000008, "Member 'TabGamePadConfig_v3_C_Gamepad_Config_Changed::ButtonIndex' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7138[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717");
static_assert(sizeof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717, Result) == 0x000000, "Member 'TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717::Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717, ResultName) == 0x000004, "Member 'TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717::ResultName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DialogResult_017CD690454514A07B4DE5BE109AEC6E
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7139[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E");
static_assert(sizeof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E, Result) == 0x000000, "Member 'TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E::Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E, ResultName) == 0x000004, "Member 'TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E::ResultName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.InitializeData
// 0x01C0 (0x01C0 - 0x0000)
struct TabGamePadConfig_v3_C_InitializeData final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_713A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames; // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct;       // 0x0040(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_713B[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomGamepadConfig_ReturnValue;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_713C[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_713D[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00A8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_713E[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00E0(0x0018)()
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_713F[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7140[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue_1;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7141[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0158(0x0018)()
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0170(0x0018)()
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct_1;     // 0x0188(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_InitializeData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_InitializeData");
static_assert(sizeof(TabGamePadConfig_v3_C_InitializeData) == 0x0001C0, "Wrong size on TabGamePadConfig_v3_C_InitializeData");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetSubGame_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames) == 0x000020, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames) == 0x000030, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeStruct_FortRadioButtonItemStruct) == 0x000040, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeStruct_FortRadioButtonItemStruct' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Get_Item) == 0x000070, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_IsCustomGamepadConfig_ReturnValue) == 0x000084, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_IsCustomGamepadConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable) == 0x000090, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable_1) == 0x0000A8, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_bool_Variable) == 0x0000C0, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable_2) == 0x0000C8, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable_3) == 0x0000E0, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetPlatformName_ReturnValue) == 0x0000F8, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00010C, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_bool_Variable_1) == 0x000114, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetPlatformName_ReturnValue_1) == 0x000118, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetPlatformName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_Select_Default) == 0x000128, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000140, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeArray_Array) == 0x000148, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_Select_Default_1) == 0x000158, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeStruct_FortRadioButtonItemStruct_1) == 0x000188, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeStruct_FortRadioButtonItemStruct_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue_2) == 0x0001B4, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B8, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.PreConstructData
// 0x00E0 (0x00E0 - 0x0000)
struct TabGamePadConfig_v3_C_PreConstructData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7142[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct;       // 0x0040(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7143[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7144[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0088(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7145[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct_1;     // 0x00A8(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7146[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_PreConstructData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_PreConstructData");
static_assert(sizeof(TabGamePadConfig_v3_C_PreConstructData) == 0x0000E0, "Wrong size on TabGamePadConfig_v3_C_PreConstructData");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeArray_Array) == 0x000010, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Get_Item) == 0x000020, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeStruct_FortRadioButtonItemStruct) == 0x000040, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeStruct_FortRadioButtonItemStruct' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeArray_Array_1) == 0x000078, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeStruct_FortRadioButtonItemStruct_1) == 0x0000A8, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeStruct_FortRadioButtonItemStruct_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.UpdateData
// 0x0038 (0x0038 - 0x0000)
struct TabGamePadConfig_v3_C_UpdateData final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentInputPresetName_ReturnValue;    // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPlatformIndex_PlatformIndex;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_UpdateData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_UpdateData");
static_assert(sizeof(TabGamePadConfig_v3_C_UpdateData) == 0x000038, "Wrong size on TabGamePadConfig_v3_C_UpdateData");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable_1) == 0x000004, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetCurrentInputPresetName_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetCurrentInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetCurrentPlatformIndex_PlatformIndex) == 0x000020, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetCurrentPlatformIndex_PlatformIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable_2) == 0x000024, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable_3) == 0x000028, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable_4) == 0x00002C, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, K2Node_Select_Default) == 0x000030, "Member 'TabGamePadConfig_v3_C_UpdateData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.GetCurrentPlatformIndex
// 0x0020 (0x0020 - 0x0000)
struct TabGamePadConfig_v3_C_GetCurrentPlatformIndex final
{
public:
	int32                                         PlatformIndex;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7147[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetControllerPlatform_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_GetCurrentPlatformIndex");
static_assert(sizeof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex) == 0x000020, "Wrong size on TabGamePadConfig_v3_C_GetCurrentPlatformIndex");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, PlatformIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::PlatformIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, CallFunc_GetControllerPlatform_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::CallFunc_GetControllerPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleGamepadMappingInfoChange
// 0x0030 (0x0030 - 0x0000)
struct TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange final
{
public:
	class FName                                   CombatModeId_Local;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EditModeId_Local;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7148[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue_1;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomConfig_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange) == 0x000030, "Wrong size on TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CombatModeId_Local) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CombatModeId_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, EditModeId_Local) == 0x000008, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::EditModeId_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetSubGame_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetContext_ReturnValue_1) == 0x000020, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetCurrentInputType_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_IsCustomConfig_ReturnValue) == 0x000029, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_IsCustomConfig_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.IsConsole
// 0x0006 (0x0006 - 0x0000)
struct TabGamePadConfig_v3_C_IsConsole final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPS4Platform_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_IsConsole) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_IsConsole");
static_assert(sizeof(TabGamePadConfig_v3_C_IsConsole) == 0x000006, "Wrong size on TabGamePadConfig_v3_C_IsConsole");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_IsConsole::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsErebus_ReturnValue) == 0x000001, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsXboxPlatform_ReturnValue) == 0x000002, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsPS4Platform_ReturnValue) == 0x000003, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsPS4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.IsCustomConfig
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_v3_C_IsCustomConfig final
{
public:
	int32                                         PresetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCustomGamepadConfig_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_IsCustomConfig) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_IsCustomConfig");
static_assert(sizeof(TabGamePadConfig_v3_C_IsCustomConfig) == 0x000008, "Wrong size on TabGamePadConfig_v3_C_IsCustomConfig");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, PresetIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::PresetIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, CallFunc_IsCustomGamepadConfig_ReturnValue) == 0x000005, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::CallFunc_IsCustomGamepadConfig_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.SetupDisplayObject
// 0x0068 (0x0068 - 0x0000)
struct TabGamePadConfig_v3_C_SetupDisplayObject final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UGamepadKeyTextButton_C*                Param_DisplayObject;                               // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInputData*                         CallFunc_GetFortInputDataForBlueprint_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCustomGamepadInputPresetName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetScreenLabel_ReturnValue;               // 0x0050(0x0018)()
};
static_assert(alignof(TabGamePadConfig_v3_C_SetupDisplayObject) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_SetupDisplayObject");
static_assert(sizeof(TabGamePadConfig_v3_C_SetupDisplayObject) == 0x000068, "Wrong size on TabGamePadConfig_v3_C_SetupDisplayObject");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, ActionName) == 0x000000, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, Key) == 0x000008, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, Param_DisplayObject) == 0x000020, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::Param_DisplayObject' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetFortInputDataForBlueprint_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetFortInputDataForBlueprint_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetCustomGamepadInputPresetName_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetCustomGamepadInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetScreenLabel_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetScreenLabel_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.SelectSameItemInActionsList
// 0x0068 (0x0068 - 0x0000)
struct TabGamePadConfig_v3_C_SelectSameItemInActionsList final
{
public:
	int32                                         IndexToSelect_Local;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7149[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortOptionsMenuInputData*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_714A[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCustomGamepadInputPresetName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyForAction_ReturnValue;              // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_SelectSameItemInActionsList) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_SelectSameItemInActionsList");
static_assert(sizeof(TabGamePadConfig_v3_C_SelectSameItemInActionsList) == 0x000068, "Wrong size on TabGamePadConfig_v3_C_SelectSameItemInActionsList");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, IndexToSelect_Local) == 0x000000, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::IndexToSelect_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Array_Get_Item) == 0x000018, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetCustomGamepadInputPresetName_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetCustomGamepadInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetKeyForAction_ReturnValue) == 0x000048, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetKeyForAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000060, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CloseCustomActionsPanel
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_v3_C_CloseCustomActionsPanel final
{
public:
	bool                                          FocusLastButton;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_CloseCustomActionsPanel) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_CloseCustomActionsPanel");
static_assert(sizeof(TabGamePadConfig_v3_C_CloseCustomActionsPanel) == 0x000001, "Wrong size on TabGamePadConfig_v3_C_CloseCustomActionsPanel");
static_assert(offsetof(TabGamePadConfig_v3_C_CloseCustomActionsPanel, FocusLastButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_CloseCustomActionsPanel::FocusLastButton' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CreateCustomResetToDefaultList
// 0x0110 (0x0110 - 0x0000)
struct TabGamePadConfig_v3_C_CreateCustomResetToDefaultList final
{
public:
	TArray<struct FConfirmationDialogAction>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	TArray<struct FConfirmationDialogAction>      ReturnValue_Local;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_714B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction;        // 0x0058(0x00B0)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_CreateCustomResetToDefaultList");
static_assert(sizeof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList) == 0x000110, "Wrong size on TabGamePadConfig_v3_C_CreateCustomResetToDefaultList");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, ReturnValue_Local) == 0x000010, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::ReturnValue_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Conv_StringToName_ReturnValue) == 0x00002C, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Get_Item) == 0x000038, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, K2Node_MakeStruct_ConfirmationDialogAction) == 0x000058, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::K2Node_MakeStruct_ConfirmationDialogAction' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomTabListVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType final
{
public:
	ECommonInputType                              Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType, Selection) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType::Selection' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleGamepadInfoSelectorBack
// 0x0018 (0x0018 - 0x0000)
struct TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack final
{
public:
	TArray<class FText>                           CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels; // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_AreAllImportantActionsBound_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack) == 0x000018, "Wrong size on TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack, CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack::CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack, CallFunc_AreAllImportantActionsBound_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack::CallFunc_AreAllImportantActionsBound_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomResetVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType, InputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType::InputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomClearVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType, InputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType::InputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.NavigateToSelectedConfig
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_NavigateToSelectedConfig final
{
public:
	int32                                         CallFunc_GetSelectedButtonIndex_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          CallFunc_GetButtonAtIndex_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_NavigateToSelectedConfig) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_NavigateToSelectedConfig");
static_assert(sizeof(TabGamePadConfig_v3_C_NavigateToSelectedConfig) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_NavigateToSelectedConfig");
static_assert(offsetof(TabGamePadConfig_v3_C_NavigateToSelectedConfig, CallFunc_GetSelectedButtonIndex_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_NavigateToSelectedConfig::CallFunc_GetSelectedButtonIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_NavigateToSelectedConfig, CallFunc_GetButtonAtIndex_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_NavigateToSelectedConfig::CallFunc_GetButtonAtIndex_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.AreWeOkayWithThisChange
// 0x0068 (0x0068 - 0x0000)
struct TabGamePadConfig_v3_C_AreWeOkayWithThisChange final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsOkay;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_714D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FullScreenMap_Local;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   GamepadToggleFullscreenMapName_Local;              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToggleFullscreenMapName_Local;                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOkay_Local;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_714E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_AreWeOkayWithThisChange");
static_assert(sizeof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange) == 0x000068, "Wrong size on TabGamePadConfig_v3_C_AreWeOkayWithThisChange");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, ActionName) == 0x000000, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, Key) == 0x000008, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, IsOkay) == 0x000020, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::IsOkay' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, FullScreenMap_Local) == 0x000028, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::FullScreenMap_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, GamepadToggleFullscreenMapName_Local) == 0x000038, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::GamepadToggleFullscreenMapName_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, ToggleFullscreenMapName_Local) == 0x000040, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::ToggleFullscreenMapName_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, IsOkay_Local) == 0x000048, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::IsOkay_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000049, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00004A, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00004B, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00004C, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue_1) == 0x000061, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue_2) == 0x000062, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Contains_ReturnValue) == 0x000063, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

