#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HighTower_Crack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_HighTower_Crack.BP_HighTower_Crack_C.ExecuteUbergraph_BP_HighTower_Crack
// 0x0160 (0x0160 - 0x0000)
struct BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_2;                    // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_2;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_2;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_55F3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_1;                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_1;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_1;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_1;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_55F4[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable;                              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable_1;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55F5[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x00F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0100(0x0020)(ConstParm)
	struct FGameplayTagContainer                  Temp_struct_Variable_2;                            // 0x0120(0x0020)()
	class UFortPlaylist*                          Temp_object_Variable;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   Temp_object_Variable_1;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack) == 0x000008, "Wrong alignment on BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack");
static_assert(sizeof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack) == 0x000160, "Wrong size on BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, EntryPoint) == 0x000000, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_EventName_2) == 0x000008, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_EventName_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeUntilEnd_2) == 0x000018, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeUntilEnd_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSinceBegin_2) == 0x000020, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSinceBegin_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSpanRatio_2) == 0x000028, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSpanRatio_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_EventName_1) == 0x000040, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeUntilEnd_1) == 0x000050, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeUntilEnd_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSinceBegin_1) == 0x000058, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSinceBegin_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSpanRatio_1) == 0x000060, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSpanRatio_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_EventName) == 0x000078, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeUntilEnd) == 0x000088, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSinceBegin) == 0x000090, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_TimeSpanRatio) == 0x000098, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_float_Variable) == 0x0000AC, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_struct_Variable) == 0x0000B0, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_struct_Variable_1) == 0x0000B8, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_string_Variable) == 0x0000C0, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, CallFunc_WatchCalendarEvent_ReturnValue) == 0x0000D0, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::CallFunc_WatchCalendarEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_GameState) == 0x0000F0, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_Playlist) == 0x0000F8, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, K2Node_CustomEvent_PlaylistContextTags) == 0x000100, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_struct_Variable_2) == 0x000120, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_object_Variable) == 0x000140, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, Temp_object_Variable_1) == 0x000148, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000150, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack, CallFunc_HasAuthority_ReturnValue) == 0x000159, "Member 'BP_HighTower_Crack_C_ExecuteUbergraph_BP_HighTower_Crack::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_HighTower_Crack.BP_HighTower_Crack_C.OnReady_3F48E78D4B533713B28C6BA6E45ECE02
// 0x0030 (0x0030 - 0x0000)
struct BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02 final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02) == 0x000008, "Wrong alignment on BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02");
static_assert(sizeof(BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02) == 0x000030, "Wrong size on BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02");
static_assert(offsetof(BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02, GameState) == 0x000000, "Member 'BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02::GameState' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02, Playlist) == 0x000008, "Member 'BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02::Playlist' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02, PlaylistContextTags) == 0x000010, "Member 'BP_HighTower_Crack_C_OnReady_3F48E78D4B533713B28C6BA6E45ECE02::PlaylistContextTags' has a wrong offset!");

// Function BP_HighTower_Crack.BP_HighTower_Crack_C.OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367
// 0x0028 (0x0028 - 0x0000)
struct BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000008, "Wrong alignment on BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(sizeof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000028, "Wrong size on BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367, EventName) == 0x000000, "Member 'BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367::EventName' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367, TimeUntilEnd) == 0x000010, "Member 'BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367, TimeSinceBegin) == 0x000018, "Member 'BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367, TimespanRatio) == 0x000020, "Member 'BP_HighTower_Crack_C_OnEventActive_FDF3AB094E2934BFEE1C2F8F24103367::TimespanRatio' has a wrong offset!");

// Function BP_HighTower_Crack.BP_HighTower_Crack_C.OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367
// 0x0028 (0x0028 - 0x0000)
struct BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000008, "Wrong alignment on BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(sizeof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000028, "Wrong size on BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367, EventName) == 0x000000, "Member 'BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367::EventName' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367, TimeUntilEnd) == 0x000010, "Member 'BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367, TimeSinceBegin) == 0x000018, "Member 'BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367, TimespanRatio) == 0x000020, "Member 'BP_HighTower_Crack_C_OnEventUpdated_FDF3AB094E2934BFEE1C2F8F24103367::TimespanRatio' has a wrong offset!");

// Function BP_HighTower_Crack.BP_HighTower_Crack_C.OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367
// 0x0028 (0x0028 - 0x0000)
struct BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000008, "Wrong alignment on BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(sizeof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367) == 0x000028, "Wrong size on BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367, EventName) == 0x000000, "Member 'BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367::EventName' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367, TimeUntilEnd) == 0x000010, "Member 'BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367, TimeSinceBegin) == 0x000018, "Member 'BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367, TimespanRatio) == 0x000020, "Member 'BP_HighTower_Crack_C_OnEventEnded_FDF3AB094E2934BFEE1C2F8F24103367::TimespanRatio' has a wrong offset!");

}

