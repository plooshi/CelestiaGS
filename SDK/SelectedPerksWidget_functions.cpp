#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SelectedPerksWidget

#include "Basic.hpp"

#include "SelectedPerksWidget_classes.hpp"
#include "SelectedPerksWidget_parameters.hpp"


namespace SDK
{

// Function SelectedPerksWidget.SelectedPerksWidget_C.ItemFocused__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortSpyTechItemDefinition*       SpyTechItemDef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USelectedPerksWidget_C::ItemFocused__DelegateSignature(class UFortSpyTechItemDefinition* SpyTechItemDef, bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "ItemFocused__DelegateSignature");

	Params::SelectedPerksWidget_C_ItemFocused__DelegateSignature Parms{};

	Parms.SpyTechItemDef = SpyTechItemDef;
	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.PerksUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USelectedPerksWidget_C::PerksUpdated__DelegateSignature(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "PerksUpdated__DelegateSignature");

	Params::SelectedPerksWidget_C_PerksUpdated__DelegateSignature Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.ExecuteUbergraph_SelectedPerksWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USelectedPerksWidget_C::ExecuteUbergraph_SelectedPerksWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "ExecuteUbergraph_SelectedPerksWidget");

	Params::SelectedPerksWidget_C_ExecuteUbergraph_SelectedPerksWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USelectedPerksWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "PreConstruct");

	Params::SelectedPerksWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USelectedPerksWidget_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "OnMouseLeave");

	Params::SelectedPerksWidget_C_OnMouseLeave Parms{};

	Parms.MouseEvent = move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.UpdatePerks
// (Event, Protected, BlueprintEvent)

void USelectedPerksWidget_C::UpdatePerks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "UpdatePerks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USelectedPerksWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.GetActiveCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USelectedPerksWidget_C::GetActiveCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "GetActiveCount");

	Params::SelectedPerksWidget_C_GetActiveCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.SetHitTestState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HitTestable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USelectedPerksWidget_C::SetHitTestState(bool HitTestable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "SetHitTestState");

	Params::SelectedPerksWidget_C_SetHitTestState Parms{};

	Parms.HitTestable = HitTestable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.ShowLabels
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USelectedPerksWidget_C::ShowLabels(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "ShowLabels");

	Params::SelectedPerksWidget_C_ShowLabels Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.GetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortSpyTechItemDefinition*       SpyTechItemDef                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USelectedPerksWidget_C::GetItem(int32 Param_Index, class UFortSpyTechItemDefinition** SpyTechItemDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "GetItem");

	Params::SelectedPerksWidget_C_GetItem Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (SpyTechItemDef != nullptr)
		*SpyTechItemDef = Parms.SpyTechItemDef;
}


// Function SelectedPerksWidget.SelectedPerksWidget_C.GetItems
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortSpyTechItemDefinition*>SpyTechItemDefs                                        (Parm, OutParm, HasGetValueTypeHash)

void USelectedPerksWidget_C::GetItems(TArray<class UFortSpyTechItemDefinition*>* SpyTechItemDefs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SelectedPerksWidget_C", "GetItems");

	Params::SelectedPerksWidget_C_GetItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpyTechItemDefs != nullptr)
		*SpyTechItemDefs = move(Parms.SpyTechItemDefs);
}

}

