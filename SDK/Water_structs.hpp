#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Water

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum Water.EWaterBodyType
// NumValues: 0x0005
enum class EWaterBodyType : uint8
{
	River                                    = 0,
	Lake                                     = 1,
	Ocean                                    = 2,
	Transition                               = 3,
	EWaterBodyType_MAX                       = 4,
};

// Enum Water.EWaterBrushBlendType
// NumValues: 0x0004
enum class EWaterBrushBlendType : uint8
{
	AlphaBlend                               = 0,
	Min                                      = 1,
	Max                                      = 2,
	Additive                                 = 3,
};

// Enum Water.EWaterBrushFalloffMode
// NumValues: 0x0003
enum class EWaterBrushFalloffMode : uint8
{
	Angle                                    = 0,
	Width                                    = 1,
	EWaterBrushFalloffMode_MAX               = 2,
};

// ScriptStruct Water.SphericalPontoon
// 0x0130 (0x0130 - 0x0000)
struct FSphericalPontoon final
{
public:
	class FName                                   CenterSocket;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocation;                                  // 0x0008(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocalForce;                                        // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  SocketRotation;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F78[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterHeight;                                       // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaterDepth;                                        // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImmersionDepth;                                    // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WaterPlaneLocation;                                // 0x005C(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WaterPlaneNormal;                                  // 0x0068(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F79[0xAC];                                    // 0x0074(0x00AC)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterBody*                             CurrentWaterBody;                                  // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7A[0x8];                                     // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSphericalPontoon) == 0x000010, "Wrong alignment on FSphericalPontoon");
static_assert(sizeof(FSphericalPontoon) == 0x000130, "Wrong size on FSphericalPontoon");
static_assert(offsetof(FSphericalPontoon, CenterSocket) == 0x000000, "Member 'FSphericalPontoon::CenterSocket' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, RelativeLocation) == 0x000008, "Member 'FSphericalPontoon::RelativeLocation' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, Radius) == 0x000014, "Member 'FSphericalPontoon::Radius' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, LocalForce) == 0x000018, "Member 'FSphericalPontoon::LocalForce' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, CenterLocation) == 0x000024, "Member 'FSphericalPontoon::CenterLocation' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, SocketRotation) == 0x000030, "Member 'FSphericalPontoon::SocketRotation' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, Offset) == 0x000040, "Member 'FSphericalPontoon::Offset' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, WaterHeight) == 0x000050, "Member 'FSphericalPontoon::WaterHeight' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, WaterDepth) == 0x000054, "Member 'FSphericalPontoon::WaterDepth' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, ImmersionDepth) == 0x000058, "Member 'FSphericalPontoon::ImmersionDepth' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, WaterPlaneLocation) == 0x00005C, "Member 'FSphericalPontoon::WaterPlaneLocation' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, WaterPlaneNormal) == 0x000068, "Member 'FSphericalPontoon::WaterPlaneNormal' has a wrong offset!");
static_assert(offsetof(FSphericalPontoon, CurrentWaterBody) == 0x000120, "Member 'FSphericalPontoon::CurrentWaterBody' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectSmoothBlending
// 0x0008 (0x0008 - 0x0000)
struct FWaterBrushEffectSmoothBlending final
{
public:
	float                                         InnerSmoothDistance;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterSmoothDistance;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBrushEffectSmoothBlending) == 0x000004, "Wrong alignment on FWaterBrushEffectSmoothBlending");
static_assert(sizeof(FWaterBrushEffectSmoothBlending) == 0x000008, "Wrong size on FWaterBrushEffectSmoothBlending");
static_assert(offsetof(FWaterBrushEffectSmoothBlending, InnerSmoothDistance) == 0x000000, "Member 'FWaterBrushEffectSmoothBlending::InnerSmoothDistance' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectSmoothBlending, OuterSmoothDistance) == 0x000004, "Member 'FWaterBrushEffectSmoothBlending::OuterSmoothDistance' has a wrong offset!");

// ScriptStruct Water.WaterWaveParams
// 0x002C (0x002C - 0x0000)
struct FWaterWaveParams final
{
public:
	float                                         Wavelength;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Amplitude;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Steepness;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7B[0x14];                                    // 0x0018(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterWaveParams) == 0x000004, "Wrong alignment on FWaterWaveParams");
static_assert(sizeof(FWaterWaveParams) == 0x00002C, "Wrong size on FWaterWaveParams");
static_assert(offsetof(FWaterWaveParams, Wavelength) == 0x000000, "Member 'FWaterWaveParams::Wavelength' has a wrong offset!");
static_assert(offsetof(FWaterWaveParams, Amplitude) == 0x000004, "Member 'FWaterWaveParams::Amplitude' has a wrong offset!");
static_assert(offsetof(FWaterWaveParams, Steepness) == 0x000008, "Member 'FWaterWaveParams::Steepness' has a wrong offset!");
static_assert(offsetof(FWaterWaveParams, Direction) == 0x00000C, "Member 'FWaterWaveParams::Direction' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectDisplacement
// 0x0028 (0x0028 - 0x0000)
struct FWaterBrushEffectDisplacement final
{
public:
	float                                         DisplacementHeight;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplacementTiling;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Midpoint;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Channel;                                           // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeightmapInfluence;                                // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBrushEffectDisplacement) == 0x000008, "Wrong alignment on FWaterBrushEffectDisplacement");
static_assert(sizeof(FWaterBrushEffectDisplacement) == 0x000028, "Wrong size on FWaterBrushEffectDisplacement");
static_assert(offsetof(FWaterBrushEffectDisplacement, DisplacementHeight) == 0x000000, "Member 'FWaterBrushEffectDisplacement::DisplacementHeight' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectDisplacement, DisplacementTiling) == 0x000004, "Member 'FWaterBrushEffectDisplacement::DisplacementTiling' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectDisplacement, Texture) == 0x000008, "Member 'FWaterBrushEffectDisplacement::Texture' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectDisplacement, Midpoint) == 0x000010, "Member 'FWaterBrushEffectDisplacement::Midpoint' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectDisplacement, Channel) == 0x000014, "Member 'FWaterBrushEffectDisplacement::Channel' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectDisplacement, WeightmapInfluence) == 0x000024, "Member 'FWaterBrushEffectDisplacement::WeightmapInfluence' has a wrong offset!");

// ScriptStruct Water.UnderwaterPostProcessSettings
// 0x0560 (0x0560 - 0x0000)
struct FUnderwaterPostProcessSettings final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Priority;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendRadius;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendWeight;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x0010(0x0540)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     UnderwaterPostProcessMaterial;                     // 0x0550(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7D[0x8];                                     // 0x0558(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUnderwaterPostProcessSettings) == 0x000010, "Wrong alignment on FUnderwaterPostProcessSettings");
static_assert(sizeof(FUnderwaterPostProcessSettings) == 0x000560, "Wrong size on FUnderwaterPostProcessSettings");
static_assert(offsetof(FUnderwaterPostProcessSettings, bEnabled) == 0x000000, "Member 'FUnderwaterPostProcessSettings::bEnabled' has a wrong offset!");
static_assert(offsetof(FUnderwaterPostProcessSettings, Priority) == 0x000004, "Member 'FUnderwaterPostProcessSettings::Priority' has a wrong offset!");
static_assert(offsetof(FUnderwaterPostProcessSettings, BlendRadius) == 0x000008, "Member 'FUnderwaterPostProcessSettings::BlendRadius' has a wrong offset!");
static_assert(offsetof(FUnderwaterPostProcessSettings, BlendWeight) == 0x00000C, "Member 'FUnderwaterPostProcessSettings::BlendWeight' has a wrong offset!");
static_assert(offsetof(FUnderwaterPostProcessSettings, PostProcessSettings) == 0x000010, "Member 'FUnderwaterPostProcessSettings::PostProcessSettings' has a wrong offset!");
static_assert(offsetof(FUnderwaterPostProcessSettings, UnderwaterPostProcessMaterial) == 0x000550, "Member 'FUnderwaterPostProcessSettings::UnderwaterPostProcessMaterial' has a wrong offset!");

// ScriptStruct Water.WaterFalloffSettings
// 0x0014 (0x0014 - 0x0000)
struct FWaterFalloffSettings final
{
public:
	EWaterBrushFalloffMode                        FalloffMode;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FalloffAngle;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FalloffWidth;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeOffset;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZOffset;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterFalloffSettings) == 0x000004, "Wrong alignment on FWaterFalloffSettings");
static_assert(sizeof(FWaterFalloffSettings) == 0x000014, "Wrong size on FWaterFalloffSettings");
static_assert(offsetof(FWaterFalloffSettings, FalloffMode) == 0x000000, "Member 'FWaterFalloffSettings::FalloffMode' has a wrong offset!");
static_assert(offsetof(FWaterFalloffSettings, FalloffAngle) == 0x000004, "Member 'FWaterFalloffSettings::FalloffAngle' has a wrong offset!");
static_assert(offsetof(FWaterFalloffSettings, FalloffWidth) == 0x000008, "Member 'FWaterFalloffSettings::FalloffWidth' has a wrong offset!");
static_assert(offsetof(FWaterFalloffSettings, EdgeOffset) == 0x00000C, "Member 'FWaterFalloffSettings::EdgeOffset' has a wrong offset!");
static_assert(offsetof(FWaterFalloffSettings, ZOffset) == 0x000010, "Member 'FWaterFalloffSettings::ZOffset' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectBlurring
// 0x0008 (0x0008 - 0x0000)
struct FWaterBrushEffectBlurring final
{
public:
	bool                                          bBlurShape;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F7F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Radius;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBrushEffectBlurring) == 0x000004, "Wrong alignment on FWaterBrushEffectBlurring");
static_assert(sizeof(FWaterBrushEffectBlurring) == 0x000008, "Wrong size on FWaterBrushEffectBlurring");
static_assert(offsetof(FWaterBrushEffectBlurring, bBlurShape) == 0x000000, "Member 'FWaterBrushEffectBlurring::bBlurShape' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectBlurring, Radius) == 0x000004, "Member 'FWaterBrushEffectBlurring::Radius' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectCurlNoise
// 0x0010 (0x0010 - 0x0000)
struct FWaterBrushEffectCurlNoise final
{
public:
	float                                         Curl1Amount;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Curl2Amount;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Curl1Tiling;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Curl2Tiling;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBrushEffectCurlNoise) == 0x000004, "Wrong alignment on FWaterBrushEffectCurlNoise");
static_assert(sizeof(FWaterBrushEffectCurlNoise) == 0x000010, "Wrong size on FWaterBrushEffectCurlNoise");
static_assert(offsetof(FWaterBrushEffectCurlNoise, Curl1Amount) == 0x000000, "Member 'FWaterBrushEffectCurlNoise::Curl1Amount' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurlNoise, Curl2Amount) == 0x000004, "Member 'FWaterBrushEffectCurlNoise::Curl2Amount' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurlNoise, Curl1Tiling) == 0x000008, "Member 'FWaterBrushEffectCurlNoise::Curl1Tiling' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurlNoise, Curl2Tiling) == 0x00000C, "Member 'FWaterBrushEffectCurlNoise::Curl2Tiling' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectTerracing
// 0x0014 (0x0014 - 0x0000)
struct FWaterBrushEffectTerracing final
{
public:
	float                                         TerraceAlpha;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TerraceSpacing;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TerraceSmoothness;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaskLength;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaskStartOffset;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBrushEffectTerracing) == 0x000004, "Wrong alignment on FWaterBrushEffectTerracing");
static_assert(sizeof(FWaterBrushEffectTerracing) == 0x000014, "Wrong size on FWaterBrushEffectTerracing");
static_assert(offsetof(FWaterBrushEffectTerracing, TerraceAlpha) == 0x000000, "Member 'FWaterBrushEffectTerracing::TerraceAlpha' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectTerracing, TerraceSpacing) == 0x000004, "Member 'FWaterBrushEffectTerracing::TerraceSpacing' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectTerracing, TerraceSmoothness) == 0x000008, "Member 'FWaterBrushEffectTerracing::TerraceSmoothness' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectTerracing, MaskLength) == 0x00000C, "Member 'FWaterBrushEffectTerracing::MaskLength' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectTerracing, MaskStartOffset) == 0x000010, "Member 'FWaterBrushEffectTerracing::MaskStartOffset' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffects
// 0x0060 (0x0060 - 0x0000)
struct FWaterBrushEffects final
{
public:
	struct FWaterBrushEffectBlurring              Blurring;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWaterBrushEffectCurlNoise             CurlNoise;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWaterBrushEffectDisplacement          Displacement;                                      // 0x0018(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWaterBrushEffectSmoothBlending        SmoothBlending;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FWaterBrushEffectTerracing             Terracing;                                         // 0x0048(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F80[0x4];                                     // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterBrushEffects) == 0x000008, "Wrong alignment on FWaterBrushEffects");
static_assert(sizeof(FWaterBrushEffects) == 0x000060, "Wrong size on FWaterBrushEffects");
static_assert(offsetof(FWaterBrushEffects, Blurring) == 0x000000, "Member 'FWaterBrushEffects::Blurring' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffects, CurlNoise) == 0x000008, "Member 'FWaterBrushEffects::CurlNoise' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffects, Displacement) == 0x000018, "Member 'FWaterBrushEffects::Displacement' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffects, SmoothBlending) == 0x000040, "Member 'FWaterBrushEffects::SmoothBlending' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffects, Terracing) == 0x000048, "Member 'FWaterBrushEffects::Terracing' has a wrong offset!");

// ScriptStruct Water.WaterBodyHeightmapSettings
// 0x0080 (0x0080 - 0x0000)
struct FWaterBodyHeightmapSettings final
{
public:
	EWaterBrushBlendType                          BlendMode;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertShape;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F81[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWaterFalloffSettings                  FalloffSettings;                                   // 0x0004(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWaterBrushEffects                     Effects;                                           // 0x0018(0x0060)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F82[0x4];                                     // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterBodyHeightmapSettings) == 0x000008, "Wrong alignment on FWaterBodyHeightmapSettings");
static_assert(sizeof(FWaterBodyHeightmapSettings) == 0x000080, "Wrong size on FWaterBodyHeightmapSettings");
static_assert(offsetof(FWaterBodyHeightmapSettings, BlendMode) == 0x000000, "Member 'FWaterBodyHeightmapSettings::BlendMode' has a wrong offset!");
static_assert(offsetof(FWaterBodyHeightmapSettings, bInvertShape) == 0x000001, "Member 'FWaterBodyHeightmapSettings::bInvertShape' has a wrong offset!");
static_assert(offsetof(FWaterBodyHeightmapSettings, FalloffSettings) == 0x000004, "Member 'FWaterBodyHeightmapSettings::FalloffSettings' has a wrong offset!");
static_assert(offsetof(FWaterBodyHeightmapSettings, Effects) == 0x000018, "Member 'FWaterBodyHeightmapSettings::Effects' has a wrong offset!");
static_assert(offsetof(FWaterBodyHeightmapSettings, Priority) == 0x000078, "Member 'FWaterBodyHeightmapSettings::Priority' has a wrong offset!");

// ScriptStruct Water.WaterBodyWeightmapSettings
// 0x0020 (0x0020 - 0x0000)
struct FWaterBodyWeightmapSettings final
{
public:
	float                                         FalloffWidth;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeOffset;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ModulationTexture;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TextureTiling;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TextureInfluence;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Midpoint;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalOpacity;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterBodyWeightmapSettings) == 0x000008, "Wrong alignment on FWaterBodyWeightmapSettings");
static_assert(sizeof(FWaterBodyWeightmapSettings) == 0x000020, "Wrong size on FWaterBodyWeightmapSettings");
static_assert(offsetof(FWaterBodyWeightmapSettings, FalloffWidth) == 0x000000, "Member 'FWaterBodyWeightmapSettings::FalloffWidth' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, EdgeOffset) == 0x000004, "Member 'FWaterBodyWeightmapSettings::EdgeOffset' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, ModulationTexture) == 0x000008, "Member 'FWaterBodyWeightmapSettings::ModulationTexture' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, TextureTiling) == 0x000010, "Member 'FWaterBodyWeightmapSettings::TextureTiling' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, TextureInfluence) == 0x000014, "Member 'FWaterBodyWeightmapSettings::TextureInfluence' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, Midpoint) == 0x000018, "Member 'FWaterBodyWeightmapSettings::Midpoint' has a wrong offset!");
static_assert(offsetof(FWaterBodyWeightmapSettings, FinalOpacity) == 0x00001C, "Member 'FWaterBodyWeightmapSettings::FinalOpacity' has a wrong offset!");

// ScriptStruct Water.WaterStreamingCell
// 0x0068 (0x0068 - 0x0000)
struct FWaterStreamingCell final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          StreamingActors;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  WaterProxyActor;                                   // 0x0010(0x0028)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   CellBox;                                           // 0x0038(0x001C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGuid                                  GenerationId;                                      // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F83[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterStreamingCell) == 0x000008, "Wrong alignment on FWaterStreamingCell");
static_assert(sizeof(FWaterStreamingCell) == 0x000068, "Wrong size on FWaterStreamingCell");
static_assert(offsetof(FWaterStreamingCell, StreamingActors) == 0x000000, "Member 'FWaterStreamingCell::StreamingActors' has a wrong offset!");
static_assert(offsetof(FWaterStreamingCell, WaterProxyActor) == 0x000010, "Member 'FWaterStreamingCell::WaterProxyActor' has a wrong offset!");
static_assert(offsetof(FWaterStreamingCell, CellBox) == 0x000038, "Member 'FWaterStreamingCell::CellBox' has a wrong offset!");
static_assert(offsetof(FWaterStreamingCell, GenerationId) == 0x000054, "Member 'FWaterStreamingCell::GenerationId' has a wrong offset!");

// ScriptStruct Water.WaterBrushEffectCurves
// 0x0020 (0x0020 - 0x0000)
struct FWaterBrushEffectCurves final
{
public:
	bool                                          bUseCurveChannel;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F84[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ElevationCurveAsset;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChannelEdgeOffset;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChannelDepth;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurveRampWidth;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F85[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterBrushEffectCurves) == 0x000008, "Wrong alignment on FWaterBrushEffectCurves");
static_assert(sizeof(FWaterBrushEffectCurves) == 0x000020, "Wrong size on FWaterBrushEffectCurves");
static_assert(offsetof(FWaterBrushEffectCurves, bUseCurveChannel) == 0x000000, "Member 'FWaterBrushEffectCurves::bUseCurveChannel' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurves, ElevationCurveAsset) == 0x000008, "Member 'FWaterBrushEffectCurves::ElevationCurveAsset' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurves, ChannelEdgeOffset) == 0x000010, "Member 'FWaterBrushEffectCurves::ChannelEdgeOffset' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurves, ChannelDepth) == 0x000014, "Member 'FWaterBrushEffectCurves::ChannelDepth' has a wrong offset!");
static_assert(offsetof(FWaterBrushEffectCurves, CurveRampWidth) == 0x000018, "Member 'FWaterBrushEffectCurves::CurveRampWidth' has a wrong offset!");

// ScriptStruct Water.WaterCurveSettings
// 0x0020 (0x0020 - 0x0000)
struct FWaterCurveSettings final
{
public:
	bool                                          bUseCurveChannel;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F86[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ElevationCurveAsset;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChannelEdgeOffset;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChannelDepth;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurveRampWidth;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F87[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWaterCurveSettings) == 0x000008, "Wrong alignment on FWaterCurveSettings");
static_assert(sizeof(FWaterCurveSettings) == 0x000020, "Wrong size on FWaterCurveSettings");
static_assert(offsetof(FWaterCurveSettings, bUseCurveChannel) == 0x000000, "Member 'FWaterCurveSettings::bUseCurveChannel' has a wrong offset!");
static_assert(offsetof(FWaterCurveSettings, ElevationCurveAsset) == 0x000008, "Member 'FWaterCurveSettings::ElevationCurveAsset' has a wrong offset!");
static_assert(offsetof(FWaterCurveSettings, ChannelEdgeOffset) == 0x000010, "Member 'FWaterCurveSettings::ChannelEdgeOffset' has a wrong offset!");
static_assert(offsetof(FWaterCurveSettings, ChannelDepth) == 0x000014, "Member 'FWaterCurveSettings::ChannelDepth' has a wrong offset!");
static_assert(offsetof(FWaterCurveSettings, CurveRampWidth) == 0x000018, "Member 'FWaterCurveSettings::CurveRampWidth' has a wrong offset!");

// ScriptStruct Water.WaterStreamingGrid
// 0x0040 (0x0040 - 0x0000)
struct FWaterStreamingGrid final
{
public:
	TArray<struct FWaterStreamingCell>            Cells;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LandscapeLocation;                                 // 0x0010(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LandscapeScale;                                    // 0x001C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              NumCells;                                          // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InvWorldCellDimensions;                            // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              CellTextureSize;                                   // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterStreamingGrid) == 0x000008, "Wrong alignment on FWaterStreamingGrid");
static_assert(sizeof(FWaterStreamingGrid) == 0x000040, "Wrong size on FWaterStreamingGrid");
static_assert(offsetof(FWaterStreamingGrid, Cells) == 0x000000, "Member 'FWaterStreamingGrid::Cells' has a wrong offset!");
static_assert(offsetof(FWaterStreamingGrid, LandscapeLocation) == 0x000010, "Member 'FWaterStreamingGrid::LandscapeLocation' has a wrong offset!");
static_assert(offsetof(FWaterStreamingGrid, LandscapeScale) == 0x00001C, "Member 'FWaterStreamingGrid::LandscapeScale' has a wrong offset!");
static_assert(offsetof(FWaterStreamingGrid, NumCells) == 0x000028, "Member 'FWaterStreamingGrid::NumCells' has a wrong offset!");
static_assert(offsetof(FWaterStreamingGrid, InvWorldCellDimensions) == 0x000030, "Member 'FWaterStreamingGrid::InvWorldCellDimensions' has a wrong offset!");
static_assert(offsetof(FWaterStreamingGrid, CellTextureSize) == 0x000038, "Member 'FWaterStreamingGrid::CellTextureSize' has a wrong offset!");

// ScriptStruct Water.WaterSplineCurveDefaults
// 0x0014 (0x0014 - 0x0000)
struct FWaterSplineCurveDefaults final
{
public:
	float                                         DefaultDepth;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultWidth;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultShorelineWidth;                             // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultVelocity;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultAudioIntensity;                             // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWaterSplineCurveDefaults) == 0x000004, "Wrong alignment on FWaterSplineCurveDefaults");
static_assert(sizeof(FWaterSplineCurveDefaults) == 0x000014, "Wrong size on FWaterSplineCurveDefaults");
static_assert(offsetof(FWaterSplineCurveDefaults, DefaultDepth) == 0x000000, "Member 'FWaterSplineCurveDefaults::DefaultDepth' has a wrong offset!");
static_assert(offsetof(FWaterSplineCurveDefaults, DefaultWidth) == 0x000004, "Member 'FWaterSplineCurveDefaults::DefaultWidth' has a wrong offset!");
static_assert(offsetof(FWaterSplineCurveDefaults, DefaultShorelineWidth) == 0x000008, "Member 'FWaterSplineCurveDefaults::DefaultShorelineWidth' has a wrong offset!");
static_assert(offsetof(FWaterSplineCurveDefaults, DefaultVelocity) == 0x00000C, "Member 'FWaterSplineCurveDefaults::DefaultVelocity' has a wrong offset!");
static_assert(offsetof(FWaterSplineCurveDefaults, DefaultAudioIntensity) == 0x000010, "Member 'FWaterSplineCurveDefaults::DefaultAudioIntensity' has a wrong offset!");

}

