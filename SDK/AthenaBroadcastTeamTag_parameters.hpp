#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaBroadcastTeamTag

#include "Basic.hpp"


namespace SDK::Params
{

// Function AthenaBroadcastTeamTag.AthenaBroadcastTeamTag_C.ExecuteUbergraph_AthenaBroadcastTeamTag
// 0x0068 (0x0068 - 0x0000)
struct AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D01[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MaxSquadSize;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D02[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D03[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0040(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag) == 0x000008, "Wrong alignment on AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag");
static_assert(sizeof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag) == 0x000068, "Wrong size on AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, EntryPoint) == 0x000000, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, Temp_bool_Variable) == 0x000004, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, K2Node_Event_MaxSquadSize) == 0x000008, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::K2Node_Event_MaxSquadSize' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, CallFunc_Map_Find_Value) == 0x000010, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, K2Node_Event_IsDesignTime) == 0x000039, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag, K2Node_Select_Default) == 0x000040, "Member 'AthenaBroadcastTeamTag_C_ExecuteUbergraph_AthenaBroadcastTeamTag::K2Node_Select_Default' has a wrong offset!");

// Function AthenaBroadcastTeamTag.AthenaBroadcastTeamTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastTeamTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaBroadcastTeamTag_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaBroadcastTeamTag_C_PreConstruct");
static_assert(sizeof(AthenaBroadcastTeamTag_C_PreConstruct) == 0x000001, "Wrong size on AthenaBroadcastTeamTag_C_PreConstruct");
static_assert(offsetof(AthenaBroadcastTeamTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaBroadcastTeamTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaBroadcastTeamTag.AthenaBroadcastTeamTag_C.UpdateMaxSquadSize
// 0x0004 (0x0004 - 0x0000)
struct AthenaBroadcastTeamTag_C_UpdateMaxSquadSize final
{
public:
	int32                                         MaxSquadSize;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastTeamTag_C_UpdateMaxSquadSize) == 0x000004, "Wrong alignment on AthenaBroadcastTeamTag_C_UpdateMaxSquadSize");
static_assert(sizeof(AthenaBroadcastTeamTag_C_UpdateMaxSquadSize) == 0x000004, "Wrong size on AthenaBroadcastTeamTag_C_UpdateMaxSquadSize");
static_assert(offsetof(AthenaBroadcastTeamTag_C_UpdateMaxSquadSize, MaxSquadSize) == 0x000000, "Member 'AthenaBroadcastTeamTag_C_UpdateMaxSquadSize::MaxSquadSize' has a wrong offset!");

}

