#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Parent_Tree

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Parent_Tree.Parent_Tree_C.RemoveTestWind
// 0x0018 (0x0018 - 0x0000)
struct Parent_Tree_C_RemoveTestWind final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasWindImpulse_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Parent_Tree_C_RemoveTestWind) == 0x000008, "Wrong alignment on Parent_Tree_C_RemoveTestWind");
static_assert(sizeof(Parent_Tree_C_RemoveTestWind) == 0x000018, "Wrong size on Parent_Tree_C_RemoveTestWind");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, BlendTime) == 0x000000, "Member 'Parent_Tree_C_RemoveTestWind::BlendTime' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_GetWindManager_ReturnValue) == 0x000008, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_GetWindManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_HasWindImpulse_ReturnValue) == 0x000011, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_HasWindImpulse_ReturnValue' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.UserConstructionScript
// 0x02C0 (0x02C0 - 0x0000)
struct Parent_Tree_C_UserConstructionScript final
{
public:
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EF7[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EF8[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EF9[0xC];                                     // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFA[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFB[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFC[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFD[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue;  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFE[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EFF[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F00[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetIntenseWindMaterialsForPreview_Materials; // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue; // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F01[0x6];                                     // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance_1;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F02[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F03[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0244(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F04[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F05[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F06[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_1;   // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_UserConstructionScript) == 0x000010, "Wrong alignment on Parent_Tree_C_UserConstructionScript");
static_assert(sizeof(Parent_Tree_C_UserConstructionScript) == 0x0002C0, "Wrong size on Parent_Tree_C_UserConstructionScript");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, IntenseWindMaterialsForPreview) == 0x000000, "Member 'Parent_Tree_C_UserConstructionScript::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, OriginalMaterials) == 0x000010, "Member 'Parent_Tree_C_UserConstructionScript::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetMaterials_ReturnValue) == 0x000020, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Parent_Tree_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetComponentBounds_Origin) == 0x00007C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetComponentBounds_BoxExtent) == 0x000088, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetComponentBounds_SphereRadius) == 0x000094, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000098, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00009C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsMobilePlatform_ReturnValue) == 0x0000B8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0000BC, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000C8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'Parent_Tree_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0000F0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsErebus_ReturnValue) == 0x000124, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000128, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000140, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000148, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue) == 0x000150, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_1) == 0x000160, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue) == 0x000178, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000180, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x000188, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_struct_Variable) == 0x000190, "Member 'Parent_Tree_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_AsMaterial_Instance) == 0x0001C8, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x0001D8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001E0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_2) == 0x0001E8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_Materials) == 0x0001F0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_Materials' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue) == 0x000200, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000201, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_AsMaterial_Instance_1) == 0x000210, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_AsMaterial_Instance_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x00021C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_RotateAngleAxis_ReturnValue) == 0x000228, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000234, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x000238, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x00023C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x000240, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_MakeColor_ReturnValue) == 0x000244, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1) == 0x000258, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1) == 0x000260, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue) == 0x000268, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x000278, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x00027C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x000280, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x000284, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x000288, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x00028C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_R_1) == 0x00029C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_G_1) == 0x0002A0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_B_1) == 0x0002A4, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_A_1) == 0x0002A8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue_1) == 0x0002B0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue_1' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.ChangeWindIntensity
// 0x0008 (0x0008 - 0x0000)
struct Parent_Tree_C_ChangeWindIntensity final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_It_Takes_To_Reach_New_Intensity;              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_ChangeWindIntensity) == 0x000004, "Wrong alignment on Parent_Tree_C_ChangeWindIntensity");
static_assert(sizeof(Parent_Tree_C_ChangeWindIntensity) == 0x000008, "Wrong size on Parent_Tree_C_ChangeWindIntensity");
static_assert(offsetof(Parent_Tree_C_ChangeWindIntensity, Intensity) == 0x000000, "Member 'Parent_Tree_C_ChangeWindIntensity::Intensity' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ChangeWindIntensity, Time_It_Takes_To_Reach_New_Intensity) == 0x000004, "Member 'Parent_Tree_C_ChangeWindIntensity::Time_It_Takes_To_Reach_New_Intensity' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.ExecuteUbergraph_Parent_Tree
// 0x000C (0x000C - 0x0000)
struct Parent_Tree_C_ExecuteUbergraph_Parent_Tree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Intensity;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree) == 0x000004, "Wrong alignment on Parent_Tree_C_ExecuteUbergraph_Parent_Tree");
static_assert(sizeof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree) == 0x00000C, "Wrong size on Parent_Tree_C_ExecuteUbergraph_Parent_Tree");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, EntryPoint) == 0x000000, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::EntryPoint' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, K2Node_CustomEvent_Intensity) == 0x000004, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity) == 0x000008, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity' has a wrong offset!");

}

