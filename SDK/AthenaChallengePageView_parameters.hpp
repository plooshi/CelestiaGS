#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengePageView

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengePageView.AthenaChallengePageView_C.BP_OnNumPagesSet
// 0x0004 (0x0004 - 0x0000)
struct AthenaChallengePageView_C_BP_OnNumPagesSet final
{
public:
	int32                                         NumPages;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengePageView_C_BP_OnNumPagesSet) == 0x000004, "Wrong alignment on AthenaChallengePageView_C_BP_OnNumPagesSet");
static_assert(sizeof(AthenaChallengePageView_C_BP_OnNumPagesSet) == 0x000004, "Wrong size on AthenaChallengePageView_C_BP_OnNumPagesSet");
static_assert(offsetof(AthenaChallengePageView_C_BP_OnNumPagesSet, NumPages) == 0x000000, "Member 'AthenaChallengePageView_C_BP_OnNumPagesSet::NumPages' has a wrong offset!");

// Function AthenaChallengePageView.AthenaChallengePageView_C.BP_OnCyclePageIn
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengePageView_C_BP_OnCyclePageIn final
{
public:
	bool                                          bForward;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageView_C_BP_OnCyclePageIn) == 0x000001, "Wrong alignment on AthenaChallengePageView_C_BP_OnCyclePageIn");
static_assert(sizeof(AthenaChallengePageView_C_BP_OnCyclePageIn) == 0x000001, "Wrong size on AthenaChallengePageView_C_BP_OnCyclePageIn");
static_assert(offsetof(AthenaChallengePageView_C_BP_OnCyclePageIn, bForward) == 0x000000, "Member 'AthenaChallengePageView_C_BP_OnCyclePageIn::bForward' has a wrong offset!");

// Function AthenaChallengePageView.AthenaChallengePageView_C.BP_OnCyclePageOut
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengePageView_C_BP_OnCyclePageOut final
{
public:
	bool                                          bForward;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageView_C_BP_OnCyclePageOut) == 0x000001, "Wrong alignment on AthenaChallengePageView_C_BP_OnCyclePageOut");
static_assert(sizeof(AthenaChallengePageView_C_BP_OnCyclePageOut) == 0x000001, "Wrong size on AthenaChallengePageView_C_BP_OnCyclePageOut");
static_assert(offsetof(AthenaChallengePageView_C_BP_OnCyclePageOut, bForward) == 0x000000, "Member 'AthenaChallengePageView_C_BP_OnCyclePageOut::bForward' has a wrong offset!");

// Function AthenaChallengePageView.AthenaChallengePageView_C.BP_OnIsInGameSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengePageView_C_BP_OnIsInGameSet final
{
public:
	bool                                          bIsInGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageView_C_BP_OnIsInGameSet) == 0x000001, "Wrong alignment on AthenaChallengePageView_C_BP_OnIsInGameSet");
static_assert(sizeof(AthenaChallengePageView_C_BP_OnIsInGameSet) == 0x000001, "Wrong size on AthenaChallengePageView_C_BP_OnIsInGameSet");
static_assert(offsetof(AthenaChallengePageView_C_BP_OnIsInGameSet, bIsInGame) == 0x000000, "Member 'AthenaChallengePageView_C_BP_OnIsInGameSet::bIsInGame' has a wrong offset!");

// Function AthenaChallengePageView.AthenaChallengePageView_C.ExecuteUbergraph_AthenaChallengePageView
// 0x0068 (0x0068 - 0x0000)
struct AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70F6[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_NumPages;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bForward_1;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bForward;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70F7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInGame;                            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70F8[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70F9[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView) == 0x000008, "Wrong alignment on AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView");
static_assert(sizeof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView) == 0x000068, "Wrong size on AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, EntryPoint) == 0x000000, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_bool_Variable) == 0x000004, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_byte_Variable) == 0x000005, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_byte_Variable_1) == 0x000006, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_bool_Variable_1) == 0x000007, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_float_Variable) == 0x000008, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, Temp_bool_Variable_2) == 0x00000C, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Event_NumPages) == 0x000020, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Event_NumPages' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Event_bForward_1) == 0x000025, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Event_bForward_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Select_Default) == 0x000026, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Event_bForward) == 0x000027, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Event_bForward' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000028, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00002C, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_GetEndTime_ReturnValue) == 0x000038, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x00003C, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Event_bIsInGame) == 0x000040, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Event_bIsInGame' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Select_Default_1) == 0x000048, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_Select_Default_2) == 0x000058, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'AthenaChallengePageView_C_ExecuteUbergraph_AthenaChallengePageView::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

