#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimalSquadMember

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MinimalSquadMember.MinimalSquadMember_C.SetEmptyVisuals
// 0x0008 (0x0008 - 0x0000)
struct MinimalSquadMember_C_SetEmptyVisuals final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadMember_C_SetEmptyVisuals) == 0x000008, "Wrong alignment on MinimalSquadMember_C_SetEmptyVisuals");
static_assert(sizeof(MinimalSquadMember_C_SetEmptyVisuals) == 0x000008, "Wrong size on MinimalSquadMember_C_SetEmptyVisuals");
static_assert(offsetof(MinimalSquadMember_C_SetEmptyVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'MinimalSquadMember_C_SetEmptyVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function MinimalSquadMember.MinimalSquadMember_C.SetSitOutVisuals
// 0x0008 (0x0008 - 0x0000)
struct MinimalSquadMember_C_SetSitOutVisuals final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadMember_C_SetSitOutVisuals) == 0x000008, "Wrong alignment on MinimalSquadMember_C_SetSitOutVisuals");
static_assert(sizeof(MinimalSquadMember_C_SetSitOutVisuals) == 0x000008, "Wrong size on MinimalSquadMember_C_SetSitOutVisuals");
static_assert(offsetof(MinimalSquadMember_C_SetSitOutVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'MinimalSquadMember_C_SetSitOutVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function MinimalSquadMember.MinimalSquadMember_C.SetNotReadyVisuals
// 0x0008 (0x0008 - 0x0000)
struct MinimalSquadMember_C_SetNotReadyVisuals final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadMember_C_SetNotReadyVisuals) == 0x000008, "Wrong alignment on MinimalSquadMember_C_SetNotReadyVisuals");
static_assert(sizeof(MinimalSquadMember_C_SetNotReadyVisuals) == 0x000008, "Wrong size on MinimalSquadMember_C_SetNotReadyVisuals");
static_assert(offsetof(MinimalSquadMember_C_SetNotReadyVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'MinimalSquadMember_C_SetNotReadyVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function MinimalSquadMember.MinimalSquadMember_C.OnMemberGameReadinessChanged
// 0x0001 (0x0001 - 0x0000)
struct MinimalSquadMember_C_OnMemberGameReadinessChanged final
{
public:
	EGameReadiness                                ReadyStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadMember_C_OnMemberGameReadinessChanged) == 0x000001, "Wrong alignment on MinimalSquadMember_C_OnMemberGameReadinessChanged");
static_assert(sizeof(MinimalSquadMember_C_OnMemberGameReadinessChanged) == 0x000001, "Wrong size on MinimalSquadMember_C_OnMemberGameReadinessChanged");
static_assert(offsetof(MinimalSquadMember_C_OnMemberGameReadinessChanged, ReadyStatus) == 0x000000, "Member 'MinimalSquadMember_C_OnMemberGameReadinessChanged::ReadyStatus' has a wrong offset!");

// Function MinimalSquadMember.MinimalSquadMember_C.BP_OnTeamMemberEstablished
// 0x0001 (0x0001 - 0x0000)
struct MinimalSquadMember_C_BP_OnTeamMemberEstablished final
{
public:
	bool                                          bHasValidMember;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinimalSquadMember_C_BP_OnTeamMemberEstablished) == 0x000001, "Wrong alignment on MinimalSquadMember_C_BP_OnTeamMemberEstablished");
static_assert(sizeof(MinimalSquadMember_C_BP_OnTeamMemberEstablished) == 0x000001, "Wrong size on MinimalSquadMember_C_BP_OnTeamMemberEstablished");
static_assert(offsetof(MinimalSquadMember_C_BP_OnTeamMemberEstablished, bHasValidMember) == 0x000000, "Member 'MinimalSquadMember_C_BP_OnTeamMemberEstablished::bHasValidMember' has a wrong offset!");

// Function MinimalSquadMember.MinimalSquadMember_C.ExecuteUbergraph_MinimalSquadMember
// 0x0020 (0x0020 - 0x0000)
struct MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameReadiness                                K2Node_Event_ReadyStatus;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasValidMember;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentMemberLocal_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameReadiness                                Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B9[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember) == 0x000008, "Wrong alignment on MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember");
static_assert(sizeof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember) == 0x000020, "Wrong size on MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, EntryPoint) == 0x000000, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, K2Node_Event_ReadyStatus) == 0x000004, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::K2Node_Event_ReadyStatus' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000006, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000007, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, K2Node_Event_bHasValidMember) == 0x000008, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::K2Node_Event_bHasValidMember' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, CallFunc_IsCurrentMemberLocal_ReturnValue) == 0x000009, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::CallFunc_IsCurrentMemberLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, Temp_byte_Variable) == 0x00000A, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, K2Node_Select_Default) == 0x000010, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'MinimalSquadMember_C_ExecuteUbergraph_MinimalSquadMember::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

