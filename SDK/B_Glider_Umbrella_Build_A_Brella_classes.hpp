#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Glider_Umbrella_Build_A_Brella

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Glider_Niagara_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Glider_Umbrella_Build_A_Brella.B_Glider_Umbrella_Build_A_Brella_C
// 0x0058 (0x0430 - 0x03D8)
class AB_Glider_Umbrella_Build_A_Brella_C final : public AB_Glider_Niagara_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Glider_Umbrella_Build_A_Brella_C; // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortVehicleAudioVoice*                 FortVehicleAudioVoice1;                            // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Glider_Umbrella_S12;                             // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skel_mesh_handle;                                  // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skel_mesh_bottom_cap;                              // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skel_mesh_top_cap;                                 // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skel_mesh_primary;                                 // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha_Timeline_Color_Alpha_3A8DCF7643418952B34B819DCCF8C226; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Alpha_Timeline__Direction_3A8DCF7643418952B34B819DCCF8C226; // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7869[0x3];                                     // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Alpha_Timeline;                                    // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 FortVehicleAudioVoice;                             // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Parachute_Open;                                 // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Deactivate_Niagara_System();
	void Activate_Niagara_System(bool Reset);
	void Set_Niagara_System_User_Variable__Color_(class FName Param_Name, const struct FLinearColor& Value);
	void Set_Niagara_System_User_Variable__Bool_(class FName Param_Name, bool Value);
	void Set_Niagara_System_User_Variable__Int_(class FName Param_Name, int32 Value);
	void Set_Niagara_System_User_Variable__Vector_(class FName Param_Name, const struct FVector& Value);
	void Set_Niagara_System_User_Variable__Float_(class FName Param_Name, float Value);
	void Get_Niagara_Particles__Gameplay_Tag_Array_(struct FGameplayTagContainer* Gameplay_Tag_Container);
	void UserConstructionScript();
	void K2_SetChuteMeshVisibility(bool bParachuteVisibility);
	void OnParachuteTrailUpdated(float MovementLengthSquared, float ForwardDot, float RightDot, float RotationalMovementAcceleration);
	void OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void Audio_Update(float ForwardDot, float RightDot);
	void OnGliderFullyDeployed();
	void Alpha_Timeline__FinishedFunc();
	void Alpha_Timeline__UpdateFunc();
	void ExecuteUbergraph_B_Glider_Umbrella_Build_A_Brella(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Glider_Umbrella_Build_A_Brella_C">();
	}
	static class AB_Glider_Umbrella_Build_A_Brella_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Glider_Umbrella_Build_A_Brella_C>();
	}
};
static_assert(alignof(AB_Glider_Umbrella_Build_A_Brella_C) == 0x000008, "Wrong alignment on AB_Glider_Umbrella_Build_A_Brella_C");
static_assert(sizeof(AB_Glider_Umbrella_Build_A_Brella_C) == 0x000430, "Wrong size on AB_Glider_Umbrella_Build_A_Brella_C");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, UberGraphFrame_B_Glider_Umbrella_Build_A_Brella_C) == 0x0003D8, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::UberGraphFrame_B_Glider_Umbrella_Build_A_Brella_C' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, FortVehicleAudioVoice1) == 0x0003E0, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::FortVehicleAudioVoice1' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, P_Glider_Umbrella_S12) == 0x0003E8, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::P_Glider_Umbrella_S12' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Skel_mesh_handle) == 0x0003F0, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Skel_mesh_handle' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Skel_mesh_bottom_cap) == 0x0003F8, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Skel_mesh_bottom_cap' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Skel_mesh_top_cap) == 0x000400, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Skel_mesh_top_cap' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Skel_mesh_primary) == 0x000408, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Skel_mesh_primary' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Alpha_Timeline_Color_Alpha_3A8DCF7643418952B34B819DCCF8C226) == 0x000410, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Alpha_Timeline_Color_Alpha_3A8DCF7643418952B34B819DCCF8C226' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Alpha_Timeline__Direction_3A8DCF7643418952B34B819DCCF8C226) == 0x000414, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Alpha_Timeline__Direction_3A8DCF7643418952B34B819DCCF8C226' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Alpha_Timeline) == 0x000418, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Alpha_Timeline' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, FortVehicleAudioVoice) == 0x000420, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::FortVehicleAudioVoice' has a wrong offset!");
static_assert(offsetof(AB_Glider_Umbrella_Build_A_Brella_C, Is_Parachute_Open) == 0x000428, "Member 'AB_Glider_Umbrella_Build_A_Brella_C::Is_Parachute_Open' has a wrong offset!");

}

