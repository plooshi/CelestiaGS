#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapPanel

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function AthenaMapPanel.AthenaMapPanel_C.UpdateDisplayShowAllBtn
// 0x0006 (0x0006 - 0x0000)
struct AthenaMapPanel_C_UpdateDisplayShowAllBtn final
{
public:
	ECommonInputType                              InputMethode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_UpdateDisplayShowAllBtn) == 0x000001, "Wrong alignment on AthenaMapPanel_C_UpdateDisplayShowAllBtn");
static_assert(sizeof(AthenaMapPanel_C_UpdateDisplayShowAllBtn) == 0x000006, "Wrong size on AthenaMapPanel_C_UpdateDisplayShowAllBtn");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, InputMethode) == 0x000000, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::InputMethode' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, Temp_bool_Variable) == 0x000001, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, Temp_byte_Variable) == 0x000003, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, Temp_byte_Variable_1) == 0x000004, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_UpdateDisplayShowAllBtn, K2Node_Select_Default) == 0x000005, "Member 'AthenaMapPanel_C_UpdateDisplayShowAllBtn::K2Node_Select_Default' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.On Activated or Deactivated
// 0x0068 (0x0068 - 0x0000)
struct AthenaMapPanel_C_On_Activated_or_Deactivated final
{
public:
	bool                                          bActivating;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6203[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6204[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6205[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTouchInputPlatform_ReturnValue;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6206[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0040(0x0020)()
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_On_Activated_or_Deactivated) == 0x000008, "Wrong alignment on AthenaMapPanel_C_On_Activated_or_Deactivated");
static_assert(sizeof(AthenaMapPanel_C_On_Activated_or_Deactivated) == 0x000068, "Wrong size on AthenaMapPanel_C_On_Activated_or_Deactivated");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, bActivating) == 0x000000, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::bActivating' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, Temp_byte_Variable) == 0x000001, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_IsUsingTouch_ReturnValue) == 0x000010, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x000018, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_IsMobileGame_ReturnValue) == 0x000021, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_IsUsingTouch_ReturnValue_1) == 0x000022, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, Temp_bool_Variable) == 0x000024, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000030, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_IsMobileGame_ReturnValue_1) == 0x000038, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, Temp_byte_Variable_1) == 0x00003A, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_IsTouchInputPlatform_ReturnValue) == 0x00003B, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_IsTouchInputPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, Temp_byte_Variable_2) == 0x00003C, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000040, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, Temp_bool_Variable_1) == 0x000060, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, K2Node_Select_Default) == 0x000061, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_On_Activated_or_Deactivated, K2Node_Select_Default_1) == 0x000062, "Member 'AthenaMapPanel_C_On_Activated_or_Deactivated::K2Node_Select_Default_1' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.OnTouchEnded
// 0x0228 (0x0228 - 0x0000)
struct AthenaMapPanel_C_OnTouchEnded final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsTouchInputPlatform_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6207[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
};
static_assert(alignof(AthenaMapPanel_C_OnTouchEnded) == 0x000008, "Wrong alignment on AthenaMapPanel_C_OnTouchEnded");
static_assert(sizeof(AthenaMapPanel_C_OnTouchEnded) == 0x000228, "Wrong size on AthenaMapPanel_C_OnTouchEnded");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, MyGeometry) == 0x000000, "Member 'AthenaMapPanel_C_OnTouchEnded::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, InTouchEvent) == 0x000038, "Member 'AthenaMapPanel_C_OnTouchEnded::InTouchEvent' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, ReturnValue) == 0x0000A8, "Member 'AthenaMapPanel_C_OnTouchEnded::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, CallFunc_IsTouchInputPlatform_ReturnValue) == 0x000160, "Member 'AthenaMapPanel_C_OnTouchEnded::CallFunc_IsTouchInputPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, CallFunc_GetContext_ReturnValue) == 0x000168, "Member 'AthenaMapPanel_C_OnTouchEnded::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_OnTouchEnded, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'AthenaMapPanel_C_OnTouchEnded::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.Add Extension Widget
// 0x0010 (0x0010 - 0x0000)
struct AthenaMapPanel_C_Add_Extension_Widget final
{
public:
	class UUserWidget*                            New_Widget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_Add_Extension_Widget) == 0x000008, "Wrong alignment on AthenaMapPanel_C_Add_Extension_Widget");
static_assert(sizeof(AthenaMapPanel_C_Add_Extension_Widget) == 0x000010, "Wrong size on AthenaMapPanel_C_Add_Extension_Widget");
static_assert(offsetof(AthenaMapPanel_C_Add_Extension_Widget, New_Widget) == 0x000000, "Member 'AthenaMapPanel_C_Add_Extension_Widget::New_Widget' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_Add_Extension_Widget, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000008, "Member 'AthenaMapPanel_C_Add_Extension_Widget::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.SetDisplayedWidget
// 0x0040 (0x0040 - 0x0000)
struct AthenaMapPanel_C_SetDisplayedWidget final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6208[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6209[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigame_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMinigameFullscreenMapWidgetType              CallFunc_GetMinigameMapPanelDisplayType_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620B[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_SetDisplayedWidget) == 0x000008, "Wrong alignment on AthenaMapPanel_C_SetDisplayedWidget");
static_assert(sizeof(AthenaMapPanel_C_SetDisplayedWidget) == 0x000040, "Wrong size on AthenaMapPanel_C_SetDisplayedWidget");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, Temp_int_Variable) == 0x000000, "Member 'AthenaMapPanel_C_SetDisplayedWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, Temp_int_Variable_1) == 0x000004, "Member 'AthenaMapPanel_C_SetDisplayedWidget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, Temp_bool_Variable) == 0x000008, "Member 'AthenaMapPanel_C_SetDisplayedWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_GetNumWidgets_ReturnValue) == 0x000018, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000020, "Member 'AthenaMapPanel_C_SetDisplayedWidget::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AthenaMapPanel_C_SetDisplayedWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_GetMinigame_ReturnValue) == 0x000030, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_GetMinigame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_GetMinigameMapPanelDisplayType_ReturnValue) == 0x000039, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_GetMinigameMapPanelDisplayType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'AthenaMapPanel_C_SetDisplayedWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_SetDisplayedWidget, K2Node_Select_Default) == 0x00003C, "Member 'AthenaMapPanel_C_SetDisplayedWidget::K2Node_Select_Default' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.OnLoaded_2A6416D349E44531654BBCB6287CB1A5
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5 final
{
public:
	class UClass*                                 Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5) == 0x000008, "Wrong alignment on AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5");
static_assert(sizeof(AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5) == 0x000008, "Wrong size on AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5");
static_assert(offsetof(AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5, Loaded) == 0x000000, "Member 'AthenaMapPanel_C_OnLoaded_2A6416D349E44531654BBCB6287CB1A5::Loaded' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.OnChangeViewMode
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapPanel_C_OnChangeViewMode final
{
public:
	bool                                          bChallengesFocusedMode;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaMapPanel_C_OnChangeViewMode) == 0x000001, "Wrong alignment on AthenaMapPanel_C_OnChangeViewMode");
static_assert(sizeof(AthenaMapPanel_C_OnChangeViewMode) == 0x000001, "Wrong size on AthenaMapPanel_C_OnChangeViewMode");
static_assert(offsetof(AthenaMapPanel_C_OnChangeViewMode, bChallengesFocusedMode) == 0x000000, "Member 'AthenaMapPanel_C_OnChangeViewMode::bChallengesFocusedMode' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'AthenaMapPanel_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapPanel_C_HandleInputMethodChanged final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on AthenaMapPanel_C_HandleInputMethodChanged");
static_assert(sizeof(AthenaMapPanel_C_HandleInputMethodChanged) == 0x000001, "Wrong size on AthenaMapPanel_C_HandleInputMethodChanged");
static_assert(offsetof(AthenaMapPanel_C_HandleInputMethodChanged, InputType) == 0x000000, "Member 'AthenaMapPanel_C_HandleInputMethodChanged::InputType' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.OnInspectChallengesToggled
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapPanel_C_OnInspectChallengesToggled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaMapPanel_C_OnInspectChallengesToggled) == 0x000001, "Wrong alignment on AthenaMapPanel_C_OnInspectChallengesToggled");
static_assert(sizeof(AthenaMapPanel_C_OnInspectChallengesToggled) == 0x000001, "Wrong size on AthenaMapPanel_C_OnInspectChallengesToggled");
static_assert(offsetof(AthenaMapPanel_C_OnInspectChallengesToggled, bEnabled) == 0x000000, "Member 'AthenaMapPanel_C_OnInspectChallengesToggled::bEnabled' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.UpdateInspectText
// 0x0018 (0x0018 - 0x0000)
struct AthenaMapPanel_C_UpdateInspectText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaMapPanel_C_UpdateInspectText) == 0x000008, "Wrong alignment on AthenaMapPanel_C_UpdateInspectText");
static_assert(sizeof(AthenaMapPanel_C_UpdateInspectText) == 0x000018, "Wrong size on AthenaMapPanel_C_UpdateInspectText");
static_assert(offsetof(AthenaMapPanel_C_UpdateInspectText, InText) == 0x000000, "Member 'AthenaMapPanel_C_UpdateInspectText::InText' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'AthenaMapPanel_C_BndEvt__Button_MobileInspect_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.BP_HandleMapCursorToggled
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapPanel_C_BP_HandleMapCursorToggled final
{
public:
	bool                                          bShowingMapCursor;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaMapPanel_C_BP_HandleMapCursorToggled) == 0x000001, "Wrong alignment on AthenaMapPanel_C_BP_HandleMapCursorToggled");
static_assert(sizeof(AthenaMapPanel_C_BP_HandleMapCursorToggled) == 0x000001, "Wrong size on AthenaMapPanel_C_BP_HandleMapCursorToggled");
static_assert(offsetof(AthenaMapPanel_C_BP_HandleMapCursorToggled, bShowingMapCursor) == 0x000000, "Member 'AthenaMapPanel_C_BP_HandleMapCursorToggled::bShowingMapCursor' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaMapPanel_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaMapPanel_C_PreConstruct");
static_assert(sizeof(AthenaMapPanel_C_PreConstruct) == 0x000001, "Wrong size on AthenaMapPanel_C_PreConstruct");
static_assert(offsetof(AthenaMapPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaMapPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaMapPanel.AthenaMapPanel_C.ExecuteUbergraph_AthenaMapPanel
// 0x0140 (0x0140 - 0x0000)
struct AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_620C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalPlayer*                           CallFunc_GetOwningLocalPlayer_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Loaded;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620E[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bChallengesFocusedMode;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	ECommonInputType                              K2Node_CustomEvent_InputType;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6210[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0074(0x0008)(NoDestructor)
	uint8                                         Pad_6211[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x0090(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2;    // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_2;                // 0x00A0(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3;    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_3;                // 0x00B0(0x0008)(NoDestructor)
	class UClass*                                 Temp_class_Variable;                               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6212[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortHideShowInterface> K2Node_DynamicCast_AsFort_Hide_Show_Interface;     // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6213[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6214[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InText;                               // 0x0100(0x0018)(ConstParm)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowingMapCursor;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6215[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
};
static_assert(alignof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel) == 0x000008, "Wrong alignment on AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel");
static_assert(sizeof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel) == 0x000140, "Wrong size on AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, EntryPoint) == 0x000000, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_GetOwningLocalPlayer_ReturnValue) == 0x000008, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_GetOwningLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_CustomEvent_Loaded) == 0x000010, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, Temp_bool_Variable) == 0x000020, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000028, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_GetCurrentInputType_ReturnValue) == 0x000040, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_IsUsingTouch_ReturnValue) == 0x000041, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Event_bChallengesFocusedMode) == 0x000050, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Event_bChallengesFocusedMode' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_IsMobileGame_ReturnValue) == 0x000051, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_IsUsingTouch_ReturnValue_1) == 0x000052, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_ComponentBoundEvent_Button_1) == 0x000058, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_CustomEvent_InputType) == 0x000070, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_CustomEvent_InputType' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Event_bEnabled) == 0x000071, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_MakeStruct_SlateChildSize) == 0x000074, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000080, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000088, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_MakeStruct_SlateChildSize_1) == 0x000090, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2) == 0x000098, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_MakeStruct_SlateChildSize_2) == 0x0000A0, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_MakeStruct_SlateChildSize_2' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3) == 0x0000A8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_MakeStruct_SlateChildSize_3) == 0x0000B0, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_MakeStruct_SlateChildSize_3' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, Temp_class_Variable) == 0x0000B8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_ClassDynamicCast_AsUser_Widget) == 0x0000C0, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_ClassDynamicCast_bSuccess) == 0x0000C8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_DynamicCast_AsFort_Hide_Show_Interface) == 0x0000D8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_DynamicCast_AsFort_Hide_Show_Interface' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_AddChild_ReturnValue) == 0x0000F0, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Event_InText) == 0x000100, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_ComponentBoundEvent_Button) == 0x000118, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Event_bShowingMapCursor) == 0x000120, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Event_bShowingMapCursor' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Event_IsDesignTime) == 0x000121, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel, K2Node_Select_Default) == 0x000128, "Member 'AthenaMapPanel_C_ExecuteUbergraph_AthenaMapPanel::K2Node_Select_Default' has a wrong offset!");

}

