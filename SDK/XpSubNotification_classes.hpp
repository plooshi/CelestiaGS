#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpSubNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass XpSubNotification.XpSubNotification_C
// 0x0058 (0x02D8 - 0x0280)
class UXpSubNotification_C final : public UXpEarnedSubNotification
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Reset;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_111;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_214;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_lIGHTsWEEP;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RarityColor_Glow;                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          LevelUp_Header;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LevelUP;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_RewardType;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_XpValue;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void SetXpValue(int32 XpValue);
	void FinishedXpDisplayAnim();
	void Reset_render_opacity();
	void PreConstruct(bool IsDesignTime);
	void Play_Intro_Sound();
	void ExecuteUbergraph_XpSubNotification(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"XpSubNotification_C">();
	}
	static class UXpSubNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXpSubNotification_C>();
	}
};
static_assert(alignof(UXpSubNotification_C) == 0x000008, "Wrong alignment on UXpSubNotification_C");
static_assert(sizeof(UXpSubNotification_C) == 0x0002D8, "Wrong size on UXpSubNotification_C");
static_assert(offsetof(UXpSubNotification_C, UberGraphFrame) == 0x000280, "Member 'UXpSubNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Reset) == 0x000288, "Member 'UXpSubNotification_C::Reset' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Intro) == 0x000290, "Member 'UXpSubNotification_C::Intro' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Image_111) == 0x000298, "Member 'UXpSubNotification_C::Image_111' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Image_214) == 0x0002A0, "Member 'UXpSubNotification_C::Image_214' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Image_lIGHTsWEEP) == 0x0002A8, "Member 'UXpSubNotification_C::Image_lIGHTsWEEP' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Image_RarityColor_Glow) == 0x0002B0, "Member 'UXpSubNotification_C::Image_RarityColor_Glow' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, LevelUp_Header) == 0x0002B8, "Member 'UXpSubNotification_C::LevelUp_Header' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, SizeBox_LevelUP) == 0x0002C0, "Member 'UXpSubNotification_C::SizeBox_LevelUP' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Text_RewardType) == 0x0002C8, "Member 'UXpSubNotification_C::Text_RewardType' has a wrong offset!");
static_assert(offsetof(UXpSubNotification_C, Text_XpValue) == 0x0002D0, "Member 'UXpSubNotification_C::Text_XpValue' has a wrong offset!");

}

