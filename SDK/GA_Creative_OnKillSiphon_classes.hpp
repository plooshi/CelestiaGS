#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Creative_OnKillSiphon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GAT_Creative_TriggeredAbility_Pawn_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Creative_OnKillSiphon.GA_Creative_OnKillSiphon_C
// 0x0058 (0x0B10 - 0x0AB8)
class UGA_Creative_OnKillSiphon_C final : public UGAT_Creative_TriggeredAbility_Pawn_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Creative_OnKillSiphon_C;         // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AAthena_GameState_C*                    GameState;                                         // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreativeOrPlayground;                            // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E57[0x7];                                     // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_HealPlayer;                                     // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldConvertExcessHealthToShields;               // 0x0AD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E58[0x7];                                     // 0x0AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ShieldGE;                                          // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ConsumedCue;                                       // 0x0AE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugBypasLocalMapEnable;                         // 0x0AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttemptHealthRestore;                             // 0x0AF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttemptMatsRestore;                               // 0x0AF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E59[0x1];                                     // 0x0AF3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NameGrantWood;                                     // 0x0AF4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameGrantStone;                                    // 0x0AFC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameGrantMetal;                                    // 0x0B04(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Creative_OnKillSiphon(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void RestoreHealth(bool* Success, float* InitialHealAmount, float* ActualAppliedHeal, float* ExcessHealing);
	void AddShields(bool Param_bShouldConvertExcessHealthToShields, float ShieldToAdd, bool* bAddedShields, float* ShieldAdded);
	void DetermineHealthDelta(float HealingAmount, float* MaxHealth, float* CurrentHealth, float* HealthDelta, float* ExcessHealh);
	void SetupRestoreModes(bool* ShouldContinue);
	void AttemptHeal();
	void AttemptMats();
	void CalculateResources(EFortResourceType ResourceGrantType, bool* bSuccess, int32* ResourceToGive, EFortResourceType* ResourceType);
	void GiveResourcesToPlayer(bool bShouldGrant, int32 GiveAmount, EFortResourceType GiveType, bool* Success);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Creative_OnKillSiphon_C">();
	}
	static class UGA_Creative_OnKillSiphon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Creative_OnKillSiphon_C>();
	}
};
static_assert(alignof(UGA_Creative_OnKillSiphon_C) == 0x000008, "Wrong alignment on UGA_Creative_OnKillSiphon_C");
static_assert(sizeof(UGA_Creative_OnKillSiphon_C) == 0x000B10, "Wrong size on UGA_Creative_OnKillSiphon_C");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, UberGraphFrame_GA_Creative_OnKillSiphon_C) == 0x000AB8, "Member 'UGA_Creative_OnKillSiphon_C::UberGraphFrame_GA_Creative_OnKillSiphon_C' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, GameState) == 0x000AC0, "Member 'UGA_Creative_OnKillSiphon_C::GameState' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, IsCreativeOrPlayground) == 0x000AC8, "Member 'UGA_Creative_OnKillSiphon_C::IsCreativeOrPlayground' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, GE_HealPlayer) == 0x000AD0, "Member 'UGA_Creative_OnKillSiphon_C::GE_HealPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bShouldConvertExcessHealthToShields) == 0x000AD8, "Member 'UGA_Creative_OnKillSiphon_C::bShouldConvertExcessHealthToShields' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, ShieldGE) == 0x000AE0, "Member 'UGA_Creative_OnKillSiphon_C::ShieldGE' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, ConsumedCue) == 0x000AE8, "Member 'UGA_Creative_OnKillSiphon_C::ConsumedCue' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bDebugBypasLocalMapEnable) == 0x000AF0, "Member 'UGA_Creative_OnKillSiphon_C::bDebugBypasLocalMapEnable' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bAttemptHealthRestore) == 0x000AF1, "Member 'UGA_Creative_OnKillSiphon_C::bAttemptHealthRestore' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bAttemptMatsRestore) == 0x000AF2, "Member 'UGA_Creative_OnKillSiphon_C::bAttemptMatsRestore' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantWood) == 0x000AF4, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantWood' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantStone) == 0x000AFC, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantStone' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantMetal) == 0x000B04, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantMetal' has a wrong offset!");

}

