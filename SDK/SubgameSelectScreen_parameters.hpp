#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubgameSelectScreen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SubgameSelectScreen.SubgameSelectScreen_C.IsMinorShutdownWarningEnabled
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_IsMinorShutdownWarningEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_IsMinorShutdownWarningEnabled");
static_assert(sizeof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled) == 0x000018, "Wrong size on SubgameSelectScreen_C_IsMinorShutdownWarningEnabled");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, Enabled) == 0x000000, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetFeatureState_OutFeatureState) == 0x000010, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetFeatureState_OutReason) == 0x000011, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.IsBusyMatchmaking
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_IsBusyMatchmaking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMatchmakingContext*                CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchmakingLocal_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubgameSelectScreen_C_IsBusyMatchmaking) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_IsBusyMatchmaking");
static_assert(sizeof(SubgameSelectScreen_C_IsBusyMatchmaking) == 0x000018, "Wrong size on SubgameSelectScreen_C_IsBusyMatchmaking");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, ReturnValue) == 0x000000, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, CallFunc_IsMatchmakingLocal_ReturnValue) == 0x000010, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::CallFunc_IsMatchmakingLocal_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.AdvanceTextureCycle
// 0x0028 (0x0028 - 0x0000)
struct SubgameSelectScreen_C_AdvanceTextureCycle final
{
public:
	int32                                         NextTextureIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTextureIndex;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_AdvanceTextureCycle) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_AdvanceTextureCycle");
static_assert(sizeof(SubgameSelectScreen_C_AdvanceTextureCycle) == 0x000028, "Wrong size on SubgameSelectScreen_C_AdvanceTextureCycle");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, NextTextureIndex) == 0x000000, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::NextTextureIndex' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CurrentTextureIndex) == 0x000004, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CurrentTextureIndex' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Get_Item) == 0x000010, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.InitializeTextureCycle
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_InitializeTextureCycle final
{
public:
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_InitializeTextureCycle) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_InitializeTextureCycle");
static_assert(sizeof(SubgameSelectScreen_C_InitializeTextureCycle) == 0x000018, "Wrong size on SubgameSelectScreen_C_InitializeTextureCycle");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_Get_Item) == 0x000000, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.DialogResult_FE9F49084346A08B6F02BA99FB50F5CD
// 0x000C (0x000C - 0x0000)
struct SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5040[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD) == 0x000004, "Wrong alignment on SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD");
static_assert(sizeof(SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD) == 0x00000C, "Wrong size on SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD");
static_assert(offsetof(SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD, Result) == 0x000000, "Member 'SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD::Result' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD, ResultName) == 0x000004, "Member 'SubgameSelectScreen_C_DialogResult_FE9F49084346A08B6F02BA99FB50F5CD::ResultName' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'SubgameSelectScreen_C_BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.ExecuteUbergraph_SubgameSelectScreen
// 0x0070 (0x0070 - 0x0000)
struct SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5041[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5042[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5043[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5044[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFort_Entry_Music_Controller_BP_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AFort_Entry_Music_Controller_BP_C*      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen");
static_assert(sizeof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen) == 0x000070, "Wrong size on SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, EntryPoint) == 0x000000, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_Result) == 0x000020, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_ResultName) == 0x000024, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_name_Variable) == 0x00002C, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_byte_Variable) == 0x000034, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_SwitchEnum_CmpSuccess) == 0x000035, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue) == 0x000038, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_ComponentBoundEvent_Button) == 0x000048, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_Array_Get_Item) == 0x000060, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

