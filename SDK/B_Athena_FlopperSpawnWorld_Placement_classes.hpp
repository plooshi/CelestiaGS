#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_FlopperSpawnWorld_Placement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_FlopperSpawnWorld_Placement.B_Athena_FlopperSpawnWorld_Placement_C
// 0x0240 (0x0460 - 0x0220)
class AB_Athena_FlopperSpawnWorld_Placement_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Heightoffset;                                      // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A2[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_Enabled;                                       // 0x0240(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_SpawnChanceMin;                                // 0x0260(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_SpawnChanceMax;                                // 0x0280(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AmountSpawned;                                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A3[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        WaterBodyLocationsToSpawn;                         // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsRiverNarrow;                  // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiverNarrowSpawnOffset;                            // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AApollo_Waterbody_River_Parent_C*> RiversNarrow;                                      // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsRiverWide;                    // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiverWideSpawnOffset;                              // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AApollo_Waterbody_River_Parent_C*> RiversWide;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsLake;                         // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LakeSpawnOffset;                                   // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AApollo_Waterbody_Lake_Parent_C*> Lakes;                                             // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsIsland;                       // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IslandSpawnOffset;                                 // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWaterBodyIsland*>               Island;                                            // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsOceanIsland;                  // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OceanIslandSpawnOffset;                            // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWaterBodyIsland*>               OceansIslands;                                     // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         InitialSpawnVarience;                              // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplineLength;                                      // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialDistanceOnSpline;                           // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceBetweenSpawnsCustomSpline;                 // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomSplineSpawnOffset;                           // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A4[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_FlopperSpawn_CustomSpline_C*> CustomSpawnerSpline;                               // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UClass*>      POI_SpawnerMap;                                    // 0x0358(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 FlopperSpawner;                                    // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQueryInstanceBlueprintWrapper*      QueryInstance;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        FloodLocationsToSpawn;                             // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         WaterBodyAmountSpawned;                            // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OceanHeight;                                       // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GridSize;                                          // 0x03D0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SpaceBetween;                                      // 0x03F0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  AgencyTag;                                         // 0x0410(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTransform                             SpawnPoint;                                        // 0x0430(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Athena_FlopperSpawnWorld_Placement(int32 EntryPoint);
	void StartWaterBodySpawn();
	void EQS_Finished(class UEnvQueryInstanceBlueprintWrapper* Param_QueryInstance, EEnvQueryStatus QueryStatus);
	void Spawn(const struct FTransform& SpawnTransform, int32 ItemIndex);
	void StartEQSSpawn();
	void ReceiveBeginPlay();
	void OnReady_DAD759B24926A77D0754EB9E67EEA091(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void RollRarity(EFortRarity* RarityOut);
	struct FVector GetNormal(class USplineComponent* Spline, float Distance);
	void FindRiverNarrowLocations();
	void FindRiverWideLocations();
	void FindLakeLocations();
	void FindIslandLocations();
	void FindOceanLocations();
	void FindCustomSplineLocations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_FlopperSpawnWorld_Placement_C">();
	}
	static class AB_Athena_FlopperSpawnWorld_Placement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_FlopperSpawnWorld_Placement_C>();
	}
};
static_assert(alignof(AB_Athena_FlopperSpawnWorld_Placement_C) == 0x000010, "Wrong alignment on AB_Athena_FlopperSpawnWorld_Placement_C");
static_assert(sizeof(AB_Athena_FlopperSpawnWorld_Placement_C) == 0x000460, "Wrong size on AB_Athena_FlopperSpawnWorld_Placement_C");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, UberGraphFrame) == 0x000220, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Billboard) == 0x000228, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Billboard' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DefaultSceneRoot) == 0x000230, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Heightoffset) == 0x000238, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Heightoffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Row_Enabled) == 0x000240, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Row_Enabled' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Row_SpawnChanceMin) == 0x000260, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Row_SpawnChanceMin' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Row_SpawnChanceMax) == 0x000280, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Row_SpawnChanceMax' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, AmountSpawned) == 0x0002A0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::AmountSpawned' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, WaterBodyLocationsToSpawn) == 0x0002A8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::WaterBodyLocationsToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsRiverNarrow) == 0x0002B8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsRiverNarrow' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, RiverNarrowSpawnOffset) == 0x0002BC, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::RiverNarrowSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, RiversNarrow) == 0x0002C0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::RiversNarrow' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsRiverWide) == 0x0002D0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsRiverWide' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, RiverWideSpawnOffset) == 0x0002D4, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::RiverWideSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, RiversWide) == 0x0002D8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::RiversWide' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsLake) == 0x0002E8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsLake' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, LakeSpawnOffset) == 0x0002EC, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::LakeSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Lakes) == 0x0002F0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Lakes' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsIsland) == 0x000300, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsIsland' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, IslandSpawnOffset) == 0x000304, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::IslandSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, Island) == 0x000308, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::Island' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsOceanIsland) == 0x000318, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsOceanIsland' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, OceanIslandSpawnOffset) == 0x00031C, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::OceanIslandSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, OceansIslands) == 0x000320, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::OceansIslands' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, InitialSpawnVarience) == 0x000330, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::InitialSpawnVarience' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, SplineLength) == 0x000334, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::SplineLength' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, InitialDistanceOnSpline) == 0x000338, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::InitialDistanceOnSpline' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, DistanceBetweenSpawnsCustomSpline) == 0x00033C, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::DistanceBetweenSpawnsCustomSpline' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, CustomSplineSpawnOffset) == 0x000340, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::CustomSplineSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, CustomSpawnerSpline) == 0x000348, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::CustomSpawnerSpline' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, POI_SpawnerMap) == 0x000358, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::POI_SpawnerMap' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, FlopperSpawner) == 0x0003A8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::FlopperSpawner' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, QueryInstance) == 0x0003B0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::QueryInstance' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, FloodLocationsToSpawn) == 0x0003B8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::FloodLocationsToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, WaterBodyAmountSpawned) == 0x0003C8, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::WaterBodyAmountSpawned' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, OceanHeight) == 0x0003CC, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::OceanHeight' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, GridSize) == 0x0003D0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::GridSize' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, SpaceBetween) == 0x0003F0, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::SpaceBetween' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, AgencyTag) == 0x000410, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::AgencyTag' has a wrong offset!");
static_assert(offsetof(AB_Athena_FlopperSpawnWorld_Placement_C, SpawnPoint) == 0x000430, "Member 'AB_Athena_FlopperSpawnWorld_Placement_C::SpawnPoint' has a wrong offset!");

}

