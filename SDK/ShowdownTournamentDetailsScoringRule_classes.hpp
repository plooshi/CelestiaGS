#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownTournamentDetailsScoringRule

#include "Basic.hpp"

#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ShowdownTournamentDetailsScoringRule.ShowdownTournamentDetailsScoringRule_C
// 0x0030 (0x0288 - 0x0258)
class UShowdownTournamentDetailsScoringRule_C final : public UCommonUserWidget
{
public:
	class UCommonBorder*                          CommonBorder_BG;                                   // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_TextContainer;                        // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       RuleIcon;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RuleNameText;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RuleValueText;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             ScoringRuleDisplayData;                            // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetData(const struct FFortShowdownScoringRuleInfo& ScoreRule, const struct FFortTournamentDisplayInfo& TournamentDisplayInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShowdownTournamentDetailsScoringRule_C">();
	}
	static class UShowdownTournamentDetailsScoringRule_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowdownTournamentDetailsScoringRule_C>();
	}
};
static_assert(alignof(UShowdownTournamentDetailsScoringRule_C) == 0x000008, "Wrong alignment on UShowdownTournamentDetailsScoringRule_C");
static_assert(sizeof(UShowdownTournamentDetailsScoringRule_C) == 0x000288, "Wrong size on UShowdownTournamentDetailsScoringRule_C");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, CommonBorder_BG) == 0x000258, "Member 'UShowdownTournamentDetailsScoringRule_C::CommonBorder_BG' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, CommonBorder_TextContainer) == 0x000260, "Member 'UShowdownTournamentDetailsScoringRule_C::CommonBorder_TextContainer' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, RuleIcon) == 0x000268, "Member 'UShowdownTournamentDetailsScoringRule_C::RuleIcon' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, RuleNameText) == 0x000270, "Member 'UShowdownTournamentDetailsScoringRule_C::RuleNameText' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, RuleValueText) == 0x000278, "Member 'UShowdownTournamentDetailsScoringRule_C::RuleValueText' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentDetailsScoringRule_C, ScoringRuleDisplayData) == 0x000280, "Member 'UShowdownTournamentDetailsScoringRule_C::ScoringRuleDisplayData' has a wrong offset!");

}

