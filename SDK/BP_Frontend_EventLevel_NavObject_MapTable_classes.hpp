#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Frontend_EventLevel_NavObject_MapTable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Frontend_EventLevel_NavObject_MapTable.BP_Frontend_EventLevel_NavObject_MapTable_C
// 0x0058 (0x0560 - 0x0508)
class ABP_Frontend_EventLevel_NavObject_MapTable_C final : public AFortNavigationActor_MapTable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0508(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortBangCheckComponent_Map*            FortBangCheckComponent_Map;                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MinimapMID;                                        // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              MinimapMaterial;                                   // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UTexture2D>>      MinimapTextures;                                   // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UTexture2D>>      MinimapDiscoveryMasks;                             // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         WaterLevel;                                        // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugWaterLevel;                                   // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         WaterLevelEventNames;                              // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Update_Water_Level();
	void GetMinimapIndex(int32* Param_Index);
	void GetMinimapTextures(TSoftObjectPtr<class UTexture2D>* MinimapTexture, TSoftObjectPtr<class UTexture2D>* MinimapDiscoveryMask, int32* MinimapIndex);
	void OnLoaded_F6AE426C44DA5A3F148FEB87D7046DD0(class UObject* Loaded);
	void OnLoaded_A68B6D734D1ACDA59664A699214A131F(class UObject* Loaded);
	void ReceiveBeginPlay();
	void ApplyMinimapTextures();
	void OnActiveEventsChanged();
	void ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_MapTable(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Frontend_EventLevel_NavObject_MapTable_C">();
	}
	static class ABP_Frontend_EventLevel_NavObject_MapTable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Frontend_EventLevel_NavObject_MapTable_C>();
	}
};
static_assert(alignof(ABP_Frontend_EventLevel_NavObject_MapTable_C) == 0x000008, "Wrong alignment on ABP_Frontend_EventLevel_NavObject_MapTable_C");
static_assert(sizeof(ABP_Frontend_EventLevel_NavObject_MapTable_C) == 0x000560, "Wrong size on ABP_Frontend_EventLevel_NavObject_MapTable_C");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, UberGraphFrame) == 0x000508, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, FortBangCheckComponent_Map) == 0x000510, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::FortBangCheckComponent_Map' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, MinimapMID) == 0x000518, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::MinimapMID' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, MinimapMaterial) == 0x000520, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::MinimapMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, MinimapTextures) == 0x000528, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::MinimapTextures' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, MinimapDiscoveryMasks) == 0x000538, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::MinimapDiscoveryMasks' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, WaterLevel) == 0x000548, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::WaterLevel' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, DebugWaterLevel) == 0x00054C, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::DebugWaterLevel' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_MapTable_C, WaterLevelEventNames) == 0x000550, "Member 'ABP_Frontend_EventLevel_NavObject_MapTable_C::WaterLevelEventNames' has a wrong offset!");

}

