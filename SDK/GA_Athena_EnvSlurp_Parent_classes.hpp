#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_EnvSlurp_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_EnvSlurp_Parent.GA_Athena_EnvSlurp_Parent_C
// 0x0088 (0x0B00 - 0x0A78)
class UGA_Athena_EnvSlurp_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 GE_HealEffectToApply;                              // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_TickInterval;                                // 0x0A88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_TickInterval;                                  // 0x0A90(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_EffectiveHealthAmount;                         // 0x0AB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        FortPawn;                                          // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnApplicationPlayBurstGC;                          // 0x0AD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7862[0x3];                                     // 0x0AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_BurstApplication;                               // 0x0ADC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HealthHealAmount;                                  // 0x0AE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverHealing;                                       // 0x0AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7863[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_ShieldEffectToApply;                            // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Over_Time;                                      // 0x0AF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Athena_EnvSlurp_Parent(int32 EntryPoint);
	void FailsafeLogic();
	void Heal();
	void K2_ActivateAbility();
	void ApplyHealthGE();
	void Health_and_Overheal_Calc();
	void ApplyShieldGE();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_EnvSlurp_Parent_C">();
	}
	static class UGA_Athena_EnvSlurp_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_EnvSlurp_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_EnvSlurp_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_EnvSlurp_Parent_C");
static_assert(sizeof(UGA_Athena_EnvSlurp_Parent_C) == 0x000B00, "Wrong size on UGA_Athena_EnvSlurp_Parent_C");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_EnvSlurp_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, GE_HealEffectToApply) == 0x000A80, "Member 'UGA_Athena_EnvSlurp_Parent_C::GE_HealEffectToApply' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, Timer_TickInterval) == 0x000A88, "Member 'UGA_Athena_EnvSlurp_Parent_C::Timer_TickInterval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, Row_TickInterval) == 0x000A90, "Member 'UGA_Athena_EnvSlurp_Parent_C::Row_TickInterval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, Row_EffectiveHealthAmount) == 0x000AB0, "Member 'UGA_Athena_EnvSlurp_Parent_C::Row_EffectiveHealthAmount' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, FortPawn) == 0x000AD0, "Member 'UGA_Athena_EnvSlurp_Parent_C::FortPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, OnApplicationPlayBurstGC) == 0x000AD8, "Member 'UGA_Athena_EnvSlurp_Parent_C::OnApplicationPlayBurstGC' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, GC_BurstApplication) == 0x000ADC, "Member 'UGA_Athena_EnvSlurp_Parent_C::GC_BurstApplication' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, HealthHealAmount) == 0x000AE4, "Member 'UGA_Athena_EnvSlurp_Parent_C::HealthHealAmount' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, OverHealing) == 0x000AE8, "Member 'UGA_Athena_EnvSlurp_Parent_C::OverHealing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, GE_ShieldEffectToApply) == 0x000AF0, "Member 'UGA_Athena_EnvSlurp_Parent_C::GE_ShieldEffectToApply' has a wrong offset!");
static_assert(offsetof(UGA_Athena_EnvSlurp_Parent_C, Is_Over_Time) == 0x000AF8, "Member 'UGA_Athena_EnvSlurp_Parent_C::Is_Over_Time' has a wrong offset!");

}

