#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaBroadcastTeamTag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaBroadcastTeamTag.AthenaBroadcastTeamTag_C
// 0x0090 (0x02E8 - 0x0258)
class UAthenaBroadcastTeamTag_C final : public UAthenaSpectatorTeamTagBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 TeamIcon;                                          // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              DefaultTeamIcon;                                   // 0x0268(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<int32, TSoftObjectPtr<class UTexture2D>> TeamIcons;                                         // 0x0290(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DesignTime_MaxSquadSize;                           // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AthenaBroadcastTeamTag(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void UpdateMaxSquadSize(int32 MaxSquadSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaBroadcastTeamTag_C">();
	}
	static class UAthenaBroadcastTeamTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaBroadcastTeamTag_C>();
	}
};
static_assert(alignof(UAthenaBroadcastTeamTag_C) == 0x000008, "Wrong alignment on UAthenaBroadcastTeamTag_C");
static_assert(sizeof(UAthenaBroadcastTeamTag_C) == 0x0002E8, "Wrong size on UAthenaBroadcastTeamTag_C");
static_assert(offsetof(UAthenaBroadcastTeamTag_C, UberGraphFrame) == 0x000258, "Member 'UAthenaBroadcastTeamTag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastTeamTag_C, TeamIcon) == 0x000260, "Member 'UAthenaBroadcastTeamTag_C::TeamIcon' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastTeamTag_C, DefaultTeamIcon) == 0x000268, "Member 'UAthenaBroadcastTeamTag_C::DefaultTeamIcon' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastTeamTag_C, TeamIcons) == 0x000290, "Member 'UAthenaBroadcastTeamTag_C::TeamIcons' has a wrong offset!");
static_assert(offsetof(UAthenaBroadcastTeamTag_C, DesignTime_MaxSquadSize) == 0x0002E0, "Member 'UAthenaBroadcastTeamTag_C::DesignTime_MaxSquadSize' has a wrong offset!");

}

