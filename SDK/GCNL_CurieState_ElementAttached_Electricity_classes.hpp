#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_CurieState_ElementAttached_Electricity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_CurieState_ElementAttached_Electricity.GCNL_CurieState_ElementAttached_Electricity_C
// 0x0128 (0x08E8 - 0x07C0)
class AGCNL_CurieState_ElementAttached_Electricity_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   PropagationSpline;                                 // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ActorStaticMeshComponent;                          // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OwningActor;                                       // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurieStaticMeshComponent;                          // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           PropagationParentStaticMeshComponents;             // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class ABuildingSMActor*                       PropagationParentSMActor;                          // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABuildingSMActor*                       OwningSMActor;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         PropagationArcLength;                              // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLengthToDrawPropagationArc;                     // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcLifetime;                            // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcTilingDivisorMin;                    // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcTilingDivisorMax;                    // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcJumpDuration;                        // 0x081C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeActivatingMaterialTransition;           // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcFadeoutTime;                         // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcWorldScaleMin;                       // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcWorldScaleMax;                       // 0x082C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcNoiseScaleMin;                       // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcNoiseScaleMax;                       // 0x0834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcZScaleMin;                           // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcZScaleMax;                           // 0x083C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RetriggerPropagationSplineTimer;                   // 0x0840(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeRetriggeringPropagationSpline;          // 0x0848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CurieColor;                                        // 0x084C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5139[0x4];                                     // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           OwningActorStaticMeshComponents;                   // 0x0860(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                OwningActorOrientation;                            // 0x0870(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RelativeRotationAmount;                            // 0x087C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Clamped;                                           // 0x0880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513A[0x3];                                     // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PropagationParentSMActorCentroid;                  // 0x0884(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OwningSMActorCentroid;                             // 0x0890(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CentroidRandomBias;                                // 0x089C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ProgagationParentFound;                            // 0x08A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513B[0x7];                                     // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    ArcMeshes;                                         // 0x08B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         PropagationArcYScaleMin;                           // 0x08C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcYScaleMax;                           // 0x08C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstLoop;                                       // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_513C[0x3];                                     // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PropagationArcSplineWidthFirstLoop;                // 0x08CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcSplineWidth;                         // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PropagationArcColorScale;                          // 0x08D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorFromOwningActorToParent;                     // 0x08D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_CurieState_ElementAttached_Electricity(int32 EntryPoint);
	void RetriggerPropagationSpline();
	void HideSplineMesh();
	void DrawPropagationSpline();
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void FindPropagationParent(bool* Found);
	void SetPropagationSplineHiddenInGame(bool NewHidden);
	void SetPropagationSplineCustomPrimitiveData();
	void GetActorPlaneOrientation();
	void GetSplineRelativeRotationXOffset(float* X);
	void GetNiagaraFlippedAxes(const struct FVector& VectorIn, struct FVector* VectorOut);
	void GetRandomPropagationArcSpline(class UStaticMesh** Output);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_CurieState_ElementAttached_Electricity_C">();
	}
	static class AGCNL_CurieState_ElementAttached_Electricity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_CurieState_ElementAttached_Electricity_C>();
	}
};
static_assert(alignof(AGCNL_CurieState_ElementAttached_Electricity_C) == 0x000008, "Wrong alignment on AGCNL_CurieState_ElementAttached_Electricity_C");
static_assert(sizeof(AGCNL_CurieState_ElementAttached_Electricity_C) == 0x0008E8, "Wrong size on AGCNL_CurieState_ElementAttached_Electricity_C");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, UberGraphFrame) == 0x0007C0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationSpline) == 0x0007C8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationSpline' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, ActorStaticMeshComponent) == 0x0007D0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::ActorStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, OwningActor) == 0x0007D8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::OwningActor' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, CurieStaticMeshComponent) == 0x0007E0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::CurieStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationParentStaticMeshComponents) == 0x0007E8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationParentStaticMeshComponents' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationParentSMActor) == 0x0007F8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationParentSMActor' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, OwningSMActor) == 0x000800, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::OwningSMActor' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcLength) == 0x000808, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcLength' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, MaxLengthToDrawPropagationArc) == 0x00080C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::MaxLengthToDrawPropagationArc' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcLifetime) == 0x000810, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcLifetime' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcTilingDivisorMin) == 0x000814, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcTilingDivisorMin' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcTilingDivisorMax) == 0x000818, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcTilingDivisorMax' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcJumpDuration) == 0x00081C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcJumpDuration' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, DelayBeforeActivatingMaterialTransition) == 0x000820, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::DelayBeforeActivatingMaterialTransition' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcFadeoutTime) == 0x000824, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcFadeoutTime' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcWorldScaleMin) == 0x000828, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcWorldScaleMin' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcWorldScaleMax) == 0x00082C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcWorldScaleMax' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcNoiseScaleMin) == 0x000830, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcNoiseScaleMin' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcNoiseScaleMax) == 0x000834, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcNoiseScaleMax' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcZScaleMin) == 0x000838, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcZScaleMin' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcZScaleMax) == 0x00083C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcZScaleMax' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, RetriggerPropagationSplineTimer) == 0x000840, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::RetriggerPropagationSplineTimer' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, DelayBeforeRetriggeringPropagationSpline) == 0x000848, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::DelayBeforeRetriggeringPropagationSpline' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, CurieColor) == 0x00084C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::CurieColor' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, OwningActorStaticMeshComponents) == 0x000860, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::OwningActorStaticMeshComponents' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, OwningActorOrientation) == 0x000870, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::OwningActorOrientation' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, RelativeRotationAmount) == 0x00087C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::RelativeRotationAmount' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, Clamped) == 0x000880, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::Clamped' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationParentSMActorCentroid) == 0x000884, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationParentSMActorCentroid' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, OwningSMActorCentroid) == 0x000890, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::OwningSMActorCentroid' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, CentroidRandomBias) == 0x00089C, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::CentroidRandomBias' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, ProgagationParentFound) == 0x0008A8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::ProgagationParentFound' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, ArcMeshes) == 0x0008B0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::ArcMeshes' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcYScaleMin) == 0x0008C0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcYScaleMin' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcYScaleMax) == 0x0008C4, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcYScaleMax' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, IsFirstLoop) == 0x0008C8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::IsFirstLoop' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcSplineWidthFirstLoop) == 0x0008CC, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcSplineWidthFirstLoop' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcSplineWidth) == 0x0008D0, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcSplineWidth' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, PropagationArcColorScale) == 0x0008D4, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::PropagationArcColorScale' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Electricity_C, VectorFromOwningActorToParent) == 0x0008D8, "Member 'AGCNL_CurieState_ElementAttached_Electricity_C::VectorFromOwningActorToParent' has a wrong offset!");

}

