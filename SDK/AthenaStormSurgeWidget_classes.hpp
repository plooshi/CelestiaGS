#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaStormSurgeWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaStormSurgeWidget.AthenaStormSurgeWidget_C
// 0x0080 (0x0330 - 0x02B0)
class UAthenaStormSurgeWidget_C final : public UAthenaStormSurgeWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BelowDmg_Close;                                    // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BelowDmg_Open;                                     // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AboveDmg_Close;                                    // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AboveDmg_Open;                                     // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DMGLoad;                                           // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       AboveDMG;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaStormSurgeIconWidget_C*          AthenaStormSurgeIconWidget;                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BelowDMG;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_0;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DmgThresh_SizeBox;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SurgeIcon_SizeBox;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ThresholdText;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsBacchus;                                         // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDisplaying;                                     // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAboveIsOpen;                                      // 0x031A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBelowIsOpen;                                      // 0x031B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B18[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundBelowOpen;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundAboveOpen;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Anim_BelowDMGClose();
	void Anim_BelowDMGOpen();
	void Anim_AboveDMGClose();
	void Anim_AboveDMGOpen();
	void Anim_Load();
	void PreConstruct(bool IsDesignTime);
	void OnStartDisplaying(const class FText& TitleText);
	void OnStopDisplaying();
	void OnUpdateThresholdDisplay(const class FText& Param_ThresholdText, EStormSurgeThresholdType ThresholdType);
	void ExecuteUbergraph_AthenaStormSurgeWidget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaStormSurgeWidget_C">();
	}
	static class UAthenaStormSurgeWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaStormSurgeWidget_C>();
	}
};
static_assert(alignof(UAthenaStormSurgeWidget_C) == 0x000008, "Wrong alignment on UAthenaStormSurgeWidget_C");
static_assert(sizeof(UAthenaStormSurgeWidget_C) == 0x000330, "Wrong size on UAthenaStormSurgeWidget_C");
static_assert(offsetof(UAthenaStormSurgeWidget_C, UberGraphFrame) == 0x0002B0, "Member 'UAthenaStormSurgeWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, BelowDmg_Close) == 0x0002B8, "Member 'UAthenaStormSurgeWidget_C::BelowDmg_Close' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, BelowDmg_Open) == 0x0002C0, "Member 'UAthenaStormSurgeWidget_C::BelowDmg_Open' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, AboveDmg_Close) == 0x0002C8, "Member 'UAthenaStormSurgeWidget_C::AboveDmg_Close' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, AboveDmg_Open) == 0x0002D0, "Member 'UAthenaStormSurgeWidget_C::AboveDmg_Open' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, DMGLoad) == 0x0002D8, "Member 'UAthenaStormSurgeWidget_C::DMGLoad' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, AboveDMG) == 0x0002E0, "Member 'UAthenaStormSurgeWidget_C::AboveDMG' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, AthenaStormSurgeIconWidget) == 0x0002E8, "Member 'UAthenaStormSurgeWidget_C::AthenaStormSurgeIconWidget' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, BelowDMG) == 0x0002F0, "Member 'UAthenaStormSurgeWidget_C::BelowDMG' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, CommonBorder_0) == 0x0002F8, "Member 'UAthenaStormSurgeWidget_C::CommonBorder_0' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, DmgThresh_SizeBox) == 0x000300, "Member 'UAthenaStormSurgeWidget_C::DmgThresh_SizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, SurgeIcon_SizeBox) == 0x000308, "Member 'UAthenaStormSurgeWidget_C::SurgeIcon_SizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, ThresholdText) == 0x000310, "Member 'UAthenaStormSurgeWidget_C::ThresholdText' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, IsBacchus) == 0x000318, "Member 'UAthenaStormSurgeWidget_C::IsBacchus' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, bIsDisplaying) == 0x000319, "Member 'UAthenaStormSurgeWidget_C::bIsDisplaying' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, bAboveIsOpen) == 0x00031A, "Member 'UAthenaStormSurgeWidget_C::bAboveIsOpen' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, bBelowIsOpen) == 0x00031B, "Member 'UAthenaStormSurgeWidget_C::bBelowIsOpen' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, SoundBelowOpen) == 0x000320, "Member 'UAthenaStormSurgeWidget_C::SoundBelowOpen' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgeWidget_C, SoundAboveOpen) == 0x000328, "Member 'UAthenaStormSurgeWidget_C::SoundAboveOpen' has a wrong offset!");

}

