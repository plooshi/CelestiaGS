#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_Lock_Scanner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BGA_Athena_Lock_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_Lock_Scanner.BGA_Athena_Lock_Scanner_C
// 0x01F0 (0x0AE0 - 0x08F0)
class ABGA_Athena_Lock_Scanner_C final : public ABGA_Athena_Lock_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BGA_Athena_Lock_Scanner_C;          // 0x08F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   BP_UI_ScannerScreen;                               // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ScanSound;                                         // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_Camera_ScannerRay;                              // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAthena_FactionSelection_AlterEgo_C*    Athena_FactionSelection;                           // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PassScan_Rings_992F98994877927C8FBFCDA04C6D7E4B;   // 0x0928(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PassScan_Blink_992F98994877927C8FBFCDA04C6D7E4B;   // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PassScan_ColorLerp_992F98994877927C8FBFCDA04C6D7E4B; // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            PassScan__Direction_992F98994877927C8FBFCDA04C6D7E4B; // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76AF[0x3];                                     // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PassScan;                                          // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailScan_ColorLerp_A13651374E5ACB2791A5B5A5FD866A94; // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailScan_Flash_A13651374E5ACB2791A5B5A5FD866A94;   // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailScan_Solid_A13651374E5ACB2791A5B5A5FD866A94;   // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FailScan__Direction_A13651374E5ACB2791A5B5A5FD866A94; // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B0[0x3];                                     // 0x0955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FailScan;                                          // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UnAim_Eye_AdjustEyeRings_9DED6C834C7CAE08F0E2E9A54F80B274; // 0x0960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnAim_Eye_ObjectScale_9DED6C834C7CAE08F0E2E9A54F80B274; // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnAim_Eye_StareIntent_9DED6C834C7CAE08F0E2E9A54F80B274; // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnAim_Eye_EyeLerp_9DED6C834C7CAE08F0E2E9A54F80B274; // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            UnAim_Eye__Direction_9DED6C834C7CAE08F0E2E9A54F80B274; // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B1[0x7];                                     // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     UnAim_Eye;                                         // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Aim_Eye_AdjustEyeRings_A42AF8C74E4181F7F208999402194A16; // 0x0988(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Eye_LerpEyeColor_A42AF8C74E4181F7F208999402194A16; // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Eye_ObjectScale_A42AF8C74E4181F7F208999402194A16; // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Eye_StareIntent_A42AF8C74E4181F7F208999402194A16; // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Eye_EyeLerp_A42AF8C74E4181F7F208999402194A16;  // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Aim_Eye__Direction_A42AF8C74E4181F7F208999402194A16; // 0x09A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B2[0x3];                                     // 0x09A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Aim_Eye;                                           // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_HandleScan;                                     // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PassedScan;                                        // 0x09B8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsScanning;                                        // 0x09B9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_76B3[0x2];                                     // 0x09BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_Pass;                                           // 0x09BC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Fail;                                           // 0x09C4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B4[0x4];                                     // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        LastPawnScanned;                                   // 0x09D0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_Required;                                       // 0x09D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_SelfScan;                                     // 0x09F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_SelfOther;                                    // 0x0A10(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Lock_Mat_Direction;                                // 0x0A28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorLock;                                         // 0x0A34(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorUnlock;                                       // 0x0A44(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B5[0xC];                                     // 0x0A54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               ScannerColor;                                      // 0x0A60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               ScannerFlareColor;                                 // 0x0A70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UI_ScannerScreen_C*                 ScannerScreen;                                     // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActiveInSpyLTM;                                    // 0x0A88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DestroyInNonSpyLTM;                                // 0x0A89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76B6[0x6];                                     // 0x0A8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_UnAimEye;                                    // 0x0A90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_FactionChest;                                    // 0x0A98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_DBNO;                                            // 0x0AA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Henchman;                                        // 0x0AA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Disguised;                                       // 0x0AB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text_Failed;                                       // 0x0AB8(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	EIDScannerResult                              IdScannerResult;                                   // 0x0AD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B7[0x3];                                     // 0x0AD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Event_ScanStart;                                   // 0x0AD4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         EndType;                                           // 0x0ADC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_Athena_Lock_Scanner(int32 EntryPoint);
	void HideAndKill();
	void SetFailText(const struct FGameplayTag& Tag);
	void HandleAnalytics(bool Passed);
	void UnaimEye();
	void OnFirstInteract(class AFortPawn* InteractingPawn);
	void ReceiveBeginPlay();
	void NotEnabled();
	void CE_EndAimEye();
	void CE_AimEye(class AFortPawn* Interacting_Pawn);
	void OnUnLocked();
	void OnLocked();
	void StartScan(class AFortPlayerPawn* PlayerPawnToScan);
	void BndEvt__Athena_FactionSelection_K2Node_ComponentBoundEvent_0_OnFactionSelected__DelegateSignature(const struct FGameplayTag& FactionTagOut);
	void EndScan(bool Canceled);
	void OnPassScan();
	void OnFailScan();
	void OnReady_52C7FB4347310A401D7AE8B7917A2DA0(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void PassScan__UpdateFunc();
	void PassScan__FinishedFunc();
	void FailScan__UpdateFunc();
	void FailScan__FinishedFunc();
	void UnAim_Eye__UpdateFunc();
	void UnAim_Eye__FinishedFunc();
	void Aim_Eye__UpdateFunc();
	void Aim_Eye__FinishedFunc();
	void UserConstructionScript();
	void OnRep_IsScanning();
	void OnRep_EndType();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	struct FVector GetFocusedSocketLocation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_Lock_Scanner_C">();
	}
	static class ABGA_Athena_Lock_Scanner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_Lock_Scanner_C>();
	}
};
static_assert(alignof(ABGA_Athena_Lock_Scanner_C) == 0x000010, "Wrong alignment on ABGA_Athena_Lock_Scanner_C");
static_assert(sizeof(ABGA_Athena_Lock_Scanner_C) == 0x000AE0, "Wrong size on ABGA_Athena_Lock_Scanner_C");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UberGraphFrame_BGA_Athena_Lock_Scanner_C) == 0x0008F0, "Member 'ABGA_Athena_Lock_Scanner_C::UberGraphFrame_BGA_Athena_Lock_Scanner_C' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, BP_UI_ScannerScreen) == 0x0008F8, "Member 'ABGA_Athena_Lock_Scanner_C::BP_UI_ScannerScreen' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ScanSound) == 0x000900, "Member 'ABGA_Athena_Lock_Scanner_C::ScanSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, SpotLight) == 0x000908, "Member 'ABGA_Athena_Lock_Scanner_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Sm_Camera_ScannerRay) == 0x000910, "Member 'ABGA_Athena_Lock_Scanner_C::Sm_Camera_ScannerRay' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PointLight) == 0x000918, "Member 'ABGA_Athena_Lock_Scanner_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Athena_FactionSelection) == 0x000920, "Member 'ABGA_Athena_Lock_Scanner_C::Athena_FactionSelection' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassScan_Rings_992F98994877927C8FBFCDA04C6D7E4B) == 0x000928, "Member 'ABGA_Athena_Lock_Scanner_C::PassScan_Rings_992F98994877927C8FBFCDA04C6D7E4B' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassScan_Blink_992F98994877927C8FBFCDA04C6D7E4B) == 0x000934, "Member 'ABGA_Athena_Lock_Scanner_C::PassScan_Blink_992F98994877927C8FBFCDA04C6D7E4B' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassScan_ColorLerp_992F98994877927C8FBFCDA04C6D7E4B) == 0x000938, "Member 'ABGA_Athena_Lock_Scanner_C::PassScan_ColorLerp_992F98994877927C8FBFCDA04C6D7E4B' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassScan__Direction_992F98994877927C8FBFCDA04C6D7E4B) == 0x00093C, "Member 'ABGA_Athena_Lock_Scanner_C::PassScan__Direction_992F98994877927C8FBFCDA04C6D7E4B' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassScan) == 0x000940, "Member 'ABGA_Athena_Lock_Scanner_C::PassScan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, FailScan_ColorLerp_A13651374E5ACB2791A5B5A5FD866A94) == 0x000948, "Member 'ABGA_Athena_Lock_Scanner_C::FailScan_ColorLerp_A13651374E5ACB2791A5B5A5FD866A94' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, FailScan_Flash_A13651374E5ACB2791A5B5A5FD866A94) == 0x00094C, "Member 'ABGA_Athena_Lock_Scanner_C::FailScan_Flash_A13651374E5ACB2791A5B5A5FD866A94' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, FailScan_Solid_A13651374E5ACB2791A5B5A5FD866A94) == 0x000950, "Member 'ABGA_Athena_Lock_Scanner_C::FailScan_Solid_A13651374E5ACB2791A5B5A5FD866A94' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, FailScan__Direction_A13651374E5ACB2791A5B5A5FD866A94) == 0x000954, "Member 'ABGA_Athena_Lock_Scanner_C::FailScan__Direction_A13651374E5ACB2791A5B5A5FD866A94' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, FailScan) == 0x000958, "Member 'ABGA_Athena_Lock_Scanner_C::FailScan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye_AdjustEyeRings_9DED6C834C7CAE08F0E2E9A54F80B274) == 0x000960, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye_AdjustEyeRings_9DED6C834C7CAE08F0E2E9A54F80B274' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye_ObjectScale_9DED6C834C7CAE08F0E2E9A54F80B274) == 0x00096C, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye_ObjectScale_9DED6C834C7CAE08F0E2E9A54F80B274' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye_StareIntent_9DED6C834C7CAE08F0E2E9A54F80B274) == 0x000970, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye_StareIntent_9DED6C834C7CAE08F0E2E9A54F80B274' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye_EyeLerp_9DED6C834C7CAE08F0E2E9A54F80B274) == 0x000974, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye_EyeLerp_9DED6C834C7CAE08F0E2E9A54F80B274' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye__Direction_9DED6C834C7CAE08F0E2E9A54F80B274) == 0x000978, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye__Direction_9DED6C834C7CAE08F0E2E9A54F80B274' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, UnAim_Eye) == 0x000980, "Member 'ABGA_Athena_Lock_Scanner_C::UnAim_Eye' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye_AdjustEyeRings_A42AF8C74E4181F7F208999402194A16) == 0x000988, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye_AdjustEyeRings_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye_LerpEyeColor_A42AF8C74E4181F7F208999402194A16) == 0x000994, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye_LerpEyeColor_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye_ObjectScale_A42AF8C74E4181F7F208999402194A16) == 0x000998, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye_ObjectScale_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye_StareIntent_A42AF8C74E4181F7F208999402194A16) == 0x00099C, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye_StareIntent_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye_EyeLerp_A42AF8C74E4181F7F208999402194A16) == 0x0009A0, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye_EyeLerp_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye__Direction_A42AF8C74E4181F7F208999402194A16) == 0x0009A4, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye__Direction_A42AF8C74E4181F7F208999402194A16' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Aim_Eye) == 0x0009A8, "Member 'ABGA_Athena_Lock_Scanner_C::Aim_Eye' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, GE_HandleScan) == 0x0009B0, "Member 'ABGA_Athena_Lock_Scanner_C::GE_HandleScan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, PassedScan) == 0x0009B8, "Member 'ABGA_Athena_Lock_Scanner_C::PassedScan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, IsScanning) == 0x0009B9, "Member 'ABGA_Athena_Lock_Scanner_C::IsScanning' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, GC_Pass) == 0x0009BC, "Member 'ABGA_Athena_Lock_Scanner_C::GC_Pass' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, GC_Fail) == 0x0009C4, "Member 'ABGA_Athena_Lock_Scanner_C::GC_Fail' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, LastPawnScanned) == 0x0009D0, "Member 'ABGA_Athena_Lock_Scanner_C::LastPawnScanned' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, TC_Required) == 0x0009D8, "Member 'ABGA_Athena_Lock_Scanner_C::TC_Required' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Text_SelfScan) == 0x0009F8, "Member 'ABGA_Athena_Lock_Scanner_C::Text_SelfScan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Text_SelfOther) == 0x000A10, "Member 'ABGA_Athena_Lock_Scanner_C::Text_SelfOther' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Lock_Mat_Direction) == 0x000A28, "Member 'ABGA_Athena_Lock_Scanner_C::Lock_Mat_Direction' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ColorLock) == 0x000A34, "Member 'ABGA_Athena_Lock_Scanner_C::ColorLock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ColorUnlock) == 0x000A44, "Member 'ABGA_Athena_Lock_Scanner_C::ColorUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ScannerColor) == 0x000A60, "Member 'ABGA_Athena_Lock_Scanner_C::ScannerColor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ScannerFlareColor) == 0x000A70, "Member 'ABGA_Athena_Lock_Scanner_C::ScannerFlareColor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ScannerScreen) == 0x000A80, "Member 'ABGA_Athena_Lock_Scanner_C::ScannerScreen' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, ActiveInSpyLTM) == 0x000A88, "Member 'ABGA_Athena_Lock_Scanner_C::ActiveInSpyLTM' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, DestroyInNonSpyLTM) == 0x000A89, "Member 'ABGA_Athena_Lock_Scanner_C::DestroyInNonSpyLTM' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Timer_UnAimEye) == 0x000A90, "Member 'ABGA_Athena_Lock_Scanner_C::Timer_UnAimEye' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, T_FactionChest) == 0x000A98, "Member 'ABGA_Athena_Lock_Scanner_C::T_FactionChest' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, T_DBNO) == 0x000AA0, "Member 'ABGA_Athena_Lock_Scanner_C::T_DBNO' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, T_Henchman) == 0x000AA8, "Member 'ABGA_Athena_Lock_Scanner_C::T_Henchman' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, T_Disguised) == 0x000AB0, "Member 'ABGA_Athena_Lock_Scanner_C::T_Disguised' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Text_Failed) == 0x000AB8, "Member 'ABGA_Athena_Lock_Scanner_C::Text_Failed' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, IdScannerResult) == 0x000AD0, "Member 'ABGA_Athena_Lock_Scanner_C::IdScannerResult' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, Event_ScanStart) == 0x000AD4, "Member 'ABGA_Athena_Lock_Scanner_C::Event_ScanStart' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Scanner_C, EndType) == 0x000ADC, "Member 'ABGA_Athena_Lock_Scanner_C::EndType' has a wrong offset!");

}

