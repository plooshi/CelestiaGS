#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Valet_BasicCar_Vehicle

#include "Basic.hpp"

#include "Valet_BasicCar_Vehicle_classes.hpp"
#include "Valet_BasicCar_Vehicle_parameters.hpp"


namespace SDK
{

// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ExecuteUbergraph_Valet_BasicCar_Vehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::ExecuteUbergraph_Valet_BasicCar_Vehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ExecuteUbergraph_Valet_BasicCar_Vehicle");

	Params::Valet_BasicCar_Vehicle_C_ExecuteUbergraph_Valet_BasicCar_Vehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SetHeadlightState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortDayPhase                           PreviousDayPhase                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAtCreation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::SetHeadlightState(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SetHeadlightState");

	Params::Valet_BasicCar_Vehicle_C_SetHeadlightState Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CanHitLastDriver
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CanHitLastDriver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CanHitLastDriver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StartDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StartDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StartDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnIsSprintingChanged
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnIsSprintingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnIsSprintingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnEnterLandscape
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnEnterLandscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnEnterLandscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnExitLandscape
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnExitLandscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnExitLandscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.HealthChanged
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::HealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "HealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnSurfaceTypeVehicleIsOnChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        SurfaceTypeVehicleIsOn                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnSurfaceTypeVehicleIsOnChanged(EPhysicalSurface SurfaceTypeVehicleIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnSurfaceTypeVehicleIsOnChanged");

	Params::Valet_BasicCar_Vehicle_C_OnSurfaceTypeVehicleIsOnChanged Parms{};

	Parms.SurfaceTypeVehicleIsOn = SurfaceTypeVehicleIsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DisolveVehicle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_Fade                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::DisolveVehicle(float Param_Fade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DisolveVehicle");

	Params::Valet_BasicCar_Vehicle_C_DisolveVehicle Parms{};

	Parms.Param_Fade = Param_Fade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CleanupLoopingPooledFX
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CleanupLoopingPooledFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CleanupLoopingPooledFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnStartCriticalHealth
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnStartCriticalHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnStartCriticalHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.PickRandomMaterial
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::PickRandomMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "PickRandomMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnTickAudioController
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnTickAudioController(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnTickAudioController");

	Params::Valet_BasicCar_Vehicle_C_OnTickAudioController Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnSleepStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAwake                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::OnSleepStateChanged(const bool bAwake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnSleepStateChanged");

	Params::Valet_BasicCar_Vehicle_C_OnSleepStateChanged Parms{};

	Parms.bAwake = bAwake;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.FX_RemoveFuelLeaking
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::FX_RemoveFuelLeaking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "FX_RemoveFuelLeaking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CE_ResetWaterFXSnapping
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CE_ResetWaterFXSnapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CE_ResetWaterFXSnapping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CE_PawnExitVehicleWhileInWater
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CE_PawnExitVehicleWhileInWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CE_PawnExitVehicleWhileInWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CE_PawnEnterVehicleWhileInWater
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CE_PawnEnterVehicleWhileInWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CE_PawnEnterVehicleWhileInWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SpawnWreckFX
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::SpawnWreckFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SpawnWreckFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.WaterDepthCheck
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::WaterDepthCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "WaterDepthCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.KickPlayersFromVehicle
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::KickPlayersFromVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "KickPlayersFromVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ReceiveEndPlay");

	Params::Valet_BasicCar_Vehicle_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DestroyRadio
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::DestroyRadio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DestroyRadio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.RadioGo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   RadioStationIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::RadioGo(bool Start, int32 RadioStationIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "RadioGo");

	Params::Valet_BasicCar_Vehicle_C_RadioGo Parms{};

	Parms.Start = Start;
	Parms.RadioStationIndex = RadioStationIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CreateRadio
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CreateRadio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CreateRadio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.FadeoutCosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::FadeoutCosmetics(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "FadeoutCosmetics");

	Params::Valet_BasicCar_Vehicle_C_FadeoutCosmetics Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.Update Damage State
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::Update_Damage_State(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "Update Damage State");

	Params::Valet_BasicCar_Vehicle_C_Update_Damage_State Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.VFX_DamageState
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::VFX_DamageState(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "VFX_DamageState");

	Params::Valet_BasicCar_Vehicle_C_VFX_DamageState Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BrakingSkid
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::BrakingSkid(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BrakingSkid");

	Params::Valet_BasicCar_Vehicle_C_BrakingSkid Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CE_WaterFX_ResetDeepWaterEffectActivate
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CE_WaterFX_ResetDeepWaterEffectActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CE_WaterFX_ResetDeepWaterEffectActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SnapFoamtoWaterSurface
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::SnapFoamtoWaterSurface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SnapFoamtoWaterSurface");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnExitedWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              Param_WaterBody                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnExitedWaterBody(class AFortWaterBodyActor* Param_WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnExitedWaterBody");

	Params::Valet_BasicCar_Vehicle_C_OnExitedWaterBody Parms{};

	Parms.Param_WaterBody = Param_WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnEnteredWaterBody
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              Param_WaterBody                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnEnteredWaterBody(class AFortWaterBodyActor* Param_WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnEnteredWaterBody");

	Params::Valet_BasicCar_Vehicle_C_OnEnteredWaterBody Parms{};

	Parms.Param_WaterBody = Param_WaterBody;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ExplodeCosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::ExplodeCosmetics(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ExplodeCosmetics");

	Params::Valet_BasicCar_Vehicle_C_ExplodeCosmetics Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnLeakingFuelStop
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnLeakingFuelStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnLeakingFuelStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnLeakingFuelStart
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnLeakingFuelStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnLeakingFuelStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.FX_Init_Settings
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::FX_Init_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "FX_Init_Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnServerAltInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnServerAltInteract(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnServerAltInteract");

	Params::Valet_BasicCar_Vehicle_C_OnServerAltInteract Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnClientBeginAltInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnClientBeginAltInteract(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnClientBeginAltInteract");

	Params::Valet_BasicCar_Vehicle_C_OnClientBeginAltInteract Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ScalePontoonRear
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ScalePontoonRear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ScalePontoonRear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ScalePontoonFront
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ScalePontoonFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ScalePontoonFront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnDamageablePartHealthChanged_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVehicleDamageablePartConfig     PartConfig                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FVehicleDamageablePart           Part                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bNewlyDisabled                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNewlyEnabled                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::OnDamageablePartHealthChanged_Event(const struct FVehicleDamageablePartConfig& PartConfig, const struct FVehicleDamageablePart& Part, const bool bNewlyDisabled, const bool bNewlyEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnDamageablePartHealthChanged_Event");

	Params::Valet_BasicCar_Vehicle_C_OnDamageablePartHealthChanged_Event Parms{};

	Parms.PartConfig = move(PartConfig);
	Parms.Part = move(Part);
	Parms.bNewlyDisabled = bNewlyDisabled;
	Parms.bNewlyEnabled = bNewlyEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ResetLastHitPlayer
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ResetLastHitPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ResetLastHitPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnExplode
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnRimScrapeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TireIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnRimScrapeDamage(int32 TireIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnRimScrapeDamage");

	Params::Valet_BasicCar_Vehicle_C_OnRimScrapeDamage Parms{};

	Parms.TireIndex = TireIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BoostRumbleStop
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BoostRumbleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BoostRumbleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopBoostCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopBoostCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopBoostCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BP_OnBoostFinished
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BP_OnBoostFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BP_OnBoostFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BP_OnBoostStarted
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BP_OnBoostStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BP_OnBoostStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnFuelTouchedFire
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnFuelTouchedFire(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnFuelTouchedFire");

	Params::Valet_BasicCar_Vehicle_C_OnFuelTouchedFire Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.UpdateHandbrakeCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::UpdateHandbrakeCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "UpdateHandbrakeCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopHandbrakeCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopHandbrakeCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopHandbrakeCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StartHandbrakeCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StartHandbrakeCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StartHandbrakeCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.AccelCameraShakeEnd
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::AccelCameraShakeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "AccelCameraShakeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.AccelCameraShakeBegin
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::AccelCameraShakeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "AccelCameraShakeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.UpdateOffRoadCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::UpdateOffRoadCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "UpdateOffRoadCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.HandbrakeSkid
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::HandbrakeSkid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "HandbrakeSkid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopHandbrakeHaptics
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopHandbrakeHaptics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopHandbrakeHaptics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnStopHandbrake
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnStopHandbrake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnStopHandbrake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnStartHandbrake
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnStartHandbrake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnStartHandbrake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BrakingRumbleStop
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BrakingRumbleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BrakingRumbleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BrakingRumbleStart
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BrakingRumbleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BrakingRumbleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SkidRumbleStart
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::SkidRumbleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SkidRumbleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SkidRumbleStop
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::SkidRumbleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SkidRumbleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.TireSkid
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::TireSkid(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "TireSkid");

	Params::Valet_BasicCar_Vehicle_C_TireSkid Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnImpactDamageApplied
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnImpactDamageApplied(const float Damage, const struct FVector& ImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnImpactDamageApplied");

	Params::Valet_BasicCar_Vehicle_C_OnImpactDamageApplied Parms{};

	Parms.Damage = Damage;
	Parms.ImpactNormal = move(ImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ManageAccelRumble
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ManageAccelRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ManageAccelRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopOutOfGasRumble
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopOutOfGasRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopOutOfGasRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StartOutOfGasRumble
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StartOutOfGasRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StartOutOfGasRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.EventOutOfFuel
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::EventOutOfFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "EventOutOfFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnGainedFuel
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NewPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnGainedFuel(float NewPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnGainedFuel");

	Params::Valet_BasicCar_Vehicle_C_OnGainedFuel Parms{};

	Parms.NewPercent = NewPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DeactivateTireSmoke
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::DeactivateTireSmoke()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DeactivateTireSmoke");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ActivateTireSmoke
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ActivateTireSmoke()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ActivateTireSmoke");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.HandleTireSmoke
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::HandleTireSmoke()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "HandleTireSmoke");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ReceiveTick");

	Params::Valet_BasicCar_Vehicle_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.UpdateMovementCosmeticParameters
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::UpdateMovementCosmeticParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "UpdateMovementCosmeticParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnCollisionHitEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormalImpulse                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitFrictionImpulse                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        HitSurfaceType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor, EPhysicalSurface HitSurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnCollisionHitEffects");

	Params::Valet_BasicCar_Vehicle_C_OnCollisionHitEffects Parms{};

	Parms.HitLocation = move(HitLocation);
	Parms.HitNormalImpulse = move(HitNormalImpulse);
	Parms.HitFrictionImpulse = move(HitFrictionImpulse);
	Parms.HitNormal = move(HitNormal);
	Parms.HitActor = HitActor;
	Parms.HitSurfaceType = HitSurfaceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StartAccelRumble
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StartAccelRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StartAccelRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.StopAccelRumble
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::StopAccelRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "StopAccelRumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OffRoadShakeEnd
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OffRoadShakeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OffRoadShakeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OffRoadCameraShake
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OffRoadCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OffRoadCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnFireStop
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnFireStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnFireStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnFireStart
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnFireStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnFireStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnHonk
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnHonk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnHonk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnPawnEnterVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SeatIdx                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnPawnEnterVehicle");

	Params::Valet_BasicCar_Vehicle_C_OnPawnEnterVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.SeatIdx = SeatIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnPawnExitVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ExitSocketName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnPawnExitVehicle");

	Params::Valet_BasicCar_Vehicle_C_OnPawnExitVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.ExitSocketName = ExitSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnHoldExitStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnHoldExitStopped(class AFortPawn* ExitingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnHoldExitStopped");

	Params::Valet_BasicCar_Vehicle_C_OnHoldExitStopped Parms{};

	Parms.ExitingPawn = ExitingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnHoldExitStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExitDuration                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnHoldExitStarted");

	Params::Valet_BasicCar_Vehicle_C_OnHoldExitStarted Parms{};

	Parms.ExitingPawn = ExitingPawn;
	Parms.ExitDuration = ExitDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnStopTick
// (Event, Public, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnStopTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnStopTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.PawnHitByVehicle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactPoint                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVector                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::PawnHitByVehicle(class AFortPawn* Pawn, const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const struct FVector& LaunchVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "PawnHitByVehicle");

	Params::Valet_BasicCar_Vehicle_C_PawnHitByVehicle Parms{};

	Parms.Pawn = Pawn;
	Parms.ImpactPoint = move(ImpactPoint);
	Parms.ImpactNormal = move(ImpactNormal);
	Parms.LaunchVector = move(LaunchVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CheckWater
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CheckWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CheckWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnExitedWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnExitedWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnExitedWaterVolume");

	Params::Valet_BasicCar_Vehicle_C_OnExitedWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnEnteredWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnEnteredWaterVolume");

	Params::Valet_BasicCar_Vehicle_C_OnEnteredWaterVolume Parms{};

	Parms.WaterSurfacePoint = move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AValet_BasicCar_Vehicle_C::BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");

	Params::Valet_BasicCar_Vehicle_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = move(NormalImpulse);
	Parms.Hit = move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.LocalPassengerADS
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsADS                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::LocalPassengerADS(bool IsADS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "LocalPassengerADS");

	Params::Valet_BasicCar_Vehicle_C_LocalPassengerADS Parms{};

	Parms.IsADS = IsADS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnDamaged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnDamaged");

	Params::Valet_BasicCar_Vehicle_C_OnDamaged Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.EffectContext = move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnSpringCompression
// (Event, Protected, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnSpringCompression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnSpringCompression");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnCurieActive_1D9CDF534780404ABF0AA6893CD541A6
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnCurieActive_1D9CDF534780404ABF0AA6893CD541A6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnCurieActive_1D9CDF534780404ABF0AA6893CD541A6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.Fade__UpdateFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::Fade__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "Fade__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.Fade__FinishedFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::Fade__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "Fade__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BoostRumbleStartTimeline__UpdateFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BoostRumbleStartTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BoostRumbleStartTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BoostRumbleStartTimeline__FinishedFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BoostRumbleStartTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BoostRumbleStartTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BoostRumbleStopTimeline__UpdateFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BoostRumbleStopTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BoostRumbleStopTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.BoostRumbleStopTimeline__FinishedFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::BoostRumbleStopTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "BoostRumbleStopTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OutOfFuel__UpdateFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OutOfFuel__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OutOfFuel__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OutOfFuel__FinishedFunc
// (BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OutOfFuel__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OutOfFuel__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.PlayHapticsOnHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HitMagnitude                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::PlayHapticsOnHit(float HitMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "PlayHapticsOnHit");

	Params::Valet_BasicCar_Vehicle_C_PlayHapticsOnHit Parms{};

	Parms.HitMagnitude = HitMagnitude;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DestroyOrDamageBuildingPiece
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABuildingActor*                   BuildingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckForHealth                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DestroyThreshold                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::DestroyOrDamageBuildingPiece(class ABuildingActor* BuildingActor, bool CheckForHealth, class UClass* GameplayEffectClass, float DestroyThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DestroyOrDamageBuildingPiece");

	Params::Valet_BasicCar_Vehicle_C_DestroyOrDamageBuildingPiece Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.CheckForHealth = CheckForHealth;
	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.DestroyThreshold = DestroyThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SendHeadlightValueToMaterials
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ParameterValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::SendHeadlightValueToMaterials(const float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SendHeadlightValueToMaterials");

	Params::Valet_BasicCar_Vehicle_C_SendHeadlightValueToMaterials Parms{};

	Parms.ParameterValue = ParameterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SendDamageValueToMaterials
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ParameterValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::SendDamageValueToMaterials(const float ParameterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SendDamageValueToMaterials");

	Params::Valet_BasicCar_Vehicle_C_SendDamageValueToMaterials Parms{};

	Parms.ParameterValue = ParameterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CalcAccelRumbleIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxIntensity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AValet_BasicCar_Vehicle_C::CalcAccelRumbleIntensity(float MaxIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CalcAccelRumbleIntensity");

	Params::Valet_BasicCar_Vehicle_C_CalcAccelRumbleIntensity Parms{};

	Parms.MaxIntensity = MaxIntensity;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.IsVehicleAccelerating?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxSpeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::IsVehicleAccelerating_(float MaxSpeed, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "IsVehicleAccelerating?");

	Params::Valet_BasicCar_Vehicle_C_IsVehicleAccelerating_ Parms{};

	Parms.MaxSpeed = MaxSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.Damageable Part Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVehicleDamageablePartConfig     PartConfig                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FVehicleDamageablePart           Part                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    NewlyDisabled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::Damageable_Part_Changed(const struct FVehicleDamageablePartConfig& PartConfig, const struct FVehicleDamageablePart& Part, bool NewlyDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "Damageable Part Changed");

	Params::Valet_BasicCar_Vehicle_C_Damageable_Part_Changed Parms{};

	Parms.PartConfig = move(PartConfig);
	Parms.Part = move(Part);
	Parms.NewlyDisabled = NewlyDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SetFallInstigator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawnAthena*            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::SetFallInstigator(class AFortPlayerPawnAthena* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SetFallInstigator");

	Params::Valet_BasicCar_Vehicle_C_SetFallInstigator Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CalcImpulseDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Magnitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AValet_BasicCar_Vehicle_C::CalcImpulseDirection(class AActor* Vehicle, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CalcImpulseDirection");

	Params::Valet_BasicCar_Vehicle_C_CalcImpulseDirection Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Magnitude = Magnitude;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DamageBuildings
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::DamageBuildings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DamageBuildings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.TurnSignalsandBrakes
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::TurnSignalsandBrakes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "TurnSignalsandBrakes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.SetFxSettingsForVehicleType
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::SetFxSettingsForVehicleType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "SetFxSettingsForVehicleType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ToggleDustFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::ToggleDustFX(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ToggleDustFX");

	Params::Valet_BasicCar_Vehicle_C_ToggleDustFX Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.ToggleGlassFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AttachPointName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void AValet_BasicCar_Vehicle_C::ToggleGlassFX(class FName AttachPointName, const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "ToggleGlassFX");

	Params::Valet_BasicCar_Vehicle_C_ToggleGlassFX Parms{};

	Parms.AttachPointName = AttachPointName;
	Parms.InTransform = move(InTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.DamgeStateSetAmount
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::DamgeStateSetAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "DamgeStateSetAmount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.OnRep_RandomMatInt
// (BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::OnRep_RandomMatInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "OnRep_RandomMatInt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.GenerateRandomInt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInterface*>       TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::GenerateRandomInt(const TArray<class UMaterialInterface*>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "GenerateRandomInt");

	Params::Valet_BasicCar_Vehicle_C_GenerateRandomInt Parms{};

	Parms.TargetArray = move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CreateDestroyedMIDApply
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CreateDestroyedMIDApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CreateDestroyedMIDApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.CreateBaseMID
// (Public, BlueprintCallable, BlueprintEvent)

void AValet_BasicCar_Vehicle_C::CreateBaseMID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "CreateBaseMID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Valet_BasicCar_Vehicle.Valet_BasicCar_Vehicle_C.GetIconPlacement
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           SelfActor                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ViewingActor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutExtents                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AValet_BasicCar_Vehicle_C::GetIconPlacement(const class AActor* SelfActor, const class AActor* ViewingActor, struct FVector* OutLocation, struct FVector* OutExtents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Valet_BasicCar_Vehicle_C", "GetIconPlacement");

	Params::Valet_BasicCar_Vehicle_C_GetIconPlacement Parms{};

	Parms.SelfActor = SelfActor;
	Parms.ViewingActor = ViewingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = move(Parms.OutLocation);

	if (OutExtents != nullptr)
		*OutExtents = move(Parms.OutExtents);
}

}

