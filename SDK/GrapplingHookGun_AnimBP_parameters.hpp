#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrapplingHookGun_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GrapplingHookGun_AnimBP.GrapplingHookGun_AnimBP_C.ExecuteUbergraph_GrapplingHookGun_AnimBP
// 0x0090 (0x0090 - 0x0000)
struct GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6712[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0010(0x0020)()
	class AB_Hookgun_Athena_C*                    K2Node_DynamicCast_AsB_Hookgun_Athena;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6713[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6714[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6715[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0068(0x0020)()
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP) == 0x000008, "Wrong alignment on GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP");
static_assert(sizeof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP) == 0x000090, "Wrong size on GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, EntryPoint) == 0x000000, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, Temp_struct_Variable) == 0x000010, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_AsB_Hookgun_Athena) == 0x000030, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_AsB_Hookgun_Athena' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, CallFunc_HasTag_ReturnValue) == 0x000039, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000040, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000050, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000068, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP, K2Node_Event_DeltaTimeX) == 0x000088, "Member 'GrapplingHookGun_AnimBP_C_ExecuteUbergraph_GrapplingHookGun_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function GrapplingHookGun_AnimBP.GrapplingHookGun_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'GrapplingHookGun_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function GrapplingHookGun_AnimBP.GrapplingHookGun_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct GrapplingHookGun_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(GrapplingHookGun_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on GrapplingHookGun_AnimBP_C_AnimGraph");
static_assert(sizeof(GrapplingHookGun_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on GrapplingHookGun_AnimBP_C_AnimGraph");
static_assert(offsetof(GrapplingHookGun_AnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'GrapplingHookGun_AnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

