#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LatencyContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LatencyContainer.LatencyContainer_C
// 0x0028 (0x02C0 - 0x0298)
class ULatencyContainer_C final : public UFortHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULatencyGraph_C*                        LatencyGraph;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULatencyUI_C*                           LatencyUI;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OnVisibilitySetEvent(ESlateVisibility InVisibility);
	void Construct();
	void ExecuteUbergraph_LatencyContainer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LatencyContainer_C">();
	}
	static class ULatencyContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULatencyContainer_C>();
	}
};
static_assert(alignof(ULatencyContainer_C) == 0x000008, "Wrong alignment on ULatencyContainer_C");
static_assert(sizeof(ULatencyContainer_C) == 0x0002C0, "Wrong size on ULatencyContainer_C");
static_assert(offsetof(ULatencyContainer_C, UberGraphFrame) == 0x000298, "Member 'ULatencyContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULatencyContainer_C, InvalidationBox_0) == 0x0002A0, "Member 'ULatencyContainer_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(ULatencyContainer_C, LatencyGraph) == 0x0002A8, "Member 'ULatencyContainer_C::LatencyGraph' has a wrong offset!");
static_assert(offsetof(ULatencyContainer_C, LatencyUI) == 0x0002B0, "Member 'ULatencyContainer_C::LatencyUI' has a wrong offset!");
static_assert(offsetof(ULatencyContainer_C, SizeBox_0) == 0x0002B8, "Member 'ULatencyContainer_C::SizeBox_0' has a wrong offset!");

}

