#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_CalendarEvent_PropHandler

#include "Basic.hpp"

#include "CalendarPropHandler_EventTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CalendarEventPropInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_CalendarEvent_PropHandler.BP_Athena_CalendarEvent_PropHandler_C
// 0x0110 (0x0330 - 0x0220)
class ABP_Athena_CalendarEvent_PropHandler_C final : public AFortStaticReplicatedActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DestructionBox;                                    // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         PropReferences;                                    // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class UClass*                                 PropClass;                                         // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECalendarPropHandler_EventTypes               EventType;                                         // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EventHasOccured;                                   // 0x0251(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E3D[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PrecursorEventFlag;                                // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ExecutionEventFlag;                                // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          DestroyProp;                                       // 0x0278(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          RandomEventActive;                                 // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShimmerEnabled;                                    // 0x027A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          DebugMode;                                         // 0x027B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DebugInterval;                                     // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ManualDebug;                                       // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E3E[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ShimmerFX;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_RiftEvent;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_RiftTelegraphEvent;                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_ShimmerEvent;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E3F[0x8];                                     // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DestructionBoxTransform;                           // 0x02B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          DestroyOverlappingProps;                           // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SilentEvent;                                       // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E40[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCalendarEventPropInfo>         PropInfo;                                          // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         TelegraphDuration;                                 // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E41[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_InWorld;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Telegraph;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InWorldSound;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TellScale;                                         // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IsShimmerEnabled;                                  // 0x031C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          PropHasBeenSpawned;                                // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Athena_CalendarEvent_PropHandler(int32 EntryPoint);
	void BeginScript();
	void ActivateEarly();
	void RiftEventTelegraph();
	void TriggerManualDebug();
	void RiftEventFeedback();
	void ReceiveBeginPlay();
	void OnEventActive_B75C0CDD4FE7CDE34C1CF7B068D0FF11(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_B75C0CDD4FE7CDE34C1CF7B068D0FF11(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_B75C0CDD4FE7CDE34C1CF7B068D0FF11(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventActive_4AFE0FBF411A9992BE628E9C7731EF0D(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_4AFE0FBF411A9992BE628E9C7731EF0D(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_4AFE0FBF411A9992BE628E9C7731EF0D(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventActive_8C92265E44F124C2DEEC7B8F8DCF0926(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_8C92265E44F124C2DEEC7B8F8DCF0926(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_8C92265E44F124C2DEEC7B8F8DCF0926(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void UserConstructionScript();
	void OnRep_DestroyProp();
	void SpawnProp_Server_();
	void OnRep_ShimmerEnabled();
	void DestroyOverlappingBuildingProps();
	void OnRep_IsShimmerEnabled();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_CalendarEvent_PropHandler_C">();
	}
	static class ABP_Athena_CalendarEvent_PropHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_CalendarEvent_PropHandler_C>();
	}
};
static_assert(alignof(ABP_Athena_CalendarEvent_PropHandler_C) == 0x000010, "Wrong alignment on ABP_Athena_CalendarEvent_PropHandler_C");
static_assert(sizeof(ABP_Athena_CalendarEvent_PropHandler_C) == 0x000330, "Wrong size on ABP_Athena_CalendarEvent_PropHandler_C");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, UberGraphFrame) == 0x000220, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DestructionBox) == 0x000228, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DestructionBox' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, Billboard) == 0x000230, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, PropReferences) == 0x000238, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::PropReferences' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, PropClass) == 0x000248, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::PropClass' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, EventType) == 0x000250, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::EventType' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, EventHasOccured) == 0x000251, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::EventHasOccured' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, PrecursorEventFlag) == 0x000258, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::PrecursorEventFlag' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, ExecutionEventFlag) == 0x000268, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::ExecutionEventFlag' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DestroyProp) == 0x000278, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DestroyProp' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, RandomEventActive) == 0x000279, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::RandomEventActive' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, ShimmerEnabled) == 0x00027A, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::ShimmerEnabled' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DebugMode) == 0x00027B, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DebugMode' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DebugInterval) == 0x00027C, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DebugInterval' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, ManualDebug) == 0x000280, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::ManualDebug' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, ShimmerFX) == 0x000288, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::ShimmerFX' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, FX_RiftEvent) == 0x000290, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::FX_RiftEvent' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, FX_RiftTelegraphEvent) == 0x000298, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::FX_RiftTelegraphEvent' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, FX_ShimmerEvent) == 0x0002A0, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::FX_ShimmerEvent' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DestructionBoxTransform) == 0x0002B0, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DestructionBoxTransform' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, DestroyOverlappingProps) == 0x0002E0, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::DestroyOverlappingProps' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, SilentEvent) == 0x0002E1, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::SilentEvent' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, PropInfo) == 0x0002E8, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::PropInfo' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, TelegraphDuration) == 0x0002F8, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::TelegraphDuration' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, Sound_InWorld) == 0x000300, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::Sound_InWorld' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, Sound_Telegraph) == 0x000308, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::Sound_Telegraph' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, InWorldSound) == 0x000310, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::InWorldSound' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, TellScale) == 0x000318, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::TellScale' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, IsShimmerEnabled) == 0x00031C, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::IsShimmerEnabled' has a wrong offset!");
static_assert(offsetof(ABP_Athena_CalendarEvent_PropHandler_C, PropHasBeenSpawned) == 0x000320, "Member 'ABP_Athena_CalendarEvent_PropHandler_C::PropHasBeenSpawned' has a wrong offset!");

}

