#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentModal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TournamentModal.TournamentModal_C.OnTournamentSet
// 0x0020 (0x0020 - 0x0000)
struct TournamentModal_C_OnTournamentSet final
{
public:
	struct FLinearColor                           LeftColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RightColor;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentModal_C_OnTournamentSet) == 0x000004, "Wrong alignment on TournamentModal_C_OnTournamentSet");
static_assert(sizeof(TournamentModal_C_OnTournamentSet) == 0x000020, "Wrong size on TournamentModal_C_OnTournamentSet");
static_assert(offsetof(TournamentModal_C_OnTournamentSet, LeftColor) == 0x000000, "Member 'TournamentModal_C_OnTournamentSet::LeftColor' has a wrong offset!");
static_assert(offsetof(TournamentModal_C_OnTournamentSet, RightColor) == 0x000010, "Member 'TournamentModal_C_OnTournamentSet::RightColor' has a wrong offset!");

// Function TournamentModal.TournamentModal_C.ExecuteUbergraph_TournamentModal
// 0x0038 (0x0038 - 0x0000)
struct TournamentModal_C_ExecuteUbergraph_TournamentModal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_LeftColor;                            // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_RightColor;                           // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TournamentModal_C_ExecuteUbergraph_TournamentModal) == 0x000008, "Wrong alignment on TournamentModal_C_ExecuteUbergraph_TournamentModal");
static_assert(sizeof(TournamentModal_C_ExecuteUbergraph_TournamentModal) == 0x000038, "Wrong size on TournamentModal_C_ExecuteUbergraph_TournamentModal");
static_assert(offsetof(TournamentModal_C_ExecuteUbergraph_TournamentModal, EntryPoint) == 0x000000, "Member 'TournamentModal_C_ExecuteUbergraph_TournamentModal::EntryPoint' has a wrong offset!");
static_assert(offsetof(TournamentModal_C_ExecuteUbergraph_TournamentModal, K2Node_Event_LeftColor) == 0x000004, "Member 'TournamentModal_C_ExecuteUbergraph_TournamentModal::K2Node_Event_LeftColor' has a wrong offset!");
static_assert(offsetof(TournamentModal_C_ExecuteUbergraph_TournamentModal, K2Node_Event_RightColor) == 0x000014, "Member 'TournamentModal_C_ExecuteUbergraph_TournamentModal::K2Node_Event_RightColor' has a wrong offset!");
static_assert(offsetof(TournamentModal_C_ExecuteUbergraph_TournamentModal, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'TournamentModal_C_ExecuteUbergraph_TournamentModal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TournamentModal_C_ExecuteUbergraph_TournamentModal, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'TournamentModal_C_ExecuteUbergraph_TournamentModal::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

