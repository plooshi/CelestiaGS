#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaStormSurgeWidget

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.Anim_BelowDMGClose
// 0x0010 (0x0010 - 0x0000)
struct AthenaStormSurgeWidget_C_Anim_BelowDMGClose final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_Anim_BelowDMGClose) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_Anim_BelowDMGClose");
static_assert(sizeof(AthenaStormSurgeWidget_C_Anim_BelowDMGClose) == 0x000010, "Wrong size on AthenaStormSurgeWidget_C_Anim_BelowDMGClose");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_BelowDMGClose, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AthenaStormSurgeWidget_C_Anim_BelowDMGClose::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_BelowDMGClose, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'AthenaStormSurgeWidget_C_Anim_BelowDMGClose::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.Anim_BelowDMGOpen
// 0x0010 (0x0010 - 0x0000)
struct AthenaStormSurgeWidget_C_Anim_BelowDMGOpen final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_Anim_BelowDMGOpen) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_Anim_BelowDMGOpen");
static_assert(sizeof(AthenaStormSurgeWidget_C_Anim_BelowDMGOpen) == 0x000010, "Wrong size on AthenaStormSurgeWidget_C_Anim_BelowDMGOpen");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_BelowDMGOpen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'AthenaStormSurgeWidget_C_Anim_BelowDMGOpen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_BelowDMGOpen, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'AthenaStormSurgeWidget_C_Anim_BelowDMGOpen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.Anim_AboveDMGClose
// 0x0008 (0x0008 - 0x0000)
struct AthenaStormSurgeWidget_C_Anim_AboveDMGClose final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_Anim_AboveDMGClose) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_Anim_AboveDMGClose");
static_assert(sizeof(AthenaStormSurgeWidget_C_Anim_AboveDMGClose) == 0x000008, "Wrong size on AthenaStormSurgeWidget_C_Anim_AboveDMGClose");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_AboveDMGClose, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AthenaStormSurgeWidget_C_Anim_AboveDMGClose::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.Anim_AboveDMGOpen
// 0x0008 (0x0008 - 0x0000)
struct AthenaStormSurgeWidget_C_Anim_AboveDMGOpen final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_Anim_AboveDMGOpen) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_Anim_AboveDMGOpen");
static_assert(sizeof(AthenaStormSurgeWidget_C_Anim_AboveDMGOpen) == 0x000008, "Wrong size on AthenaStormSurgeWidget_C_Anim_AboveDMGOpen");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_AboveDMGOpen, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AthenaStormSurgeWidget_C_Anim_AboveDMGOpen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.Anim_Load
// 0x0008 (0x0008 - 0x0000)
struct AthenaStormSurgeWidget_C_Anim_Load final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_Anim_Load) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_Anim_Load");
static_assert(sizeof(AthenaStormSurgeWidget_C_Anim_Load) == 0x000008, "Wrong size on AthenaStormSurgeWidget_C_Anim_Load");
static_assert(offsetof(AthenaStormSurgeWidget_C_Anim_Load, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AthenaStormSurgeWidget_C_Anim_Load::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaStormSurgeWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaStormSurgeWidget_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaStormSurgeWidget_C_PreConstruct");
static_assert(sizeof(AthenaStormSurgeWidget_C_PreConstruct) == 0x000001, "Wrong size on AthenaStormSurgeWidget_C_PreConstruct");
static_assert(offsetof(AthenaStormSurgeWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaStormSurgeWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.OnStartDisplaying
// 0x0018 (0x0018 - 0x0000)
struct AthenaStormSurgeWidget_C_OnStartDisplaying final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaStormSurgeWidget_C_OnStartDisplaying) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_OnStartDisplaying");
static_assert(sizeof(AthenaStormSurgeWidget_C_OnStartDisplaying) == 0x000018, "Wrong size on AthenaStormSurgeWidget_C_OnStartDisplaying");
static_assert(offsetof(AthenaStormSurgeWidget_C_OnStartDisplaying, TitleText) == 0x000000, "Member 'AthenaStormSurgeWidget_C_OnStartDisplaying::TitleText' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.OnUpdateThresholdDisplay
// 0x0020 (0x0020 - 0x0000)
struct AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay final
{
public:
	class FText                                   Param_ThresholdText;                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EStormSurgeThresholdType                      ThresholdType;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay");
static_assert(sizeof(AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay) == 0x000020, "Wrong size on AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay");
static_assert(offsetof(AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay, Param_ThresholdText) == 0x000000, "Member 'AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay::Param_ThresholdText' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay, ThresholdType) == 0x000018, "Member 'AthenaStormSurgeWidget_C_OnUpdateThresholdDisplay::ThresholdType' has a wrong offset!");

// Function AthenaStormSurgeWidget.AthenaStormSurgeWidget_C.ExecuteUbergraph_AthenaStormSurgeWidget
// 0x00C8 (0x00C8 - 0x0000)
struct AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B19[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_TitleText;                            // 0x0040(0x0018)(ConstParm)
	class FText                                   K2Node_Event_ThresholdText;                        // 0x0058(0x0018)(ConstParm)
	EStormSurgeThresholdType                      K2Node_Event_ThresholdType;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0088(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x00A0(0x0018)()
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget) == 0x000008, "Wrong alignment on AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget");
static_assert(sizeof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget) == 0x0000C8, "Wrong size on AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, EntryPoint) == 0x000000, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000010, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_MakeStruct_Margin) == 0x000018, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_Event_IsDesignTime) == 0x000028, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_MakeStruct_Margin_1) == 0x00002C, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_Event_TitleText) == 0x000040, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_Event_TitleText' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_Event_ThresholdText) == 0x000058, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_Event_ThresholdText' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_Event_ThresholdType) == 0x000070, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_Event_ThresholdType' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000078, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_TextToUpper_ReturnValue) == 0x000088, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_TextToUpper_ReturnValue_1) == 0x0000A0, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x0000B8, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x0000C0, "Member 'AthenaStormSurgeWidget_C_ExecuteUbergraph_AthenaStormSurgeWidget::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");

}

