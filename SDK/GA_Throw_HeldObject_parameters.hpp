#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Throw_HeldObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.ExecuteUbergraph_GA_Throw_HeldObject
// 0x02B8 (0x02B8 - 0x0000)
struct GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6D45[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0028(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0058(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x00A0(0x0028)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D46[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSpawnLocationAndRotation_Location;     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSpawnLocationAndRotation_Rotation;     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayEffectContainerSpec       CallFunc_MakeGameplayEffectContainerSpec_ReturnValue; // 0x0118(0x00B8)()
	class AFortProjectileTrajectory*              CallFunc_SpawnTrajectoryIndicator_ReturnValue;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01D8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D47[0x3];                                     // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGravityZ_ReturnValue;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D48[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0288(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x02B0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject");
static_assert(sizeof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject) == 0x0002B8, "Wrong size on GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, EntryPoint) == 0x000000, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_TargetData_1) == 0x000028, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_ApplicationTag_1) == 0x000050, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_TargetData) == 0x000058, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_ApplicationTag) == 0x000080, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, Temp_struct_Variable) == 0x000098, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, Temp_struct_Variable_1) == 0x0000A0, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000C8, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_WaitDelay_ReturnValue) == 0x0000D8, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x0000E8, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000F1, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_IsServer_ReturnValue) == 0x0000F2, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_Event_bWasCancelled) == 0x0000F3, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_GetSpawnLocationAndRotation_Location) == 0x0000F4, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_GetSpawnLocationAndRotation_Location' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_GetSpawnLocationAndRotation_Rotation) == 0x000100, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_GetSpawnLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00010C, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_MakeGameplayEffectContainerSpec_ReturnValue) == 0x000118, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_MakeGameplayEffectContainerSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_SpawnTrajectoryIndicator_ReturnValue) == 0x0001D0, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_SpawnTrajectoryIndicator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001D8, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000264, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000268, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x000274, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x000278, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_GetGravityZ_ReturnValue) == 0x00027C, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_GetGravityZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, CallFunc_FMax_ReturnValue) == 0x000280, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_TargetData_2) == 0x000288, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject, K2Node_CustomEvent_ApplicationTag_2) == 0x0002B0, "Member 'GA_Throw_HeldObject_C_ExecuteUbergraph_GA_Throw_HeldObject::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_HeldObject_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Throw_HeldObject_C_K2_OnEndAbility");
static_assert(sizeof(GA_Throw_HeldObject_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Throw_HeldObject_C_K2_OnEndAbility");
static_assert(offsetof(GA_Throw_HeldObject_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Throw_HeldObject_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Triggered_9DD11B80484829AF1E8DC5ACFC965E7A
// 0x0030 (0x0030 - 0x0000)
struct GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(sizeof(GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000030, "Wrong size on GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(offsetof(GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A, TargetData) == 0x000000, "Member 'GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A, ApplicationTag) == 0x000028, "Member 'GA_Throw_HeldObject_C_Triggered_9DD11B80484829AF1E8DC5ACFC965E7A::ApplicationTag' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A
// 0x0030 (0x0030 - 0x0000)
struct GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(sizeof(GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000030, "Wrong size on GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(offsetof(GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A, TargetData) == 0x000000, "Member 'GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A, ApplicationTag) == 0x000028, "Member 'GA_Throw_HeldObject_C_Cancelled_9DD11B80484829AF1E8DC5ACFC965E7A::ApplicationTag' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.Completed_9DD11B80484829AF1E8DC5ACFC965E7A
// 0x0030 (0x0030 - 0x0000)
struct GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(sizeof(GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A) == 0x000030, "Wrong size on GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A");
static_assert(offsetof(GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A, TargetData) == 0x000000, "Member 'GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A, ApplicationTag) == 0x000028, "Member 'GA_Throw_HeldObject_C_Completed_9DD11B80484829AF1E8DC5ACFC965E7A::ApplicationTag' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.PrethrowSetup
// 0x00A0 (0x00A0 - 0x0000)
struct GA_Throw_HeldObject_C_PrethrowSetup final
{
public:
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_FilterArray_FilteredArray;                // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_HeldObject_Parent_C*                 K2Node_DynamicCast_AsB_Held_Object_Parent;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D49[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0048(0x0048)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_PrethrowSetup) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_PrethrowSetup");
static_assert(sizeof(GA_Throw_HeldObject_C_PrethrowSetup) == 0x0000A0, "Wrong size on GA_Throw_HeldObject_C_PrethrowSetup");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000000, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_GetAttachedActors_OutActors) == 0x000008, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000018, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_FilterArray_FilteredArray) == 0x000020, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_FilterArray_FilteredArray' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, K2Node_DynamicCast_AsB_Held_Object_Parent) == 0x000038, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::K2Node_DynamicCast_AsB_Held_Object_Parent' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, CallFunc_GetActorInfo_ReturnValue) == 0x000048, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000090, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_PrethrowSetup, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'GA_Throw_HeldObject_C_PrethrowSetup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SpawnThrownProjectile
// 0x00F8 (0x00F8 - 0x0000)
struct GA_Throw_HeldObject_C_SpawnThrownProjectile final
{
public:
	class UClass*                                 Param_ProjectileClass;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileSpawnLocation;                           // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ProjectileSpawnDirection;                          // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FFortGameplayEffectContainerSpec       Param_ExplosionEffectContainerSpec;                // 0x0020(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         ProjectileInitialSpeed;                            // 0x00D8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_ProjectileGravityScale;                      // 0x00DC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    Param_SpawnedProjectile;                           // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    CallFunc_SpawnProjectile_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_SpawnThrownProjectile) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_SpawnThrownProjectile");
static_assert(sizeof(GA_Throw_HeldObject_C_SpawnThrownProjectile) == 0x0000F8, "Wrong size on GA_Throw_HeldObject_C_SpawnThrownProjectile");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, Param_ProjectileClass) == 0x000000, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::Param_ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, ProjectileSpawnLocation) == 0x000008, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::ProjectileSpawnLocation' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, ProjectileSpawnDirection) == 0x000014, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::ProjectileSpawnDirection' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, Param_ExplosionEffectContainerSpec) == 0x000020, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::Param_ExplosionEffectContainerSpec' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, ProjectileInitialSpeed) == 0x0000D8, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::ProjectileInitialSpeed' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, Param_ProjectileGravityScale) == 0x0000DC, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::Param_ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, Param_SpawnedProjectile) == 0x0000E0, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::Param_SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, CallFunc_GetOwningPlayer_Player_Pawn) == 0x0000E8, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnThrownProjectile, CallFunc_SpawnProjectile_ReturnValue) == 0x0000F0, "Member 'GA_Throw_HeldObject_C_SpawnThrownProjectile::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.OnHeldObjectThrown
// 0x0008 (0x0008 - 0x0000)
struct GA_Throw_HeldObject_C_OnHeldObjectThrown final
{
public:
	class AFortProjectileBase*                    Param_SpawnedProjectile;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_OnHeldObjectThrown) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_OnHeldObjectThrown");
static_assert(sizeof(GA_Throw_HeldObject_C_OnHeldObjectThrown) == 0x000008, "Wrong size on GA_Throw_HeldObject_C_OnHeldObjectThrown");
static_assert(offsetof(GA_Throw_HeldObject_C_OnHeldObjectThrown, Param_SpawnedProjectile) == 0x000000, "Member 'GA_Throw_HeldObject_C_OnHeldObjectThrown::Param_SpawnedProjectile' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SetupDummyProjectile
// 0x0070 (0x0070 - 0x0000)
struct GA_Throw_HeldObject_C_SetupDummyProjectile final
{
public:
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4A[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D4B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileTrajectory*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_C*             K2Node_DynamicCast_AsBP_Projectile_Trajectory;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_SetupDummyProjectile) == 0x000010, "Wrong alignment on GA_Throw_HeldObject_C_SetupDummyProjectile");
static_assert(sizeof(GA_Throw_HeldObject_C_SetupDummyProjectile) == 0x000070, "Wrong size on GA_Throw_HeldObject_C_SetupDummyProjectile");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000000, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, CallFunc_IsValidClass_ReturnValue) == 0x000040, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, K2Node_DynamicCast_AsBP_Projectile_Trajectory) == 0x000058, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::K2Node_DynamicCast_AsBP_Projectile_Trajectory' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectile, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.UpdateTrajectorySpline
// 0x00D0 (0x00D0 - 0x0000)
struct GA_Throw_HeldObject_C_UpdateTrajectorySpline final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D4C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetProjectileTrajectoryPoints_OutSplinePoints; // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetProjectileTrajectoryPoints_OutSplineTangents; // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetProjectileTrajectoryPoints_OutHitResult; // 0x0028(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HitValidSocket_CanSocket;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D4D[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileTrajectory_C*             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D4E[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileTrajectory_C*             K2Node_Select_Default_1;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_UpdateTrajectorySpline) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_UpdateTrajectorySpline");
static_assert(sizeof(GA_Throw_HeldObject_C_UpdateTrajectorySpline) == 0x0000D0, "Wrong size on GA_Throw_HeldObject_C_UpdateTrajectorySpline");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, Temp_bool_Variable) == 0x000000, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, Temp_bool_Variable_1) == 0x000001, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_GetProjectileTrajectoryPoints_OutSplinePoints) == 0x000008, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_GetProjectileTrajectoryPoints_OutSplinePoints' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_GetProjectileTrajectoryPoints_OutSplineTangents) == 0x000018, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_GetProjectileTrajectoryPoints_OutSplineTangents' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_GetProjectileTrajectoryPoints_OutHitResult) == 0x000028, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_GetProjectileTrajectoryPoints_OutHitResult' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_HitValidSocket_CanSocket) == 0x0000B5, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_HitValidSocket_CanSocket' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_IsValid_ReturnValue_1) == 0x0000B6, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, K2Node_Select_Default) == 0x0000B8, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_UpdateTrajectorySpline, K2Node_Select_Default_1) == 0x0000C8, "Member 'GA_Throw_HeldObject_C_UpdateTrajectorySpline::K2Node_Select_Default_1' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.PostThrowCleanup
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_HeldObject_C_PostThrowCleanup final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_PostThrowCleanup) == 0x000001, "Wrong alignment on GA_Throw_HeldObject_C_PostThrowCleanup");
static_assert(sizeof(GA_Throw_HeldObject_C_PostThrowCleanup) == 0x000001, "Wrong size on GA_Throw_HeldObject_C_PostThrowCleanup");
static_assert(offsetof(GA_Throw_HeldObject_C_PostThrowCleanup, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'GA_Throw_HeldObject_C_PostThrowCleanup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SetupDummyProjectileSocketed
// 0x0070 (0x0070 - 0x0000)
struct GA_Throw_HeldObject_C_SetupDummyProjectileSocketed final
{
public:
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4F[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D50[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_C*             K2Node_DynamicCast_AsBP_Projectile_Trajectory;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed) == 0x000010, "Wrong alignment on GA_Throw_HeldObject_C_SetupDummyProjectileSocketed");
static_assert(sizeof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed) == 0x000070, "Wrong size on GA_Throw_HeldObject_C_SetupDummyProjectileSocketed");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000000, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, K2Node_DynamicCast_AsBP_Projectile_Trajectory) == 0x000058, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::K2Node_DynamicCast_AsBP_Projectile_Trajectory' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SetupDummyProjectileSocketed, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_Throw_HeldObject_C_SetupDummyProjectileSocketed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.HitValidSocket
// 0x0138 (0x0138 - 0x0000)
struct GA_Throw_HeldObject_C_HitValidSocket final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CanSocket;                                         // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D51[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D52[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_HeldObjectSocket_C*                  K2Node_DynamicCast_AsB_Held_Object_Socket;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D53[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_HeldObject_Parent_C*                 CallFunc_ValidateHeldObject_HeldObject_Output;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateHeldObject_IsValid;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_HitValidSocket) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_HitValidSocket");
static_assert(sizeof(GA_Throw_HeldObject_C_HitValidSocket) == 0x000138, "Wrong size on GA_Throw_HeldObject_C_HitValidSocket");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, HitResult) == 0x000000, "Member 'GA_Throw_HeldObject_C_HitValidSocket::HitResult' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CanSocket) == 0x00008C, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CanSocket' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_bBlockingHit) == 0x00008D, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_bInitialOverlap) == 0x00008E, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_Time) == 0x000090, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_Distance) == 0x000094, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_Location) == 0x000098, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A4, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_Normal) == 0x0000B0, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_ImpactNormal) == 0x0000BC, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_FaceIndex) == 0x0000EC, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_TraceStart) == 0x0000F0, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BreakHitResult_TraceEnd) == 0x0000FC, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, K2Node_DynamicCast_AsSphere_Collision) == 0x000108, "Member 'GA_Throw_HeldObject_C_HitValidSocket::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'GA_Throw_HeldObject_C_HitValidSocket::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, K2Node_DynamicCast_AsB_Held_Object_Socket) == 0x000118, "Member 'GA_Throw_HeldObject_C_HitValidSocket::K2Node_DynamicCast_AsB_Held_Object_Socket' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'GA_Throw_HeldObject_C_HitValidSocket::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_ValidateHeldObject_HeldObject_Output) == 0x000128, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_ValidateHeldObject_HeldObject_Output' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_ValidateHeldObject_IsValid) == 0x000130, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_ValidateHeldObject_IsValid' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_Not_PreBool_ReturnValue) == 0x000131, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_HitValidSocket, CallFunc_BooleanAND_ReturnValue) == 0x000132, "Member 'GA_Throw_HeldObject_C_HitValidSocket::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetProjectileTrajectoryPoints
// 0x0198 (0x0198 - 0x0000)
struct GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints final
{
public:
	TArray<struct FVector>                        OutSplinePoints;                                   // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FVector>                        OutSplineTangents;                                 // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FHitResult                             OutHitResult;                                      // 0x0020(0x008C)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_6D54[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSpawnLocationAndRotation_Location;     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSpawnLocationAndRotation_Rotation;     // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult; // 0x00E8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_6D55[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints; // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents; // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints");
static_assert(sizeof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints) == 0x000198, "Wrong size on GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, OutSplinePoints) == 0x000000, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::OutSplinePoints' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, OutSplineTangents) == 0x000010, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::OutSplineTangents' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, OutHitResult) == 0x000020, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::OutHitResult' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_GetOwningPlayer_Player_Pawn) == 0x0000B0, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_GetSpawnLocationAndRotation_Location) == 0x0000B8, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_GetSpawnLocationAndRotation_Location' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_GetSpawnLocationAndRotation_Rotation) == 0x0000C4, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_GetSpawnLocationAndRotation_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000D0, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult) == 0x0000E8, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints) == 0x000178, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints, CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents) == 0x000188, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryPoints::CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.SpawnTrajectoryIndicator
// 0x0020 (0x0020 - 0x0000)
struct GA_Throw_HeldObject_C_SpawnTrajectoryIndicator final
{
public:
	bool                                          bSpawnOnEquip;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D56[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileTrajectory*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_SpawnTrajectoryIndicator");
static_assert(sizeof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator) == 0x000020, "Wrong size on GA_Throw_HeldObject_C_SpawnTrajectoryIndicator");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, bSpawnOnEquip) == 0x000000, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::bSpawnOnEquip' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, ReturnValue) == 0x000008, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000010, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_SpawnTrajectoryIndicator, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'GA_Throw_HeldObject_C_SpawnTrajectoryIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetSpawnLocationAndRotation
// 0x00A8 (0x00A8 - 0x0000)
struct GA_Throw_HeldObject_C_GetSpawnLocationAndRotation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDefaultTargetingRotation_ReturnValue;  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D57[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D58[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetOwningPlayer_Player_Pawn_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_GetSpawnLocationAndRotation");
static_assert(sizeof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation) == 0x0000A8, "Wrong size on GA_Throw_HeldObject_C_GetSpawnLocationAndRotation");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, Location) == 0x000000, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::Location' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, Rotation) == 0x00000C, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::Rotation' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_GetOwningPlayer_Player_Pawn) == 0x000018, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_GetOwningPlayer_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_GetDefaultTargetingRotation_ReturnValue) == 0x000020, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_GetDefaultTargetingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, Temp_bool_Variable) == 0x000038, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_NormalizeAxis_ReturnValue) == 0x000040, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_GetOwningPlayer_Player_Pawn_1) == 0x000048, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_GetOwningPlayer_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000054, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Roll_1) == 0x00006C, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Pitch_1) == 0x000070, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_BreakRotator_Yaw_1) == 0x000074, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, K2Node_Select_Default) == 0x000084, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000090, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetSpawnLocationAndRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'GA_Throw_HeldObject_C_GetSpawnLocationAndRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetOwningPlayer
// 0x0068 (0x0068 - 0x0000)
struct GA_Throw_HeldObject_C_GetOwningPlayer final
{
public:
	class AFortPlayerPawn*                        Player_Pawn;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D59[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0010(0x0048)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_GetOwningPlayer) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_GetOwningPlayer");
static_assert(sizeof(GA_Throw_HeldObject_C_GetOwningPlayer) == 0x000068, "Wrong size on GA_Throw_HeldObject_C_GetOwningPlayer");
static_assert(offsetof(GA_Throw_HeldObject_C_GetOwningPlayer, Player_Pawn) == 0x000000, "Member 'GA_Throw_HeldObject_C_GetOwningPlayer::Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetOwningPlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GA_Throw_HeldObject_C_GetOwningPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetOwningPlayer, CallFunc_GetActorInfo_ReturnValue) == 0x000010, "Member 'GA_Throw_HeldObject_C_GetOwningPlayer::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetOwningPlayer, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000058, "Member 'GA_Throw_HeldObject_C_GetOwningPlayer::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Throw_HeldObject_C_GetOwningPlayer, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_Throw_HeldObject_C_GetOwningPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.GetProjectileTrajectoryActor
// 0x0008 (0x0008 - 0x0000)
struct GA_Throw_HeldObject_C_GetProjectileTrajectoryActor final
{
public:
	TSubclassOf<class AFortProjectileTrajectory>  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_HeldObject_C_GetProjectileTrajectoryActor) == 0x000008, "Wrong alignment on GA_Throw_HeldObject_C_GetProjectileTrajectoryActor");
static_assert(sizeof(GA_Throw_HeldObject_C_GetProjectileTrajectoryActor) == 0x000008, "Wrong size on GA_Throw_HeldObject_C_GetProjectileTrajectoryActor");
static_assert(offsetof(GA_Throw_HeldObject_C_GetProjectileTrajectoryActor, ReturnValue) == 0x000000, "Member 'GA_Throw_HeldObject_C_GetProjectileTrajectoryActor::ReturnValue' has a wrong offset!");

// Function GA_Throw_HeldObject.GA_Throw_HeldObject_C.ShouldOnlyShowTrajectoryOnUse
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse) == 0x000001, "Wrong alignment on GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse");
static_assert(sizeof(GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse) == 0x000001, "Wrong size on GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse");
static_assert(offsetof(GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse, ReturnValue) == 0x000000, "Member 'GA_Throw_HeldObject_C_ShouldOnlyShowTrajectoryOnUse::ReturnValue' has a wrong offset!");

}

