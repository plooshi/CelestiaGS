#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeoTilted_PowerTransformer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NeoTilted_PowerTransformer.NeoTilted_PowerTransformer_C.ExecuteUbergraph_NeoTilted_PowerTransformer
// 0x01E8 (0x01E8 - 0x0000)
struct NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8279[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0010(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x003C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy_1;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x00D8(0x0018)()
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827B[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0100(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x012C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x01C8(0x0018)()
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer) == 0x000008, "Wrong alignment on NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer");
static_assert(sizeof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer) == 0x0001E8, "Wrong size on NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, EntryPoint) == 0x000000, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::EntryPoint' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_Damage_1) == 0x000008, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_DamageTags_1) == 0x000010, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_Momentum_1) == 0x000030, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_HitInfo_1) == 0x00003C, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_InstigatedBy_1) == 0x0000C8, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_DamageCauser_1) == 0x0000D0, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_EffectContext_1) == 0x0000D8, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000F0, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_Damage) == 0x0000F8, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_DamageTags) == 0x000100, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_Momentum) == 0x000120, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_HitInfo) == 0x00012C, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_InstigatedBy) == 0x0001B8, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_DamageCauser) == 0x0001C0, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, K2Node_Event_EffectContext) == 0x0001C8, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0001E0, "Member 'NeoTilted_PowerTransformer_C_ExecuteUbergraph_NeoTilted_PowerTransformer::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");

// Function NeoTilted_PowerTransformer.NeoTilted_PowerTransformer_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct NeoTilted_PowerTransformer_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on NeoTilted_PowerTransformer_C_OnDeathPlayEffects");
static_assert(sizeof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on NeoTilted_PowerTransformer_C_OnDeathPlayEffects");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'NeoTilted_PowerTransformer_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function NeoTilted_PowerTransformer.NeoTilted_PowerTransformer_C.OnDamagePlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct NeoTilted_PowerTransformer_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_827D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on NeoTilted_PowerTransformer_C_OnDamagePlayEffects");
static_assert(sizeof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects) == 0x0000E8, "Wrong size on NeoTilted_PowerTransformer_C_OnDamagePlayEffects");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, HitInfo) == 0x000034, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, InstigatedBy) == 0x0000C0, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, DamageCauser) == 0x0000C8, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(NeoTilted_PowerTransformer_C_OnDamagePlayEffects, EffectContext) == 0x0000D0, "Member 'NeoTilted_PowerTransformer_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

}

