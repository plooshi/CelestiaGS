#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VideoMeshTrigger

#include "Basic.hpp"

#include "BP_VideoMeshTrigger_classes.hpp"
#include "BP_VideoMeshTrigger_parameters.hpp"


namespace SDK
{

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onReadyToPlay__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayStartTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_VideoUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnReadyToPlay__DelegateSignature(float PlayStartTime, const class FString& Param_VideoUID, const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onReadyToPlay__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnReadyToPlay__DelegateSignature Parms{};

	Parms.PlayStartTime = PlayStartTime;
	Parms.Param_VideoUID = move(Param_VideoUID);
	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onStopPlayback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           VideoScreen                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnStopPlayback__DelegateSignature(const class FString& VideoScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onStopPlayback__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnStopPlayback__DelegateSignature Parms{};

	Parms.VideoScreen = move(VideoScreen);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onStartWarming__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartWarmingTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnStartWarming__DelegateSignature(float StartWarmingTime, const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onStartWarming__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnStartWarming__DelegateSignature Parms{};

	Parms.StartWarmingTime = StartWarmingTime;
	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onEnableLoopVideo__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnEnableLoopVideo__DelegateSignature(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onEnableLoopVideo__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnEnableLoopVideo__DelegateSignature Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onDisableLoopVideo__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnDisableLoopVideo__DelegateSignature(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onDisableLoopVideo__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnDisableLoopVideo__DelegateSignature Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onStopWarming__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           VideoScreen                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnStopWarming__DelegateSignature(const class FString& VideoScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onStopWarming__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnStopWarming__DelegateSignature Parms{};

	Parms.VideoScreen = move(VideoScreen);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.onSetBandwidthLimit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   MaxBW                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::OnSetBandwidthLimit__DelegateSignature(const class FString& Param_ScreenName, int32 MaxBW)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "onSetBandwidthLimit__DelegateSignature");

	Params::BP_VideoMeshTrigger_C_OnSetBandwidthLimit__DelegateSignature Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);
	Parms.MaxBW = MaxBW;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.ExecuteUbergraph_BP_VideoMeshTrigger
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::ExecuteUbergraph_BP_VideoMeshTrigger(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "ExecuteUbergraph_BP_VideoMeshTrigger");

	Params::BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VideoMeshTrigger_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSetMaxBW
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   MaxBW                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootSetMaxBW(const class FString& Param_ScreenName, int32 MaxBW)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootSetMaxBW");

	Params::BP_VideoMeshTrigger_C_RootSetMaxBW Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);
	Parms.MaxBW = MaxBW;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStopWarming
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootStopWarming(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootStopWarming");

	Params::BP_VideoMeshTrigger_C_RootStopWarming Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "ReceiveTick");

	Params::BP_VideoMeshTrigger_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootDisableLoopVideo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootDisableLoopVideo(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootDisableLoopVideo");

	Params::BP_VideoMeshTrigger_C_RootDisableLoopVideo Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootEnableLoopVideo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootEnableLoopVideo(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootEnableLoopVideo");

	Params::BP_VideoMeshTrigger_C_RootEnableLoopVideo Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStartWarming
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootStartWarming(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootStartWarming");

	Params::BP_VideoMeshTrigger_C_RootStartWarming Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.CheckCalendarForTime
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::CheckCalendarForTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "CheckCalendarForTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.PlayVideoFromCalendar
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::PlayVideoFromCalendar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "PlayVideoFromCalendar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStopvideo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootStopvideo(const class FString& Param_ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootStopvideo");

	Params::BP_VideoMeshTrigger_C_RootStopvideo Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootPlayVideo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_VideoUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::RootPlayVideo(const class FString& Param_ScreenName, const class FString& Param_VideoUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "RootPlayVideo");

	Params::BP_VideoMeshTrigger_C_RootPlayVideo Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);
	Parms.Param_VideoUID = move(Param_VideoUID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnReady_7737C6E44FB866E135EECDA102C2BB5A
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnReady_7737C6E44FB866E135EECDA102C2BB5A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnReady_7737C6E44FB866E135EECDA102C2BB5A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnReady_0990DAD74F53D1B0866AA3BCBBD5355C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortGameStateAthena*             GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortPlaylist*                    Playlist                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            PlaylistContextTags                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_VideoMeshTrigger_C::OnReady_0990DAD74F53D1B0866AA3BCBBD5355C(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnReady_0990DAD74F53D1B0866AA3BCBBD5355C");

	Params::BP_VideoMeshTrigger_C_OnReady_0990DAD74F53D1B0866AA3BCBBD5355C Parms{};

	Parms.GameState = GameState;
	Parms.Playlist = Playlist;
	Parms.PlaylistContextTags = move(PlaylistContextTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PlayUTCTime
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_PlayUTCTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_PlayUTCTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PlayServerTimeSeconds
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_PlayServerTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_PlayServerTimeSeconds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_StartWarmingUTCTime
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_StartWarmingUTCTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_StartWarmingUTCTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_StartWarmingServerTimeSeconds
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_StartWarmingServerTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_StartWarmingServerTimeSeconds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_LoopVideo
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_LoopVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_LoopVideo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_ScreenName
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_ScreenName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_ScreenName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_MaxBandwidth
// (BlueprintCallable, BlueprintEvent)

void ABP_VideoMeshTrigger_C::OnRep_MaxBandwidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "OnRep_MaxBandwidth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.PrintIncomingData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_VideoUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VideoMeshTrigger_C::PrintIncomingData(const class FString& Param_ScreenName, const class FString& Param_VideoUID, const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "PrintIncomingData");

	Params::BP_VideoMeshTrigger_C_PrintIncomingData Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);
	Parms.Param_VideoUID = move(Param_VideoUID);
	Parms.Command = move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.CheckScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_ScreenName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ThisScreen                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VideoMeshTrigger_C::CheckScreen(const class FString& Param_ScreenName, bool* ThisScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VideoMeshTrigger_C", "CheckScreen");

	Params::BP_VideoMeshTrigger_C_CheckScreen Parms{};

	Parms.Param_ScreenName = move(Param_ScreenName);

	UObject::ProcessEvent(Func, &Parms);

	if (ThisScreen != nullptr)
		*ThisScreen = Parms.ThisScreen;
}

}

