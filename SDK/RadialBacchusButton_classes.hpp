#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialBacchusButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RadialBacchusButton.RadialBacchusButton_C
// 0x00B8 (0x0398 - 0x02E0)
class URadialBacchusButton_C final : public URadialBacchusButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TapAnim;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               ButtonSizeBox;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Timer;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ImageSizeBox;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TextTimeRemaining;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPaperSprite*                           DefaultIcon;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Pressed_Color;                                     // 0x0318(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            Unpressed_Color;                                   // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Duration;                                          // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D8[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           VerifyCueCountTimerHandle;                         // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CueCount;                                          // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BoostCue;                                          // 0x0384(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReloadingCue;                                      // 0x038C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_RadialBacchusButton(int32 EntryPoint);
	void OnCooldownCompleted();
	void OnCooldownStarted();
	void UpdateDuration_Blueprint(float Remaining, float Param_Duration);
	void UpdateCooldown_Blueprint();
	void ReceiveRadialProgressEvent_Blueprint(class FName EventName, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void VerifyCueCountIsClear();
	void HideSelf();
	void Destruct();
	void OnCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget);
	void Construct();
	void IsListenedTag(const struct FGameplayTag& MatchedTag, bool* Match);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RadialBacchusButton_C">();
	}
	static class URadialBacchusButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialBacchusButton_C>();
	}
};
static_assert(alignof(URadialBacchusButton_C) == 0x000008, "Wrong alignment on URadialBacchusButton_C");
static_assert(sizeof(URadialBacchusButton_C) == 0x000398, "Wrong size on URadialBacchusButton_C");
static_assert(offsetof(URadialBacchusButton_C, UberGraphFrame) == 0x0002E0, "Member 'URadialBacchusButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, TapAnim) == 0x0002E8, "Member 'URadialBacchusButton_C::TapAnim' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ButtonSizeBox) == 0x0002F0, "Member 'URadialBacchusButton_C::ButtonSizeBox' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Image_Timer) == 0x0002F8, "Member 'URadialBacchusButton_C::Image_Timer' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ImageSizeBox) == 0x000300, "Member 'URadialBacchusButton_C::ImageSizeBox' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, TextTimeRemaining) == 0x000308, "Member 'URadialBacchusButton_C::TextTimeRemaining' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, DefaultIcon) == 0x000310, "Member 'URadialBacchusButton_C::DefaultIcon' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Pressed_Color) == 0x000318, "Member 'URadialBacchusButton_C::Pressed_Color' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Unpressed_Color) == 0x000340, "Member 'URadialBacchusButton_C::Unpressed_Color' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Duration) == 0x000368, "Member 'URadialBacchusButton_C::Duration' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, StartTime) == 0x00036C, "Member 'URadialBacchusButton_C::StartTime' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Progress) == 0x000370, "Member 'URadialBacchusButton_C::Progress' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, VerifyCueCountTimerHandle) == 0x000378, "Member 'URadialBacchusButton_C::VerifyCueCountTimerHandle' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, CueCount) == 0x000380, "Member 'URadialBacchusButton_C::CueCount' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, BoostCue) == 0x000384, "Member 'URadialBacchusButton_C::BoostCue' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ReloadingCue) == 0x00038C, "Member 'URadialBacchusButton_C::ReloadingCue' has a wrong offset!");

}

