#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Recreation_Pool_DivingBoard01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Recreation_Pool_DivingBoard01.Recreation_Pool_DivingBoard01_C.ExecuteUbergraph_Recreation_Pool_DivingBoard01
// 0x0110 (0x0110 - 0x0000)
struct Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E8[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_48E9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EA[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LaunchHoverboard_Success;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EB[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01) == 0x000008, "Wrong alignment on Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01");
static_assert(sizeof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01) == 0x000110, "Wrong size on Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, EntryPoint) == 0x000000, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::EntryPoint' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000B8, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C4, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D0, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_GetVelocity_ReturnValue) == 0x0000DC, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_LaunchHoverboard_Success) == 0x0000E8, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_LaunchHoverboard_Success' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_BreakVector_X) == 0x0000EC, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_BreakVector_Y) == 0x0000F0, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_BreakVector_Z) == 0x0000F4, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F8, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'Recreation_Pool_DivingBoard01_C_ExecuteUbergraph_Recreation_Pool_DivingBoard01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Recreation_Pool_DivingBoard01.Recreation_Pool_DivingBoard01_C.BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EC[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Recreation_Pool_DivingBoard01_C_BndEvt__TouchBox_K2Node_ComponentBoundEvent_94_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

