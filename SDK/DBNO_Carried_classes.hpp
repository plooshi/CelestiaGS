#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBNO_Carried

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DBNO_Carried.DBNO_Carried_C
// 0x0B50 (0x2510 - 0x19C0)
class UDBNO_Carried_C final : public UFortPlayerAnimInstance_DBNOCarried
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x19C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x19C8(0x0030)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x19F8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1A18(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1B20(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1C28(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1CA0(0x00C8)()
	uint8                                         Pad_56E9[0x8];                                     // 0x1D68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1D70(0x01E0)()
	EFortPlayerAnimBodyType                       __CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40; // 0x1F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomGender                             __CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40; // 0x1F51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EA[0x6];                                     // 0x1F52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_SubInstance;                         // 0x1F58(0x00A0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1FF8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2018(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2040(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x2068(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x20B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x20E0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2158(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2188(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x21D0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2200(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x22B0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2378(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2440(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2468(0x0028)()
	bool                                          Carried;                                           // 0x2490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EB[0x7];                                     // 0x2491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   CarrierPawn;                                       // 0x2498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                CarrierAnimBP;                                     // 0x24A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LHandIKLocation;                                   // 0x24A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHandIKRotation;                                   // 0x24B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TempAttachLocation;                                // 0x24C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempAttachRotation;                                // 0x24CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SubAnimPhysicsWeight;                              // 0x24D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingDropped;                                    // 0x24DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EC[0x3];                                     // 0x24DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DropMontagePosition;                               // 0x24E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56ED[0x4];                                     // 0x24E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CarrierDropMontage;                                // 0x24E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CarrierPickupMontage;                              // 0x24F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingPickedUp;                                   // 0x24F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56EE[0x3];                                     // 0x24F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PickupMontagePosition;                             // 0x24FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionFromPickupToIdle;                        // 0x2500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DBNO_Carried(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DBNO_Carried_AnimGraphNode_ApplyAdditive_56B19EE040BEEBC25D674F8DC99831B9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DBNO_Carried_AnimGraphNode_ModifyBone_59E069244645BEF22808AB9196186F3F();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBNO_Carried_C">();
	}
	static class UDBNO_Carried_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBNO_Carried_C>();
	}
};
static_assert(alignof(UDBNO_Carried_C) == 0x000010, "Wrong alignment on UDBNO_Carried_C");
static_assert(sizeof(UDBNO_Carried_C) == 0x002510, "Wrong size on UDBNO_Carried_C");
static_assert(offsetof(UDBNO_Carried_C, UberGraphFrame) == 0x0019C0, "Member 'UDBNO_Carried_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_Root) == 0x0019C8, "Member 'UDBNO_Carried_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_LocalToComponentSpace) == 0x0019F8, "Member 'UDBNO_Carried_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ModifyBone_1) == 0x001A18, "Member 'UDBNO_Carried_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ModifyBone) == 0x001B20, "Member 'UDBNO_Carried_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequencePlayer_1) == 0x001C28, "Member 'UDBNO_Carried_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ApplyAdditive) == 0x001CA0, "Member 'UDBNO_Carried_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TwoBoneIK) == 0x001D70, "Member 'UDBNO_Carried_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, __CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40) == 0x001F50, "Member 'UDBNO_Carried_C::__CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, __CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40) == 0x001F51, "Member 'UDBNO_Carried_C::__CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SubInstance) == 0x001F58, "Member 'UDBNO_Carried_C::AnimGraphNode_SubInstance' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ComponentToLocalSpace) == 0x001FF8, "Member 'UDBNO_Carried_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TransitionResult_1) == 0x002018, "Member 'UDBNO_Carried_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TransitionResult) == 0x002040, "Member 'UDBNO_Carried_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequenceEvaluator_1) == 0x002068, "Member 'UDBNO_Carried_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult_2) == 0x0020B0, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequencePlayer) == 0x0020E0, "Member 'UDBNO_Carried_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult_1) == 0x002158, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequenceEvaluator) == 0x002188, "Member 'UDBNO_Carried_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult) == 0x0021D0, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateMachine) == 0x002200, "Member 'UDBNO_Carried_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TwoWayBlend) == 0x0022B0, "Member 'UDBNO_Carried_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SaveCachedPose) == 0x002378, "Member 'UDBNO_Carried_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_UseCachedPose_1) == 0x002440, "Member 'UDBNO_Carried_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_UseCachedPose) == 0x002468, "Member 'UDBNO_Carried_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, Carried) == 0x002490, "Member 'UDBNO_Carried_C::Carried' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierPawn) == 0x002498, "Member 'UDBNO_Carried_C::CarrierPawn' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierAnimBP) == 0x0024A0, "Member 'UDBNO_Carried_C::CarrierAnimBP' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, LHandIKLocation) == 0x0024A8, "Member 'UDBNO_Carried_C::LHandIKLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, LHandIKRotation) == 0x0024B4, "Member 'UDBNO_Carried_C::LHandIKRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TempAttachLocation) == 0x0024C0, "Member 'UDBNO_Carried_C::TempAttachLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TempAttachRotation) == 0x0024CC, "Member 'UDBNO_Carried_C::TempAttachRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, SubAnimPhysicsWeight) == 0x0024D8, "Member 'UDBNO_Carried_C::SubAnimPhysicsWeight' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, IsBeingDropped) == 0x0024DC, "Member 'UDBNO_Carried_C::IsBeingDropped' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, DropMontagePosition) == 0x0024E0, "Member 'UDBNO_Carried_C::DropMontagePosition' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierDropMontage) == 0x0024E8, "Member 'UDBNO_Carried_C::CarrierDropMontage' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierPickupMontage) == 0x0024F0, "Member 'UDBNO_Carried_C::CarrierPickupMontage' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, IsBeingPickedUp) == 0x0024F8, "Member 'UDBNO_Carried_C::IsBeingPickedUp' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, PickupMontagePosition) == 0x0024FC, "Member 'UDBNO_Carried_C::PickupMontagePosition' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TransitionFromPickupToIdle) == 0x002500, "Member 'UDBNO_Carried_C::TransitionFromPickupToIdle' has a wrong offset!");

}

