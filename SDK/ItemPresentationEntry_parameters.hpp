#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemPresentationEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ItemPresentationEntry.ItemPresentationEntry_C.PlayIntro
// 0x0020 (0x0020 - 0x0000)
struct ItemPresentationEntry_C_PlayIntro final
{
public:
	float                                         TimeBeforeStart;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7501[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemPresentationEntry_C_PlayIntro) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_PlayIntro");
static_assert(sizeof(ItemPresentationEntry_C_PlayIntro) == 0x000020, "Wrong size on ItemPresentationEntry_C_PlayIntro");
static_assert(offsetof(ItemPresentationEntry_C_PlayIntro, TimeBeforeStart) == 0x000000, "Member 'ItemPresentationEntry_C_PlayIntro::TimeBeforeStart' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_PlayIntro, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ItemPresentationEntry_C_PlayIntro::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_PlayIntro, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ItemPresentationEntry_C_PlayIntro::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.HandelDeselectedAnim
// 0x0010 (0x0010 - 0x0000)
struct ItemPresentationEntry_C_HandelDeselectedAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemPresentationEntry_C_HandelDeselectedAnim) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_HandelDeselectedAnim");
static_assert(sizeof(ItemPresentationEntry_C_HandelDeselectedAnim) == 0x000010, "Wrong size on ItemPresentationEntry_C_HandelDeselectedAnim");
static_assert(offsetof(ItemPresentationEntry_C_HandelDeselectedAnim, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'ItemPresentationEntry_C_HandelDeselectedAnim::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_HandelDeselectedAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'ItemPresentationEntry_C_HandelDeselectedAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.HandleSelectedAnim
// 0x0010 (0x0010 - 0x0000)
struct ItemPresentationEntry_C_HandleSelectedAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemPresentationEntry_C_HandleSelectedAnim) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_HandleSelectedAnim");
static_assert(sizeof(ItemPresentationEntry_C_HandleSelectedAnim) == 0x000010, "Wrong size on ItemPresentationEntry_C_HandleSelectedAnim");
static_assert(offsetof(ItemPresentationEntry_C_HandleSelectedAnim, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'ItemPresentationEntry_C_HandleSelectedAnim::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_HandleSelectedAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'ItemPresentationEntry_C_HandleSelectedAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.HandleUnhover
// 0x0008 (0x0008 - 0x0000)
struct ItemPresentationEntry_C_HandleUnhover final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemPresentationEntry_C_HandleUnhover) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_HandleUnhover");
static_assert(sizeof(ItemPresentationEntry_C_HandleUnhover) == 0x000008, "Wrong size on ItemPresentationEntry_C_HandleUnhover");
static_assert(offsetof(ItemPresentationEntry_C_HandleUnhover, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'ItemPresentationEntry_C_HandleUnhover::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.HandleHover
// 0x0008 (0x0008 - 0x0000)
struct ItemPresentationEntry_C_HandleHover final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemPresentationEntry_C_HandleHover) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_HandleHover");
static_assert(sizeof(ItemPresentationEntry_C_HandleHover) == 0x000008, "Wrong size on ItemPresentationEntry_C_HandleHover");
static_assert(offsetof(ItemPresentationEntry_C_HandleHover, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'ItemPresentationEntry_C_HandleHover::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct ItemPresentationEntry_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ItemPresentationEntry_C_OnMouseLeave) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_OnMouseLeave");
static_assert(sizeof(ItemPresentationEntry_C_OnMouseLeave) == 0x000070, "Wrong size on ItemPresentationEntry_C_OnMouseLeave");
static_assert(offsetof(ItemPresentationEntry_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ItemPresentationEntry_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ItemPresentationEntry.ItemPresentationEntry_C.ExecuteUbergraph_ItemPresentationEntry
// 0x0080 (0x0080 - 0x0000)
struct ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7502[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0010(0x0070)(ConstParm)
};
static_assert(alignof(ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry) == 0x000008, "Wrong alignment on ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry");
static_assert(sizeof(ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry) == 0x000080, "Wrong size on ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry");
static_assert(offsetof(ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry, EntryPoint) == 0x000000, "Member 'ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry, K2Node_Event_MouseEvent) == 0x000010, "Member 'ItemPresentationEntry_C_ExecuteUbergraph_ItemPresentationEntry::K2Node_Event_MouseEvent' has a wrong offset!");

}

