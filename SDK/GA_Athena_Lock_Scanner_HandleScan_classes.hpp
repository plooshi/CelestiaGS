#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Lock_Scanner_HandleScan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Lock_Scanner_HandleScan.GA_Athena_Lock_Scanner_HandleScan_C
// 0x00D8 (0x0B50 - 0x0A78)
class UGA_Athena_Lock_Scanner_HandleScan_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Athena_Lock_Scanner_C*             Lock;                                              // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_CarryingPlayer;                                  // 0x0A90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_Carrying;                                  // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_NotCarrying_F;                             // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_Carrying_F;                                // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_NotCarrying;                               // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HoldingCharacter;                                  // 0x0AB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768B[0x3];                                     // 0x0AB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FailsafeDelay;                                     // 0x0ABC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndScanDelay;                                      // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDelay;                                        // 0x0AC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFemale;                                          // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768C[0x3];                                     // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorStartLocation;                                // 0x0ACC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_Carry;                                           // 0x0AD8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           MontageToUse;                                      // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeashDistance;                                     // 0x0B00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Moved;                                             // 0x0B04(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768D[0x3];                                     // 0x0B05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LockoutTime;                                       // 0x0B08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BotAbilityDuration;                                // 0x0B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_QuestScanSelf;                                  // 0x0B10(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_Quest_ScanCarried;                              // 0x0B30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Athena_Lock_Scanner_HandleScan(int32 EntryPoint);
	void ResetDoOnceMoveCheck();
	void ResetDoOnceCallEnd();
	void ResetDoOnceEndAbility();
	void ClientEnd();
	void EndScan();
	void Unlock();
	void LockPawnForShortTime();
	void CallEnd();
	void MovementCheck();
	void Failsafe();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void OnCompleted_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnBlendOut_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnInterrupted_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnCancelled_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnNotifyBegin_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnNotifyEnd_F35E95A149D4BE08B3BCA58F630AE0C0(const struct FGameplayTag& NotifyTag);
	void OnCompleted_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void OnBlendOut_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void OnInterrupted_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void OnCancelled_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void OnNotifyBegin_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void OnNotifyEnd_19D9B4C445069AA3A1B2D793A7AB6DB7(const struct FGameplayTag& NotifyTag);
	void GetPlayerMontage(bool HoldingPlayer, bool Param_IsFemale, class UAnimMontage** Param_Montage_Carrying);
	void Reset_Do_Onces();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Lock_Scanner_HandleScan_C">();
	}
	static class UGA_Athena_Lock_Scanner_HandleScan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Lock_Scanner_HandleScan_C>();
	}
};
static_assert(alignof(UGA_Athena_Lock_Scanner_HandleScan_C) == 0x000008, "Wrong alignment on UGA_Athena_Lock_Scanner_HandleScan_C");
static_assert(sizeof(UGA_Athena_Lock_Scanner_HandleScan_C) == 0x000B50, "Wrong size on UGA_Athena_Lock_Scanner_HandleScan_C");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, PlayerPawn) == 0x000A80, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Lock) == 0x000A88, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Lock' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, T_CarryingPlayer) == 0x000A90, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::T_CarryingPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Montage_Carrying) == 0x000A98, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Montage_Carrying' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Montage_NotCarrying_F) == 0x000AA0, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Montage_NotCarrying_F' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Montage_Carrying_F) == 0x000AA8, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Montage_Carrying_F' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Montage_NotCarrying) == 0x000AB0, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Montage_NotCarrying' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, HoldingCharacter) == 0x000AB8, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::HoldingCharacter' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, FailsafeDelay) == 0x000ABC, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::FailsafeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, EndScanDelay) == 0x000AC0, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::EndScanDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, FrameDelay) == 0x000AC4, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::FrameDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, IsFemale) == 0x000AC8, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::IsFemale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, ActorStartLocation) == 0x000ACC, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::ActorStartLocation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, T_Carry) == 0x000AD8, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::T_Carry' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, MontageToUse) == 0x000AF8, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::MontageToUse' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, LeashDistance) == 0x000B00, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::LeashDistance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, Moved) == 0x000B04, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::Moved' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, LockoutTime) == 0x000B08, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::LockoutTime' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, BotAbilityDuration) == 0x000B0C, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::BotAbilityDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, TC_QuestScanSelf) == 0x000B10, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::TC_QuestScanSelf' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Lock_Scanner_HandleScan_C, TC_Quest_ScanCarried) == 0x000B30, "Member 'UGA_Athena_Lock_Scanner_HandleScan_C::TC_Quest_ScanCarried' has a wrong offset!");

}

