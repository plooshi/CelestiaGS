#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Consumable_ThrowWithTrajectory_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Consumable_ThrowWithTrajectory_Parent.GA_Athena_Consumable_ThrowWithTrajectory_Parent_C
// 0x0168 (0x0BE0 - 0x0A78)
class UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponRangedItemDefinition*        ItemDefinition;                                    // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileToThrow;                                 // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    ProjectileReference;                               // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromInstigatorCheck;                       // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMin;                                // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMax;                                // 0x0AA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileGravityScale;                            // 0x0AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileTargetingOriginOffset;                   // 0x0AB0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437D[0x4];                                     // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    DummyProjectile;                                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_437E[0x3];                                     // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0ACC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0AD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileTargetingOriginOffset_Crouched;          // 0x0AE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_437F[0x7];                                     // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayAbilityMontageInfo        ThrowWindupMontage;                                // 0x0AF8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ProjectileTrajectory_Athena_C*      TrajectoryIndicator;                               // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4380[0x3];                                     // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffsetWater;                 // 0x0B64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x0B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeedPitch;                                     // 0x0B74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxThrowPitch;                                     // 0x0B7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsThrowing;                                        // 0x0B84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4381[0x3];                                     // 0x0B85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PostThrowDelay;                                    // 0x0B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned_On_Equip;                                  // 0x0B8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x0B8D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4382[0x2];                                     // 0x0B8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ThrowConsumablesEnabled;                           // 0x0B90(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_ItemThrown;                                      // 0x0BB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           T_Quest;                                           // 0x0BD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_UtilityItem_Generic_Athena_C*        WeaponUtilityItemGeneric;                          // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_Consumable_ThrowWithTrajectory_Parent(int32 EntryPoint);
	void UpdateTrajectory();
	void Cleanup_Trajectory_Display_On_End();
	void CleanupTrajectoryIndicatorOnUnequip();
	void InitTrajectoryVariables();
	void ThrowConsumable();
	void CleanupTrajectoryDisplay();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAbilityInputReleased();
	void Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction);
	void K2_ActivateAbility();
	void EventReceived_D907E28A43BC498803B5B0AD054E5FC1(const struct FGameplayEventData& Payload);
	void OnSync_F83BC34A45D86702B453A1BFE1D7F7E1();
	void EventReceived_13E531C84957E69360FC6EB6E9818D90(const struct FGameplayEventData& Payload);
	void OnFinish_CF0A57844174C8A87D0024B17D96B713();
	void OnCompleted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnBlendOut_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnInterrupted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnCancelled_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnFinish_37708BDA4A053044298FDD8A986CE91D();
	void OnFinish_3698CE084DFBBB65C54A74B61C442258();
	void Triggered_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Created_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Touched_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Bounced_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Stopped_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Exploded_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Destroyed_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void SetupDummyProjectile();
	void UpdateTrajectorySpline();
	void GetProjectileDataFromWeaponID();
	void CanBeDropped(bool* Yes);
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult);
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);

	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const;
	void CalcProjectileSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;
	bool ShouldOnlyShowTrajectoryOnUse() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Consumable_ThrowWithTrajectory_Parent_C">();
	}
	static class UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C");
static_assert(sizeof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C) == 0x000BE0, "Wrong size on UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, UberGraphFrame) == 0x000A78, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, PlayerPawn) == 0x000A80, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ItemDefinition) == 0x000A88, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileToThrow) == 0x000A90, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileToThrow' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileReference) == 0x000A98, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileReference' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DistanceFromInstigatorCheck) == 0x000AA0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DistanceFromInstigatorCheck' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileSpeedMin) == 0x000AA4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileSpeedMax) == 0x000AA8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileGravityScale) == 0x000AAC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileTargetingOriginOffset) == 0x000AB0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyProjectile) == 0x000AC0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyShouldBounce) == 0x000AC8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyBounciness) == 0x000ACC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyFriction) == 0x000AD0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyMaxSpeed) == 0x000AD4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyGravity) == 0x000AD8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyTimeStep) == 0x000ADC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyExtent) == 0x000AE0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileTargetingOriginOffset_Crouched) == 0x000AE4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, InThrowWindup) == 0x000AF0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ThrowWindupMontage) == 0x000AF8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ThrowWindupMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, TrajectoryIndicator) == 0x000B50, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, TrajectoryIndicatorClass) == 0x000B58, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, AbilityKeyPressed) == 0x000B60, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, GrenadeTargetingOriginOffsetWater) == 0x000B64, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::GrenadeTargetingOriginOffsetWater' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, AdditionalThrowAngle) == 0x000B70, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxSpeedPitch) == 0x000B74, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MinSpeedPitch) == 0x000B78, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxThrowPitch) == 0x000B7C, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxThrowPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxTrajectoryBounces) == 0x000B80, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, IsThrowing) == 0x000B84, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::IsThrowing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, PostThrowDelay) == 0x000B88, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::PostThrowDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, Spawned_On_Equip) == 0x000B8C, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::Spawned_On_Equip' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyCollisionChannel) == 0x000B8D, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ThrowConsumablesEnabled) == 0x000B90, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ThrowConsumablesEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, T_ItemThrown) == 0x000BB0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::T_ItemThrown' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, T_Quest) == 0x000BD0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::T_Quest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, WeaponUtilityItemGeneric) == 0x000BD8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::WeaponUtilityItemGeneric' has a wrong offset!");

}

