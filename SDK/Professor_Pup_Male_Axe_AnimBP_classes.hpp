#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Professor_Pup_Male_Axe_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Professor_Pup_Male_Axe_AnimBP.Professor_Pup_Male_Axe_AnimBP_C
// 0x0BB0 (0x1000 - 0x0450)
class UProfessor_Pup_Male_Axe_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	uint8                                         Pad_5825[0x8];                                     // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0458(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0488(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0590(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x05B0(0x0088)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0638(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0658(0x0108)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x0760(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x0BA0(0x0440)()
	float                                         DeltaTimeRemap;                                    // 0x0FE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity;                                          // 0x0FE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityMult;                                      // 0x0FE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinA;                                             // 0x0FEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedA;                                            // 0x0FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpinResultA;                                       // 0x0FF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);
	void SpinFunction(float Spin, float Speed, float* Output);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Professor_Pup_Male_Axe_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Professor_Pup_Male_Axe_AnimBP_C">();
	}
	static class UProfessor_Pup_Male_Axe_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfessor_Pup_Male_Axe_AnimBP_C>();
	}
};
static_assert(alignof(UProfessor_Pup_Male_Axe_AnimBP_C) == 0x000010, "Wrong alignment on UProfessor_Pup_Male_Axe_AnimBP_C");
static_assert(sizeof(UProfessor_Pup_Male_Axe_AnimBP_C) == 0x001000, "Wrong size on UProfessor_Pup_Male_Axe_AnimBP_C");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, UberGraphFrame) == 0x000450, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_Root) == 0x000458, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x000488, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000590, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x0005B0, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000638, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_ModifyBone) == 0x000658, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_AnimDynamics_1) == 0x000760, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x000BA0, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, DeltaTimeRemap) == 0x000FE0, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::DeltaTimeRemap' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, Velocity) == 0x000FE4, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::Velocity' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, VelocityMult) == 0x000FE8, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::VelocityMult' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, SpinA) == 0x000FEC, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::SpinA' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, SpeedA) == 0x000FF0, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::SpeedA' has a wrong offset!");
static_assert(offsetof(UProfessor_Pup_Male_Axe_AnimBP_C, SpinResultA) == 0x000FF4, "Member 'UProfessor_Pup_Male_Axe_AnimBP_C::SpinResultA' has a wrong offset!");

}

