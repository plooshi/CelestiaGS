#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WrapPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WrapPreview.WrapPreview_C
// 0x00B0 (0x04D0 - 0x0420)
class AWrapPreview_C final : public AAthenaWrapPreviewActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 AssaultRiflePreview;                               // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MechPreview;                                       // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLightLowMobile;                                 // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLightMobile;                            // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight_StandaloneForSwitch;                      // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLigh4;                                          // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight7;                                         // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight8;                                         // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight3;                                         // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLowerRight2;                                    // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLeft2;                                          // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Bounce2;                                           // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    BounceRear2;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimTopRight2;                                      // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimBottomLeft2;                                    // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightingPivot;                                     // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bLightsScaledForVehicle;                           // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3A[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaScale;                                        // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AlwaysOn;                                          // 0x04C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FloorEverAllowed;                                  // 0x04C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugConstructionLighting;                         // 0x04C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UpdateFloorVisibility();
	void SwitchErebusLighting(bool Visibility);
	void UpdateLightingScale();
	void SetFloorEnabled(bool Floor_Enabled);
	void LightControl(bool Active);
	void SwitchPCLighting(bool Visibility);
	void SwitchMobileLighting(bool NewParam);
	void HandleLightingScale();
	void UpdateSettings();
	void OnSetFloorMaterial(class UMaterialInterface* InMaterialInstance);
	void OnPreviewVisualsSpawned();
	void ExecuteUbergraph_WrapPreview(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WrapPreview_C">();
	}
	static class AWrapPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWrapPreview_C>();
	}
};
static_assert(alignof(AWrapPreview_C) == 0x000010, "Wrong alignment on AWrapPreview_C");
static_assert(sizeof(AWrapPreview_C) == 0x0004D0, "Wrong size on AWrapPreview_C");
static_assert(offsetof(AWrapPreview_C, UberGraphFrame) == 0x000420, "Member 'AWrapPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, AssaultRiflePreview) == 0x000428, "Member 'AWrapPreview_C::AssaultRiflePreview' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, MechPreview) == 0x000430, "Member 'AWrapPreview_C::MechPreview' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, SkyLightLowMobile) == 0x000438, "Member 'AWrapPreview_C::SkyLightLowMobile' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, Arrow) == 0x000440, "Member 'AWrapPreview_C::Arrow' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, DirectionalLightMobile) == 0x000448, "Member 'AWrapPreview_C::DirectionalLightMobile' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, KeyLight_StandaloneForSwitch) == 0x000450, "Member 'AWrapPreview_C::KeyLight_StandaloneForSwitch' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, KeyLigh4) == 0x000458, "Member 'AWrapPreview_C::KeyLigh4' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, KeyLight7) == 0x000460, "Member 'AWrapPreview_C::KeyLight7' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, KeyLight8) == 0x000468, "Member 'AWrapPreview_C::KeyLight8' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, KeyLight3) == 0x000470, "Member 'AWrapPreview_C::KeyLight3' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, RimLowerRight2) == 0x000478, "Member 'AWrapPreview_C::RimLowerRight2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, RimLeft2) == 0x000480, "Member 'AWrapPreview_C::RimLeft2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, Bounce2) == 0x000488, "Member 'AWrapPreview_C::Bounce2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, BounceRear2) == 0x000490, "Member 'AWrapPreview_C::BounceRear2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, RimTopRight2) == 0x000498, "Member 'AWrapPreview_C::RimTopRight2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, RimBottomLeft2) == 0x0004A0, "Member 'AWrapPreview_C::RimBottomLeft2' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, LightingPivot) == 0x0004A8, "Member 'AWrapPreview_C::LightingPivot' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, Plane) == 0x0004B0, "Member 'AWrapPreview_C::Plane' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, bLightsScaledForVehicle) == 0x0004B8, "Member 'AWrapPreview_C::bLightsScaledForVehicle' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, DeltaScale) == 0x0004BC, "Member 'AWrapPreview_C::DeltaScale' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, IsActive) == 0x0004C0, "Member 'AWrapPreview_C::IsActive' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, AlwaysOn) == 0x0004C1, "Member 'AWrapPreview_C::AlwaysOn' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, FloorEverAllowed) == 0x0004C2, "Member 'AWrapPreview_C::FloorEverAllowed' has a wrong offset!");
static_assert(offsetof(AWrapPreview_C, DebugConstructionLighting) == 0x0004C3, "Member 'AWrapPreview_C::DebugConstructionLighting' has a wrong offset!");

}

