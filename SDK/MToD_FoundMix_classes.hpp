#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MToD_FoundMix

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass mToD_FoundMix.mToD_FoundMix_C
// 0x0100 (0x0328 - 0x0228)
class AMToD_FoundMix_C final : public AFortClientOnlyActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          TriggerRange;                                      // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AmbientMix_B;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AmbientMix_A;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EAttenuationDistanceModel                     Distance_algorithm;                                // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87AD[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Falloff_Range;                                     // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmbientMix_Master_Vol;                             // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87AE[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Day_Mix_Sound;                                     // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Morning_Mix_Sound;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Evening_Mix_Sound;                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Night_Mix_Sound;                                   // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomSound_MaxDelay;                              // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomSound_MinDelay;                              // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             RandomSoundCurrent;                                // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Random_Day;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Random_Evening;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Random_Morning;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Random_Night;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TileReverbTag;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReverbEffect*                          Tile_Reverb_Preset;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attenuate_with_LPF;                                // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87AF[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LPFRRadius_Min;                                    // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPFRRadius_Max;                                    // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Falloff_Extents;                                   // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddAutomatically;                                  // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)
	uint8                                         Pad_87B0[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Elements_List;                                     // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         ElementsDestroyed;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         No_of_Elements_to_Deactivate;                      // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Attenuation_Extents;                               // 0x02F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AmbientMix_A_isActive;                             // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B1[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         On_Destroy_Fade_Out_Time;                          // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockNextPhase;                                    // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowAudioDebug;                                    // 0x030D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ClearAmbient;                                      // 0x030E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAmbientActive;                                   // 0x030F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         TempElementList;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Delete_Repeated;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_mToD_FoundMix(int32 EntryPoint);
	void FadeinAudio();
	void FadeoutAudio();
	void ManualFadeOut();
	void SetupRoofs();
	void ActorDestroyedSignature__DelegateSignature_Event(class AActor* DestroyedActor);
	void Leaving_subzone();
	void Entering_subzone();
	void StopRandomSounds();
	void PlayRandomSounds();
	void Update_attenuation();
	void BndEvt__TriggerRange_K2Node_ComponentBoundEvent_109_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__TriggerRange_K2Node_ComponentBoundEvent_104_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlayCrossfadeBA();
	void PlayCrossfadeAB();
	void Night_Start();
	void Evening_Start();
	void Day_Start();
	void Morning_Start();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mToD_FoundMix_C">();
	}
	static class AMToD_FoundMix_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMToD_FoundMix_C>();
	}
};
static_assert(alignof(AMToD_FoundMix_C) == 0x000008, "Wrong alignment on AMToD_FoundMix_C");
static_assert(sizeof(AMToD_FoundMix_C) == 0x000328, "Wrong size on AMToD_FoundMix_C");
static_assert(offsetof(AMToD_FoundMix_C, UberGraphFrame) == 0x000228, "Member 'AMToD_FoundMix_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, TriggerRange) == 0x000230, "Member 'AMToD_FoundMix_C::TriggerRange' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, AmbientMix_B) == 0x000238, "Member 'AMToD_FoundMix_C::AmbientMix_B' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, AmbientMix_A) == 0x000240, "Member 'AMToD_FoundMix_C::AmbientMix_A' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Scene1) == 0x000248, "Member 'AMToD_FoundMix_C::Scene1' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Distance_algorithm) == 0x000250, "Member 'AMToD_FoundMix_C::Distance_algorithm' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Falloff_Range) == 0x000254, "Member 'AMToD_FoundMix_C::Falloff_Range' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, AmbientMix_Master_Vol) == 0x000258, "Member 'AMToD_FoundMix_C::AmbientMix_Master_Vol' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Day_Mix_Sound) == 0x000260, "Member 'AMToD_FoundMix_C::Day_Mix_Sound' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Morning_Mix_Sound) == 0x000268, "Member 'AMToD_FoundMix_C::Morning_Mix_Sound' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Evening_Mix_Sound) == 0x000270, "Member 'AMToD_FoundMix_C::Evening_Mix_Sound' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Night_Mix_Sound) == 0x000278, "Member 'AMToD_FoundMix_C::Night_Mix_Sound' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, RandomSound_MaxDelay) == 0x000280, "Member 'AMToD_FoundMix_C::RandomSound_MaxDelay' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, RandomSound_MinDelay) == 0x000284, "Member 'AMToD_FoundMix_C::RandomSound_MinDelay' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, RandomSoundCurrent) == 0x000288, "Member 'AMToD_FoundMix_C::RandomSoundCurrent' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Random_Day) == 0x000290, "Member 'AMToD_FoundMix_C::Random_Day' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Random_Evening) == 0x000298, "Member 'AMToD_FoundMix_C::Random_Evening' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Random_Morning) == 0x0002A0, "Member 'AMToD_FoundMix_C::Random_Morning' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Random_Night) == 0x0002A8, "Member 'AMToD_FoundMix_C::Random_Night' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, TileReverbTag) == 0x0002B0, "Member 'AMToD_FoundMix_C::TileReverbTag' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Tile_Reverb_Preset) == 0x0002B8, "Member 'AMToD_FoundMix_C::Tile_Reverb_Preset' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Attenuate_with_LPF) == 0x0002C0, "Member 'AMToD_FoundMix_C::Attenuate_with_LPF' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, LPFRRadius_Min) == 0x0002C4, "Member 'AMToD_FoundMix_C::LPFRRadius_Min' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, LPFRRadius_Max) == 0x0002C8, "Member 'AMToD_FoundMix_C::LPFRRadius_Max' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Falloff_Extents) == 0x0002CC, "Member 'AMToD_FoundMix_C::Falloff_Extents' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, AddAutomatically) == 0x0002D8, "Member 'AMToD_FoundMix_C::AddAutomatically' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Elements_List) == 0x0002E0, "Member 'AMToD_FoundMix_C::Elements_List' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, ElementsDestroyed) == 0x0002F0, "Member 'AMToD_FoundMix_C::ElementsDestroyed' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, No_of_Elements_to_Deactivate) == 0x0002F4, "Member 'AMToD_FoundMix_C::No_of_Elements_to_Deactivate' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Attenuation_Extents) == 0x0002F8, "Member 'AMToD_FoundMix_C::Attenuation_Extents' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, AmbientMix_A_isActive) == 0x000304, "Member 'AMToD_FoundMix_C::AmbientMix_A_isActive' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, On_Destroy_Fade_Out_Time) == 0x000308, "Member 'AMToD_FoundMix_C::On_Destroy_Fade_Out_Time' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, BlockNextPhase) == 0x00030C, "Member 'AMToD_FoundMix_C::BlockNextPhase' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, ShowAudioDebug) == 0x00030D, "Member 'AMToD_FoundMix_C::ShowAudioDebug' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, ClearAmbient) == 0x00030E, "Member 'AMToD_FoundMix_C::ClearAmbient' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, IsAmbientActive) == 0x00030F, "Member 'AMToD_FoundMix_C::IsAmbientActive' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, TempElementList) == 0x000310, "Member 'AMToD_FoundMix_C::TempElementList' has a wrong offset!");
static_assert(offsetof(AMToD_FoundMix_C, Delete_Repeated) == 0x000320, "Member 'AMToD_FoundMix_C::Delete_Repeated' has a wrong offset!");

}

