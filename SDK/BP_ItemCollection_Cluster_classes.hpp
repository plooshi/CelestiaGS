#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemCollection_Cluster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemCollection_Cluster.BP_ItemCollection_Cluster_C
// 0x00A0 (0x02C0 - 0x0220)
class ABP_ItemCollection_Cluster_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UQuestInteractableComponent*            QuestInteractable;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollectOverlap;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CoinCollectionSound;                               // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CoinSpinSound;                                     // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Test_Item;                                         // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_78D3[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CollectItemQuest;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   QuestBackendName;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ObjStatTag;                                        // 0x0268(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FGameplayTagContainer                  BlockedPlaylistTags;                               // 0x0288(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DelayInterval;                                     // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D4[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AQuestVisual*                           QuestVisual;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalFragments;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemCollection_Cluster(int32 EntryPoint);
	void BndEvt__QuestInteractable_K2Node_ComponentBoundEvent_4_SimpleDynamicMulticastDelegate__DelegateSignature();
	void BndEvt__QuestInteractable_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature();
	void BndEvt__QuestInteractable_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature();
	void Collected(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemCollection_Cluster_C">();
	}
	static class ABP_ItemCollection_Cluster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemCollection_Cluster_C>();
	}
};
static_assert(alignof(ABP_ItemCollection_Cluster_C) == 0x000008, "Wrong alignment on ABP_ItemCollection_Cluster_C");
static_assert(sizeof(ABP_ItemCollection_Cluster_C) == 0x0002C0, "Wrong size on ABP_ItemCollection_Cluster_C");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, UberGraphFrame) == 0x000220, "Member 'ABP_ItemCollection_Cluster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, QuestInteractable) == 0x000228, "Member 'ABP_ItemCollection_Cluster_C::QuestInteractable' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, CollectOverlap) == 0x000230, "Member 'ABP_ItemCollection_Cluster_C::CollectOverlap' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_ItemCollection_Cluster_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, CoinCollectionSound) == 0x000240, "Member 'ABP_ItemCollection_Cluster_C::CoinCollectionSound' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, CoinSpinSound) == 0x000248, "Member 'ABP_ItemCollection_Cluster_C::CoinSpinSound' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, Test_Item) == 0x000250, "Member 'ABP_ItemCollection_Cluster_C::Test_Item' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, CollectItemQuest) == 0x000258, "Member 'ABP_ItemCollection_Cluster_C::CollectItemQuest' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, QuestBackendName) == 0x000260, "Member 'ABP_ItemCollection_Cluster_C::QuestBackendName' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, ObjStatTag) == 0x000268, "Member 'ABP_ItemCollection_Cluster_C::ObjStatTag' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, BlockedPlaylistTags) == 0x000288, "Member 'ABP_ItemCollection_Cluster_C::BlockedPlaylistTags' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, DelayInterval) == 0x0002A8, "Member 'ABP_ItemCollection_Cluster_C::DelayInterval' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, QuestVisual) == 0x0002B0, "Member 'ABP_ItemCollection_Cluster_C::QuestVisual' has a wrong offset!");
static_assert(offsetof(ABP_ItemCollection_Cluster_C, TotalFragments) == 0x0002B8, "Member 'ABP_ItemCollection_Cluster_C::TotalFragments' has a wrong offset!");

}

