#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MangPlayerPawn_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.ExecuteUbergraph_BP_MangPlayerPawn_Parent
// 0x0548 (0x0548 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_Event_NewWeapon;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_Event_PrevWeapon;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage_2;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_2;                         // 0x0020(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_2;                           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_2;                            // 0x004C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_2;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_2;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_2;                      // 0x00E8(0x0018)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811D[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAbilitySystemInterface> CallFunc_EquipFortAbilitySet_AbilitySystemInterfaceActor_CastInput; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFortAbilitySetHandle                  CallFunc_EquipFortAbilitySet_ReturnValue;          // 0x0118(0x0028)(ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0164(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811E[0x6];                                     // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_Pawn;                                 // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage_1;                             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811F[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0220(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x024C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x02E8(0x0018)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8120[0x2];                                     // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8121[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0330(0x00B8)(ContainsInstancedReference)
	class AFortPawn*                              K2Node_CustomEvent_FortPawn;                       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInIsDBNO;                      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable;                                // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8122[0x5];                                     // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0400(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0410(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8123[0x2];                                     // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8124[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0428(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0454(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x04F0(0x0018)()
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8125[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue;                   // 0x0510(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8126[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetStateTagFromAlertLevel_NewParam;       // 0x051C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortPawn* FortPawn, bool bInIsDBNO)> K2Node_CreateDelegate_OutputDelegate;              // 0x0524(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8127[0x3];                                     // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue_1;                 // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0543(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0545(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent) == 0x000548, "Wrong size on BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, EntryPoint) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_bool_Variable) == 0x000004, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_NewWeapon) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_NewWeapon' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_PrevWeapon) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_PrevWeapon' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Damage_2) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Damage_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageTags_2) == 0x000020, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageTags_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Momentum_2) == 0x000040, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Momentum_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_HitInfo_2) == 0x00004C, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_HitInfo_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_InstigatedBy_2) == 0x0000D8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_InstigatedBy_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageCauser_2) == 0x0000E0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageCauser_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_EffectContext_2) == 0x0000E8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_EffectContext_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_HasTag_ReturnValue) == 0x000100, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_EquipFortAbilitySet_AbilitySystemInterfaceActor_CastInput) == 0x000108, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_EquipFortAbilitySet_AbilitySystemInterfaceActor_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_EquipFortAbilitySet_ReturnValue) == 0x000118, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_EquipFortAbilitySet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_ComponentBoundEvent_HitComponent) == 0x000140, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_ComponentBoundEvent_OtherActor) == 0x000148, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_ComponentBoundEvent_OtherComp) == 0x000150, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000158, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_ComponentBoundEvent_Hit) == 0x000164, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0001F0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001F9, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000200, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Pawn) == 0x000208, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000210, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Damage_1) == 0x000218, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageTags_1) == 0x000220, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Momentum_1) == 0x000240, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_HitInfo_1) == 0x00024C, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_InstigatedBy_1) == 0x0002D8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageCauser_1) == 0x0002E0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_EffectContext_1) == 0x0002E8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000300, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000310, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_bool_Variable_1) == 0x000311, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000314, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000320, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_GameplayCueEvent_EventType) == 0x000328, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_GameplayCueEvent_Parameters) == 0x000330, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_CustomEvent_FortPawn) == 0x0003E8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_CustomEvent_FortPawn' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_CustomEvent_bInIsDBNO) == 0x0003F0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_CustomEvent_bInIsDBNO' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_Not_PreBool_ReturnValue) == 0x0003F1, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_byte_Variable) == 0x0003F2, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0003F8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000400, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000408, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000410, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_HasAuthority_ReturnValue) == 0x000418, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000419, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00041A, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsDead_ReturnValue) == 0x00041B, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00041C, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_Not_PreBool_ReturnValue_1) == 0x00041D, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Damage) == 0x000420, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageTags) == 0x000428, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_Momentum) == 0x000448, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_HitInfo) == 0x000454, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_InstigatedBy) == 0x0004E0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_DamageCauser) == 0x0004E8, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_EffectContext) == 0x0004F0, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Event_EndPlayReason) == 0x000508, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetCurrent_ReturnValue) == 0x000510, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetCurrent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsValid_ReturnValue) == 0x000518, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetStateTagFromAlertLevel_NewParam) == 0x00051C, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetStateTagFromAlertLevel_NewParam' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x000524, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000534, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_GetCurrent_ReturnValue_1) == 0x000538, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_GetCurrent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_IsValid_ReturnValue_1) == 0x000540, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_bool_Variable_2) == 0x000541, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_bool_Variable_3) == 0x000542, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, Temp_bool_Variable_4) == 0x000543, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, K2Node_Select_Default) == 0x000544, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent, CallFunc_BooleanAND_ReturnValue) == 0x000545, "Member 'BP_MangPlayerPawn_Parent_C_ExecuteUbergraph_BP_MangPlayerPawn_Parent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_MangPlayerPawn_Parent_C_ReceiveEndPlay");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_MangPlayerPawn_Parent_C_ReceiveEndPlay");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8128[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDBNOStateChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event final
{
public:
	class AFortPawn*                              FortPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInIsDBNO;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event) == 0x000010, "Wrong size on BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event, FortPawn) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event::FortPawn' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event, bInIsDBNO) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnDBNOStateChanged_Event::bInIsDBNO' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GameplayCue.Player.Interrogation.Voice.PickedUp
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8129[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp) == 0x0000C0, "Wrong size on BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp, EventType) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp::EventType' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp, Parameters) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_GameplayCue_Player_Interrogation_Voice_PickedUp::Parameters' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDeathServer
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_812A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnDeathServer) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnDeathServer");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnDeathServer) == 0x0000E8, "Wrong size on BP_MangPlayerPawn_Parent_C_OnDeathServer");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, Damage) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, DamageTags) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, Momentum) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, HitInfo) == 0x000034, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, InstigatedBy) == 0x0000C0, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, DamageCauser) == 0x0000C8, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDeathServer, EffectContext) == 0x0000D0, "Member 'BP_MangPlayerPawn_Parent_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_MangPlayerPawn_Parent_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnDamageServer
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_812B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnDamageServer) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnDamageServer");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnDamageServer) == 0x0000E8, "Wrong size on BP_MangPlayerPawn_Parent_C_OnDamageServer");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, Damage) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, DamageTags) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, Momentum) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, HitInfo) == 0x000034, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, InstigatedBy) == 0x0000C0, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, DamageCauser) == 0x0000C8, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnDamageServer, EffectContext) == 0x0000D0, "Member 'BP_MangPlayerPawn_Parent_C_OnDamageServer::EffectContext' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnWeaponEquipped) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnWeaponEquipped");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnWeaponEquipped) == 0x000010, "Wrong size on BP_MangPlayerPawn_Parent_C_OnWeaponEquipped");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnWeaponEquipped, NewWeapon) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnCharacterCustomizationCompleted
// 0x0008 (0x0008 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted) == 0x000008, "Wrong size on BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted, Pawn) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnCharacterCustomizationCompleted::Pawn' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.UpdatePatrolAnimSet
// 0x0040 (0x0040 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPatrolAnimAsset*                   FoundAnimAsset;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_812C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPatrolAnimLayer*                   K2Node_DynamicCast_AsFort_Patrol_Anim_Layer;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_812D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPatrolAnimAsset*                   CallFunc_GetPatrolAnimSetFromWeapon_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet) == 0x000040, "Wrong size on BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, NewWeapon) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::NewWeapon' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, FoundAnimAsset) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::FoundAnimAsset' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue) == 0x000020, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, K2Node_DynamicCast_AsFort_Patrol_Anim_Layer) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::K2Node_DynamicCast_AsFort_Patrol_Anim_Layer' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet, CallFunc_GetPatrolAnimSetFromWeapon_ReturnValue) == 0x000038, "Member 'BP_MangPlayerPawn_Parent_C_UpdatePatrolAnimSet::CallFunc_GetPatrolAnimSetFromWeapon_ReturnValue' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.OnRep_AlertLevel
// 0x00D0 (0x00D0 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAlertLevel                                   Temp_byte_Variable_4;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_GetStateTagFromAlertLevel_NewParam;       // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_812E[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAlertLevel                                   Temp_byte_Variable_5;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_812F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_27;                             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8130[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8131[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8132[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8133[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceBetweenActors_Distance;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8134[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_4;                           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_28;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_29;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_5;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel) == 0x0000D0, "Wrong size on BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_1) == 0x000001, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_2) == 0x000002, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable) == 0x000003, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_3) == 0x000004, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_4) == 0x000005, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_5) == 0x000006, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_6) == 0x000007, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_7) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable_1) == 0x000009, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_8) == 0x00000A, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_9) == 0x00000B, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_10) == 0x00000C, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_11) == 0x00000D, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_12) == 0x00000E, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable_2) == 0x00000F, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_13) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_14) == 0x000011, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_15) == 0x000012, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_16) == 0x000013, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_17) == 0x000014, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable_3) == 0x000015, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_18) == 0x000016, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_19) == 0x000017, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_20) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_21) == 0x000019, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_22) == 0x00001A, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_HasAuthority_ReturnValue) == 0x00001B, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable_4) == 0x00001C, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_IsDedicatedServer_ReturnValue) == 0x00001D, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_23) == 0x00001E, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_24) == 0x00001F, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetStateTagFromAlertLevel_NewParam) == 0x000020, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetStateTagFromAlertLevel_NewParam' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetCurrent_ReturnValue) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetCurrent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_IsDead_ReturnValue) == 0x000041, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000048, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000050, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000058, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_byte_Variable_5) == 0x000060, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000064, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_25) == 0x00006C, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_26) == 0x00006D, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_27) == 0x00006E, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetBlackboard_ReturnValue) == 0x000070, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_MakeLiteralName_ReturnValue) == 0x000078, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetValueAsObject_ReturnValue) == 0x000088, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_DynamicCast_AsActor) == 0x000098, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetDistanceBetweenActors_Distance) == 0x0000A4, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetDistanceBetweenActors_Distance' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0000B0, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x0000B8, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default) == 0x0000C0, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default_1) == 0x0000C1, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default_2) == 0x0000C2, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default_3) == 0x0000C3, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default_4) == 0x0000C4, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_28) == 0x0000C5, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BooleanOR_ReturnValue) == 0x0000C6, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C7, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, Temp_bool_Variable_29) == 0x0000C8, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, K2Node_Select_Default_5) == 0x0000C9, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000CB, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CC, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_BooleanOR_ReturnValue_2) == 0x0000CD, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000CE, "Member 'BP_MangPlayerPawn_Parent_C_OnRep_AlertLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetCurrentFullbodyHitReactionMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage final
{
public:
	class UAnimMontage*                           CurrentMontage;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage) == 0x000010, "Wrong size on BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CurrentMontage) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CurrentMontage' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_IsWalking_ReturnValue) == 0x000009, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'BP_MangPlayerPawn_Parent_C_GetCurrentFullbodyHitReactionMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.PlayVoiceComponentSoundByTag
// 0x0028 (0x0028 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag final
{
public:
	struct FGameplayTag                           SoundBankTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8135[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag) == 0x000028, "Wrong size on BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, SoundBankTag) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::SoundBankTag' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00000A, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag, CallFunc_BooleanOR_ReturnValue_1) == 0x000023, "Member 'BP_MangPlayerPawn_Parent_C_PlayVoiceComponentSoundByTag::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.Set Alerted State Gameplay Cue
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue final
{
public:
	bool                                          Alerted;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combat;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8136[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0008(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue) == 0x0000C0, "Wrong size on BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue, Alerted) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue::Alerted' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue, Combat) == 0x000001, "Member 'BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue::Combat' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_Set_Alerted_State_Gameplay_Cue::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.AlertLevelChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_AlertLevelChanged final
{
public:
	EAlertLevel                                   Param_OldAlertLevel;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAlertLevel                                   NewAlertLevel;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_AlertLevelChanged) == 0x000001, "Wrong alignment on BP_MangPlayerPawn_Parent_C_AlertLevelChanged");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_AlertLevelChanged) == 0x000002, "Wrong size on BP_MangPlayerPawn_Parent_C_AlertLevelChanged");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_AlertLevelChanged, Param_OldAlertLevel) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_AlertLevelChanged::Param_OldAlertLevel' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_AlertLevelChanged, NewAlertLevel) == 0x000001, "Member 'BP_MangPlayerPawn_Parent_C_AlertLevelChanged::NewAlertLevel' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.SetAmmoToSpawnOnDeath
// 0x0010 (0x0010 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath final
{
public:
	class UFortWorldItemDefinition*               AmmoDefinition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ShouldDropAmmo;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath) == 0x000010, "Wrong size on BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath, AmmoDefinition) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath::AmmoDefinition' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath, Count) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath::Count' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath, Param_ShouldDropAmmo) == 0x00000C, "Member 'BP_MangPlayerPawn_Parent_C_SetAmmoToSpawnOnDeath::Param_ShouldDropAmmo' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.DebugControlResistanceInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8137[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Option_B___If_false__use_Option_A_Variable; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Option_B___If_false__use_Option_A_Variable_1; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8138[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8139[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813A[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813B[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813C[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813D[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813E[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Object_ReturnValue;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue_1;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue_2;          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue_3;          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo) == 0x000100, "Wrong size on BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_string_Variable) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_bool_Variable) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_string_Variable_1) == 0x000018, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_bool_Option_B___If_false__use_Option_A_Variable) == 0x000028, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_bool_Option_B___If_false__use_Option_A_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_HasAuthority_ReturnValue) == 0x000029, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_bool_Option_B___If_false__use_Option_A_Variable_1) == 0x00002A, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_bool_Option_B___If_false__use_Option_A_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_string_Variable_2) == 0x000030, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, Temp_bool_Variable_1) == 0x000040, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, K2Node_Select_Default) == 0x000048, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, K2Node_Select_Default_1) == 0x000060, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000070, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_ReturnValue) == 0x000074, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x000078, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x00007C, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x000080, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x000084, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3) == 0x000088, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_GetFloatAttribute_ReturnValue_3) == 0x00008C, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_GetFloatAttribute_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_BuildString_Object_ReturnValue) == 0x000090, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_BuildString_Object_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_BuildString_Float_ReturnValue) == 0x0000C0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_BuildString_Float_ReturnValue_1) == 0x0000D0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_BuildString_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_BuildString_Float_ReturnValue_2) == 0x0000E0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_BuildString_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo, CallFunc_BuildString_Float_ReturnValue_3) == 0x0000F0, "Member 'BP_MangPlayerPawn_Parent_C_DebugControlResistanceInfo::CallFunc_BuildString_Float_ReturnValue_3' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.InitializeAnimInstanceSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                K2Node_DynamicCast_AsFort_Player_Anim_Instance;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings) == 0x000018, "Wrong size on BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings, K2Node_DynamicCast_AsFort_Player_Anim_Instance) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings::K2Node_DynamicCast_AsFort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MangPlayerPawn_Parent_C_InitializeAnimInstanceSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetAdditiveHitReactsMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage) == 0x000008, "Wrong alignment on BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage) == 0x000010, "Wrong size on BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage, ReturnValue) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_MangPlayerPawn_Parent_C_GetAdditiveHitReactsMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MangPlayerPawn_Parent.BP_MangPlayerPawn_Parent_C.GetStateTagFromAlertLevel
// 0x003C (0x003C - 0x0000)
struct BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel final
{
public:
	struct FGameplayTag                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	EAlertLevel                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_813F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel) == 0x000004, "Wrong alignment on BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel");
static_assert(sizeof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel) == 0x00003C, "Wrong size on BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, NewParam) == 0x000000, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_byte_Variable) == 0x000008, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_struct_Variable) == 0x00000C, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_struct_Variable_1) == 0x000014, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_struct_Variable_2) == 0x00001C, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_struct_Variable_3) == 0x000024, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, Temp_struct_Variable_4) == 0x00002C, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel, K2Node_Select_Default) == 0x000034, "Member 'BP_MangPlayerPawn_Parent_C_GetStateTagFromAlertLevel::K2Node_Select_Default' has a wrong offset!");

}

