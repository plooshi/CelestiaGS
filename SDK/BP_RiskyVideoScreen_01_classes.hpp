#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RiskyVideoScreen_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RiskyVideoScreen_01.BP_RiskyVideoScreen_01_C
// 0x00F0 (0x0340 - 0x0250)
class ABP_RiskyVideoScreen_01_C final : public AFortStaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UApplicationLifecycleComponent*         ApplicationLifecycle;                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMediaSoundComponent*                   MediaSound;                                        // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMediaTexture*                          Media_Texture;                                     // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundShowStart;                                    // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundShowLoop;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundShowEnd;                                      // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBeforeLooping;                                 // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88E9[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 PlatformSource;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              PlayFromTimespan;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenConstructed;                                // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EA[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VideoLength;                                       // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoPlay;                                          // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EB[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAthena_Prop_Video_Stream_Trigger1_C*   StreamingTrigger;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CalendarEvent;                                     // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstance*                      VideoStoppedMaterial;                              // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EventActive;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_88EC[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInstance>       Screen;                                            // 0x02E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FScalableFloat                         HotfixValue;                                       // 0x0308(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EnableVideo;                                       // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableAudio;                                       // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88ED[0x6];                                     // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SharingCheckTimer;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ScreenRecording;                                   // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ScreenRecordingLast;                               // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RiskyVideoScreen_01(int32 EntryPoint);
	void Foreground();
	void EnableShareBlocking(bool Enable);
	void SubtitleEnable(bool Enable, bool FromStart);
	void SharingCheck();
	void VideoEnable(bool Enable, bool Stopped);
	void AudioEnable(bool Enable);
	void OnVideoStopped();
	void On_Video_Started();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnReady_8DEC40D84EF45FEB0ABB6E82CAC0E8A1(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void UpdateBlocks();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RiskyVideoScreen_01_C">();
	}
	static class ABP_RiskyVideoScreen_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RiskyVideoScreen_01_C>();
	}
};
static_assert(alignof(ABP_RiskyVideoScreen_01_C) == 0x000008, "Wrong alignment on ABP_RiskyVideoScreen_01_C");
static_assert(sizeof(ABP_RiskyVideoScreen_01_C) == 0x000340, "Wrong size on ABP_RiskyVideoScreen_01_C");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, UberGraphFrame) == 0x000250, "Member 'ABP_RiskyVideoScreen_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, ApplicationLifecycle) == 0x000258, "Member 'ABP_RiskyVideoScreen_01_C::ApplicationLifecycle' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, MediaSound) == 0x000260, "Member 'ABP_RiskyVideoScreen_01_C::MediaSound' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, Media_Texture) == 0x000268, "Member 'ABP_RiskyVideoScreen_01_C::Media_Texture' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, SoundShowStart) == 0x000270, "Member 'ABP_RiskyVideoScreen_01_C::SoundShowStart' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, SoundShowLoop) == 0x000278, "Member 'ABP_RiskyVideoScreen_01_C::SoundShowLoop' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, SoundShowEnd) == 0x000280, "Member 'ABP_RiskyVideoScreen_01_C::SoundShowEnd' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, MediaPlayer) == 0x000288, "Member 'ABP_RiskyVideoScreen_01_C::MediaPlayer' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, TimeBeforeLooping) == 0x000290, "Member 'ABP_RiskyVideoScreen_01_C::TimeBeforeLooping' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, PlatformSource) == 0x000298, "Member 'ABP_RiskyVideoScreen_01_C::PlatformSource' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, PlayFromTimespan) == 0x0002A0, "Member 'ABP_RiskyVideoScreen_01_C::PlayFromTimespan' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, HasBeenConstructed) == 0x0002A8, "Member 'ABP_RiskyVideoScreen_01_C::HasBeenConstructed' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, VideoLength) == 0x0002AC, "Member 'ABP_RiskyVideoScreen_01_C::VideoLength' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, AutoPlay) == 0x0002B0, "Member 'ABP_RiskyVideoScreen_01_C::AutoPlay' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, StreamingTrigger) == 0x0002B8, "Member 'ABP_RiskyVideoScreen_01_C::StreamingTrigger' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, CalendarEvent) == 0x0002C0, "Member 'ABP_RiskyVideoScreen_01_C::CalendarEvent' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, VideoStoppedMaterial) == 0x0002D0, "Member 'ABP_RiskyVideoScreen_01_C::VideoStoppedMaterial' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, EventActive) == 0x0002D8, "Member 'ABP_RiskyVideoScreen_01_C::EventActive' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, Screen) == 0x0002E0, "Member 'ABP_RiskyVideoScreen_01_C::Screen' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, HotfixValue) == 0x000308, "Member 'ABP_RiskyVideoScreen_01_C::HotfixValue' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, EnableVideo) == 0x000328, "Member 'ABP_RiskyVideoScreen_01_C::EnableVideo' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, EnableAudio) == 0x000329, "Member 'ABP_RiskyVideoScreen_01_C::EnableAudio' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, SharingCheckTimer) == 0x000330, "Member 'ABP_RiskyVideoScreen_01_C::SharingCheckTimer' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, ScreenRecording) == 0x000338, "Member 'ABP_RiskyVideoScreen_01_C::ScreenRecording' has a wrong offset!");
static_assert(offsetof(ABP_RiskyVideoScreen_01_C, ScreenRecordingLast) == 0x000339, "Member 'ABP_RiskyVideoScreen_01_C::ScreenRecordingLast' has a wrong offset!");

}

