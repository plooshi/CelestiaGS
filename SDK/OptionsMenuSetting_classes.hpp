#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuSetting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OptionsMenuSetting.OptionsMenuSetting_C
// 0x00D8 (0x0360 - 0x0288)
class UOptionsMenuSetting_C final : public UFortOptionsMenuSetting
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_0;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonTouchTooltip;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Right;                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                            MenuAnchorSettingDescription;                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          MenuSlider;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxContainer;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxLabel;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SliderBackground;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SliderText;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SliderValue;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Right;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                SpacerBottom;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Total_Width;                                       // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C0[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Slider_Texture;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       Tab_Tooltip_Text;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Hover_Text;                                        // 0x0308(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MinIntegralDigits;                                 // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxIntegralDigits;                                 // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinFractionalDigits;                               // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxFractionalDigits;                               // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSensitivityValue;                               // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSensitivityValue;                               // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoundingMode                                 RoundingMode;                                      // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C1[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Tooltip_Timer;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayRenderScale;                                // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C2[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreviousValue;                                     // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideLabelText;                                     // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73C3[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ToolTipSizeMobile;                                 // 0x0354(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideSpaceRight;                                    // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_OptionsMenuSetting(int32 EntryPoint);
	void SetControlsEnabled(bool bEnabled, const class FText& DisabledReason);
	void Refresh();
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_107_OnControllerCaptureEndEvent__DelegateSignature();
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_86_OnMouseCaptureEndEvent__DelegateSignature();
	void CenterOnWidget();
	void UpdateSetting(class UCommonTextBlock* TooltipTextBlock);
	void BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BP_OnEntryReleased();
	void BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature(bool bIsOpen);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void Construct();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void UpdateSize();
	void HandlePawnSet();
	class UWidget* OnGetMenuContent();
	void Show_Tooltip();
	void Hide_Tooltip();
	void SetSliderTextRenderScale(float Scale_Normalized);
	void SetDarkTabStyle();
	void ConvertSliderValueToSettingsValue(float Param_SliderValue, float* SettingsValue);
	void UpdateSliderTexture();
	void ConvertSettingsValueToSliderValue(float SettingsValue, float* Param_SliderValue);
	void UpdateVisuals();
	void SetFontSize(class UCommonTextBlock* Text, int32 DefaulFontSize, int32 MobileFont);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OptionsMenuSetting_C">();
	}
	static class UOptionsMenuSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsMenuSetting_C>();
	}
};
static_assert(alignof(UOptionsMenuSetting_C) == 0x000008, "Wrong alignment on UOptionsMenuSetting_C");
static_assert(sizeof(UOptionsMenuSetting_C) == 0x000360, "Wrong size on UOptionsMenuSetting_C");
static_assert(offsetof(UOptionsMenuSetting_C, UberGraphFrame) == 0x000288, "Member 'UOptionsMenuSetting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Button_0) == 0x000290, "Member 'UOptionsMenuSetting_C::Button_0' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, ButtonTouchTooltip) == 0x000298, "Member 'UOptionsMenuSetting_C::ButtonTouchTooltip' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, HorizontalBox_Right) == 0x0002A0, "Member 'UOptionsMenuSetting_C::HorizontalBox_Right' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MenuAnchorSettingDescription) == 0x0002A8, "Member 'UOptionsMenuSetting_C::MenuAnchorSettingDescription' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MenuSlider) == 0x0002B0, "Member 'UOptionsMenuSetting_C::MenuSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SizeBoxContainer) == 0x0002B8, "Member 'UOptionsMenuSetting_C::SizeBoxContainer' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SizeBoxLabel) == 0x0002C0, "Member 'UOptionsMenuSetting_C::SizeBoxLabel' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderBackground) == 0x0002C8, "Member 'UOptionsMenuSetting_C::SliderBackground' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderText) == 0x0002D0, "Member 'UOptionsMenuSetting_C::SliderText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderValue) == 0x0002D8, "Member 'UOptionsMenuSetting_C::SliderValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Spacer_Right) == 0x0002E0, "Member 'UOptionsMenuSetting_C::Spacer_Right' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SpacerBottom) == 0x0002E8, "Member 'UOptionsMenuSetting_C::SpacerBottom' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Total_Width) == 0x0002F0, "Member 'UOptionsMenuSetting_C::Total_Width' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Slider_Texture) == 0x0002F8, "Member 'UOptionsMenuSetting_C::Slider_Texture' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Tab_Tooltip_Text) == 0x000300, "Member 'UOptionsMenuSetting_C::Tab_Tooltip_Text' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Hover_Text) == 0x000308, "Member 'UOptionsMenuSetting_C::Hover_Text' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinIntegralDigits) == 0x000320, "Member 'UOptionsMenuSetting_C::MinIntegralDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxIntegralDigits) == 0x000324, "Member 'UOptionsMenuSetting_C::MaxIntegralDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinFractionalDigits) == 0x000328, "Member 'UOptionsMenuSetting_C::MinFractionalDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxFractionalDigits) == 0x00032C, "Member 'UOptionsMenuSetting_C::MaxFractionalDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxSensitivityValue) == 0x000330, "Member 'UOptionsMenuSetting_C::MaxSensitivityValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinSensitivityValue) == 0x000334, "Member 'UOptionsMenuSetting_C::MinSensitivityValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, RoundingMode) == 0x000338, "Member 'UOptionsMenuSetting_C::RoundingMode' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Tooltip_Timer) == 0x000340, "Member 'UOptionsMenuSetting_C::Tooltip_Timer' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, DisplayRenderScale) == 0x000348, "Member 'UOptionsMenuSetting_C::DisplayRenderScale' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, PreviousValue) == 0x00034C, "Member 'UOptionsMenuSetting_C::PreviousValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, HideLabelText) == 0x000350, "Member 'UOptionsMenuSetting_C::HideLabelText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, ToolTipSizeMobile) == 0x000354, "Member 'UOptionsMenuSetting_C::ToolTipSizeMobile' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, HideSpaceRight) == 0x00035C, "Member 'UOptionsMenuSetting_C::HideSpaceRight' has a wrong offset!");

}

