#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BA_FORTNITE_NonSequential

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BA_FORTNITE_NonSequential.BA_FORTNITE_NonSequential_C.ExecuteUbergraph_BA_FORTNITE_NonSequential
// 0x0548 (0x0548 - 0x0000)
struct BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_3;                      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_4;                      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_5;                      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_6;                      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_7;                      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_8;                      // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C4[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C5[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C6[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C7[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C8[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00DC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0168(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x01F4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x0280(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x030C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_5;  // 0x0398(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_6;  // 0x0424(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_7;  // 0x04B0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83C9[0x3];                                     // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential) == 0x000008, "Wrong alignment on BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential");
static_assert(sizeof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential) == 0x000548, "Wrong size on BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, EntryPoint) == 0x000000, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::EntryPoint' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue) == 0x00000C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_1) == 0x000018, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_2) == 0x000024, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_3) == 0x000030, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_4) == 0x00003C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_5) == 0x000048, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_6) == 0x000054, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_7) == 0x000060, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_VLerp_ReturnValue_8) == 0x00006C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_VLerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, K2Node_SwitchInteger_CmpSuccess) == 0x000088, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000098, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Map_Find_Value) == 0x0000B4, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Map_Find_ReturnValue) == 0x0000B5, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Map_Keys_Keys) == 0x0000B8, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000DC, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000168, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0001F4, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x000280, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x00030C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_5) == 0x000398, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_6) == 0x000424, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_K2_SetRelativeLocation_SweepHitResult_7) == 0x0004B0, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_K2_SetRelativeLocation_SweepHitResult_7' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Contains_ReturnValue) == 0x00053C, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_Array_Length_ReturnValue_3) == 0x000540, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000544, "Member 'BA_FORTNITE_NonSequential_C_ExecuteUbergraph_BA_FORTNITE_NonSequential::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BA_FORTNITE_NonSequential.BA_FORTNITE_NonSequential_C.SetUpDynamicMats
// 0x0040 (0x0040 - 0x0000)
struct BA_FORTNITE_NonSequential_C_SetUpDynamicMats final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats) == 0x000008, "Wrong alignment on BA_FORTNITE_NonSequential_C_SetUpDynamicMats");
static_assert(sizeof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats) == 0x000040, "Wrong size on BA_FORTNITE_NonSequential_C_SetUpDynamicMats");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000020, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000028, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000030, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BA_FORTNITE_NonSequential_C_SetUpDynamicMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x000038, "Member 'BA_FORTNITE_NonSequential_C_SetUpDynamicMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");

}

