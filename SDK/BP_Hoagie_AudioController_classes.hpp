#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hoagie_AudioController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "HoagieRuntime_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Hoagie_AudioController.BP_Hoagie_AudioController_C
// 0x0108 (0x0378 - 0x0270)
class ABP_Hoagie_AudioController_C final : public AFortHoagieAudioController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        RotorDamage;                                       // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        DamageState;                                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BoostReady;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLayeredAudioComponent*             RotorWash;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Boost;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           FortCollisionAudioImpacts;                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Horn;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLayeredAudioComponent*             Engine;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Horn_Pitch_Down_Horn_Volume_B99C94784317A4FD1CDE56857EF15DC1; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horn_Pitch_Down_Horn_Pitch_B99C94784317A4FD1CDE56857EF15DC1; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Horn_Pitch_Down__Direction_B99C94784317A4FD1CDE56857EF15DC1; // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A65[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Horn_Pitch_Down;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHoagieVehicle_C*                       HoagieVehicle;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAudioRange;                                     // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ListenerLocation;                                  // 0x02E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HoagieLocation;                                    // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionNormalized;                               // 0x02FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ListenerLocationOffset;                            // 0x0308(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HoagieLocationOffset;                              // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DotProductOffset;                                  // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DotProductOffsetMin;                               // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DotProductOffsetMax;                               // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDotProduct;                                 // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DestroySound;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalPlayerInVehicle;                            // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A66[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 DamageThresholds;                                  // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          CriticalDamage;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RotorHit;                                          // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A67[0x6];                                     // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             DamageState1;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DamageState2;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DamageState3;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighQualityOverride;                               // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasInitialized;                                    // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Hoagie_AudioController(int32 EntryPoint);
	void Cache_References(class AHoagieVehicle_C* Param_Vehicle);
	void On_Update_Audio(class AHoagieVehicle_C* Param_HoagieVehicle);
	void On_Horn_Button_Pressed();
	void On_Notify_Pilot_Enter();
	void On_Notify_Collision_Hit(const struct FVector& HitLocation, const struct FVector& Normal_Impulse);
	void On_Notify_Boost_Start();
	void On_Notify_Boost_End();
	void On_Notify_Destroyed();
	void On_Notify_Boost_Ready();
	void On_Notify_Pilot_Exit();
	void On_Notify_Stop_Tick();
	void Stop_Horn(bool Manually_Stopped);
	void Start_Horn();
	void On_Notify_Glass_Destroyed();
	void On_Notify_Rotor_Outer_Impact();
	void Update_State_Parameters();
	void Update_DotProd_Parameters();
	void Update_Damage_State(float Damage);
	void Update_Rotor_Wash();
	void Horn_Pitch_Down__UpdateFunc();
	void Horn_Pitch_Down__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Hoagie_AudioController_C">();
	}
	static class ABP_Hoagie_AudioController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Hoagie_AudioController_C>();
	}
};
static_assert(alignof(ABP_Hoagie_AudioController_C) == 0x000008, "Wrong alignment on ABP_Hoagie_AudioController_C");
static_assert(sizeof(ABP_Hoagie_AudioController_C) == 0x000378, "Wrong size on ABP_Hoagie_AudioController_C");
static_assert(offsetof(ABP_Hoagie_AudioController_C, UberGraphFrame) == 0x000270, "Member 'ABP_Hoagie_AudioController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, RotorDamage) == 0x000278, "Member 'ABP_Hoagie_AudioController_C::RotorDamage' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DamageState) == 0x000280, "Member 'ABP_Hoagie_AudioController_C::DamageState' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, BoostReady) == 0x000288, "Member 'ABP_Hoagie_AudioController_C::BoostReady' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, RotorWash) == 0x000290, "Member 'ABP_Hoagie_AudioController_C::RotorWash' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Boost) == 0x000298, "Member 'ABP_Hoagie_AudioController_C::Boost' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, FortCollisionAudioImpacts) == 0x0002A0, "Member 'ABP_Hoagie_AudioController_C::FortCollisionAudioImpacts' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Horn) == 0x0002A8, "Member 'ABP_Hoagie_AudioController_C::Horn' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Engine) == 0x0002B0, "Member 'ABP_Hoagie_AudioController_C::Engine' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Hoagie_AudioController_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Horn_Pitch_Down_Horn_Volume_B99C94784317A4FD1CDE56857EF15DC1) == 0x0002C0, "Member 'ABP_Hoagie_AudioController_C::Horn_Pitch_Down_Horn_Volume_B99C94784317A4FD1CDE56857EF15DC1' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Horn_Pitch_Down_Horn_Pitch_B99C94784317A4FD1CDE56857EF15DC1) == 0x0002C4, "Member 'ABP_Hoagie_AudioController_C::Horn_Pitch_Down_Horn_Pitch_B99C94784317A4FD1CDE56857EF15DC1' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Horn_Pitch_Down__Direction_B99C94784317A4FD1CDE56857EF15DC1) == 0x0002C8, "Member 'ABP_Hoagie_AudioController_C::Horn_Pitch_Down__Direction_B99C94784317A4FD1CDE56857EF15DC1' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, Horn_Pitch_Down) == 0x0002D0, "Member 'ABP_Hoagie_AudioController_C::Horn_Pitch_Down' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, HoagieVehicle) == 0x0002D8, "Member 'ABP_Hoagie_AudioController_C::HoagieVehicle' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, MaxAudioRange) == 0x0002E0, "Member 'ABP_Hoagie_AudioController_C::MaxAudioRange' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, ListenerLocation) == 0x0002E4, "Member 'ABP_Hoagie_AudioController_C::ListenerLocation' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, HoagieLocation) == 0x0002F0, "Member 'ABP_Hoagie_AudioController_C::HoagieLocation' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DirectionNormalized) == 0x0002FC, "Member 'ABP_Hoagie_AudioController_C::DirectionNormalized' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, ListenerLocationOffset) == 0x000308, "Member 'ABP_Hoagie_AudioController_C::ListenerLocationOffset' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, HoagieLocationOffset) == 0x000314, "Member 'ABP_Hoagie_AudioController_C::HoagieLocationOffset' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DotProductOffset) == 0x000320, "Member 'ABP_Hoagie_AudioController_C::DotProductOffset' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DotProductOffsetMin) == 0x000324, "Member 'ABP_Hoagie_AudioController_C::DotProductOffsetMin' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DotProductOffsetMax) == 0x000328, "Member 'ABP_Hoagie_AudioController_C::DotProductOffsetMax' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, CurrentDotProduct) == 0x00032C, "Member 'ABP_Hoagie_AudioController_C::CurrentDotProduct' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DestroySound) == 0x000330, "Member 'ABP_Hoagie_AudioController_C::DestroySound' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, IsLocalPlayerInVehicle) == 0x000338, "Member 'ABP_Hoagie_AudioController_C::IsLocalPlayerInVehicle' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DamageThresholds) == 0x000340, "Member 'ABP_Hoagie_AudioController_C::DamageThresholds' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, CriticalDamage) == 0x000350, "Member 'ABP_Hoagie_AudioController_C::CriticalDamage' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, RotorHit) == 0x000351, "Member 'ABP_Hoagie_AudioController_C::RotorHit' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DamageState1) == 0x000358, "Member 'ABP_Hoagie_AudioController_C::DamageState1' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DamageState2) == 0x000360, "Member 'ABP_Hoagie_AudioController_C::DamageState2' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, DamageState3) == 0x000368, "Member 'ABP_Hoagie_AudioController_C::DamageState3' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, HighQualityOverride) == 0x000370, "Member 'ABP_Hoagie_AudioController_C::HighQualityOverride' has a wrong offset!");
static_assert(offsetof(ABP_Hoagie_AudioController_C, HasInitialized) == 0x000371, "Member 'ABP_Hoagie_AudioController_C::HasInitialized' has a wrong offset!");

}

