#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GolfCartVehicleSK

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.ExecuteUbergraph_GolfCartVehicleSK
// 0x0D30 (0x0D30 - 0x0000)
struct GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0004(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormalImpulse;                     // 0x0010(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitFrictionImpulse;                   // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_880E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_HitSurfaceType;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_880F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnCollision_OutResult;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8810[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnCollision_OutMagnitude;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8811[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8812[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8813[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0098(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8814[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            K2Node_DynamicCast_AsFort_Pickup;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8815[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8816[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8817[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn_1;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x0158(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8818[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_CustomEvent_NewWeapon;                      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_CustomEvent_PrevWeapon;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8819[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Ranged_Generic_C*                    K2Node_DynamicCast_AsB_Ranged_Generic;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881A[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Ranged_Generic_C*                    K2Node_DynamicCast_AsB_Ranged_Generic_1;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881B[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881C[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881D[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Assault_Generic_C*                   K2Node_DynamicCast_AsB_Assault_Generic;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881E[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Damage;                         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881F[0x2];                                     // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8820[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8821[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0210(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x023C(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x02D8(0x0018)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_Generic_C*                    K2Node_DynamicCast_AsB_Ranged_Generic_2;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8822[0x5];                                     // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue_1;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)> K2Node_CreateDelegate_OutputDelegate;              // 0x031C(0x0010)(ZeroConstructor, NoDestructor)
	EDynamicForceFeedbackAction                   Temp_byte_Variable;                                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8823[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8824[0x5];                                     // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8825[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8826[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0398(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x03A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x03BC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8827[0x2];                                     // 0x044A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x044C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8828[0x4];                                     // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0460(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool AimDownsights)>           K2Node_CreateDelegate_OutputDelegate_3;            // 0x0468(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool AimDownsights)>           K2Node_CreateDelegate_OutputDelegate_4;            // 0x0478(0x0010)(ZeroConstructor, NoDestructor)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsADS;                          // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8829[0x3];                                     // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPreviousForwardSpeedKmh_ReturnValue;   // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882A[0x3];                                     // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882B[0x3];                                     // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882C[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkydiving_ReturnValue;                  // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882D[0x3];                                     // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882E[0x6];                                     // 0x050A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0510(0x0030)(IsPlainOldData, NoDestructor)
	class ABuildingWall*                          K2Node_DynamicCast_AsBuilding_Wall;                // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBuilt_ReturnValue;                // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882F[0x5];                                     // 0x054B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAthena_Prop_ParentBuildingContainerBlueprint_C* K2Node_DynamicCast_AsAthena_Prop_Parent_Building_Container_Blueprint; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8830[0x7];                                     // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8831[0x3];                                     // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSpringLengthRatio_ReturnValue;         // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8832[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSpringLengthRatio_ReturnValue_1;       // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpringLengthRatio_ReturnValue_2;       // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpringLengthRatio_ReturnValue_3;       // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCollision_OutResult_1;                  // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8833[0x3];                                     // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnCollision_OutMagnitude_1;               // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item;                           // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8834[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_2;    // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8835[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaSupplyDrop*                  K2Node_DynamicCast_AsFort_Athena_Supply_Drop;      // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8836[0x3];                                     // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AccumulationStepIndex;                // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8837[0x4];                                     // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Get_Item_1;                         // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x05F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UBuildingEditModeMetadata*>      K2Node_MakeArray_Array_1;                          // 0x0608(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfacePoint_1;                  // 0x0618(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfacePoint;                    // 0x0624(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x063C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8838[0x3];                                     // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0664(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0690(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingDetailMode_ReturnValue;       // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8839[0x3];                                     // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x06A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_883A[0x4];                                     // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x06B0(0x0030)(IsPlainOldData, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x06E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883B[0x3];                                     // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x06F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883C[0x3];                                     // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0708(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_883D[0x4];                                     // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0718(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0720(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_883E[0x4];                                     // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0730(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1;    // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883F[0x3];                                     // 0x0741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeedKmh_ReturnValue;           // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8840[0x4];                                     // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_3;         // 0x0750(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentBudget_ReturnValue;             // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x075D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8841[0x2];                                     // 0x075E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0760(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHonking_ReturnValue;                    // 0x076C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreAnyListenersWithinRange_ReturnValue;   // 0x076D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8842[0x2];                                     // 0x076E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_Pawn;                                 // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactPoint;                          // 0x0778(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactNormal;                         // 0x0784(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_LaunchVector;                         // 0x0790(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8843[0x4];                                     // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena_2;    // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8844[0x7];                                     // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkydiving_ReturnValue_1;                // 0x07BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x07BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x07BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x07BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x07C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8845[0x7];                                     // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x07D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8846[0x3];                                     // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_Array_Get_Item_2;                         // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8847[0x4];                                     // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x07F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0800(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8848[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array_2;                          // 0x0810(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UBuildingEditModeMetadata*>      K2Node_MakeArray_Array_3;                          // 0x0820(0x0010)(ReferenceParm, HasGetValueTypeHash)
	const class UAthenaItemWrapDefinition*        K2Node_Event_LoadedWrap;                           // 0x0830(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue; // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue_1; // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPermissionToAlterBuildings_ReturnValue; // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8849[0x2];                                     // 0x085A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_Event_ExitingPawn_1;                        // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExitDuration;                         // 0x0868(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884A[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0870(0x00B0)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884B[0x4];                                     // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_ExitingPawn;                          // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue;             // 0x0938(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue_1;           // 0x0948(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_3;                         // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAsleep_ReturnValue;                     // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAsleep_ReturnValue_1;                   // 0x096A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanContainPlayers_ReturnValue;            // 0x096B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasDriver_ReturnValue;                    // 0x096D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x096E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884C[0x1];                                     // 0x096F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAsleep_ReturnValue_2;                   // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884D[0x3];                                     // 0x0979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0984(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_884E[0x4];                                     // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0998(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x09A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884F[0x3];                                     // 0x09B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x09B8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0A45(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8850[0x2];                                     // 0x0A46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0A74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0A90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0AB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PrjPawn_Athena_RCRocket_C*           K2Node_DynamicCast_AsB_Prj_Pawn_Athena_RCRocket;   // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8851[0x3];                                     // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0AD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8852[0x3];                                     // 0x0ADD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0AEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0AED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0AEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8853[0x1];                                     // 0x0AEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0AF8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ClientIsDriver_ReturnValue;               // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0B09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0B0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0B0B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerRiding_ReturnValue;          // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDynamicForceFeedbackAction                   Temp_byte_Variable_1;                              // 0x0B0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0B0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8854[0x1];                                     // 0x0B0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8855[0x3];                                     // 0x0B19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8856[0x4];                                     // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_4;                         // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8857[0x3];                                     // 0x0B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8858[0x6];                                     // 0x0B3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue_2;            // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8859[0x1];                                     // 0x0B4B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0B4C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_885A[0x4];                                     // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0B60(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0B74(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_885B[0x4];                                     // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885C[0x3];                                     // 0x0B99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0BA0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885D[0x3];                                     // 0x0BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0BBC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0BCC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0BD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885E[0x3];                                     // 0x0BD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0BD8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885F[0x3];                                     // 0x0BE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool AimDownsights)>           K2Node_CreateDelegate_OutputDelegate_13;           // 0x0BEC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0BFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8860[0x3];                                     // 0x0BFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0C09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8861[0x2];                                     // 0x0C0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0C0C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0C1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8862[0x3];                                     // 0x0C1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 CallFunc_GetCurrentDayPhase_ReturnValue;           // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_CustomEvent_CurrentDayPhase;                // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_CustomEvent_PreviousDayPhase;               // 0x0C32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAtCreation;                    // 0x0C33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8863[0x3];                                     // 0x0C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue_1; // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8864[0x3];                                     // 0x0C41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x0C44(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8865[0x4];                                     // 0x0C54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_3;                           // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0C60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool AimDownsights)>           K2Node_CreateDelegate_OutputDelegate_16;           // 0x0C68(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x0C78(0x0010)(ZeroConstructor, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0C99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0C9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0C9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0C9C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK) == 0x000010, "Wrong alignment on GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK");
static_assert(sizeof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK) == 0x000D30, "Wrong size on GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, EntryPoint) == 0x000000, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::EntryPoint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitLocation) == 0x000004, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitNormalImpulse) == 0x000010, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitFrictionImpulse) == 0x00001C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitNormal) == 0x000028, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitActor) == 0x000038, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitSurfaceType) == 0x000040, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitSurfaceType' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Pawn) == 0x000048, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_OnCollision_OutResult) == 0x000051, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_OnCollision_OutResult' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_OnCollision_OutMagnitude) == 0x000054, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_OnCollision_OutMagnitude' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000064, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000065, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000078, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000080, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000088, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000090, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000094, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000098, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Pickup) == 0x000128, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Pickup' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Has_Been_Initd_Variable) == 0x000139, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_IsClosed_Variable) == 0x00013A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_1) == 0x00013B, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_PlayCameraShake_ReturnValue) == 0x000140, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_IsClosed_Variable_1) == 0x000148, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_PlayerPawn_1) == 0x000150, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_PlayerPawn_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_SeatIdx) == 0x000158, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NewWeapon) == 0x000160, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_PrevWeapon) == 0x000168, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_PrevWeapon' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000170, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsB_Ranged_Generic) == 0x000178, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsB_Ranged_Generic' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsB_Ranged_Generic_1) == 0x000188, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsB_Ranged_Generic_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetOwner_ReturnValue) == 0x000198, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001A0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0001A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001B1, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001B2, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_SwitchInteger_CmpSuccess) == 0x0001B3, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0001B4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_PlayerPawn) == 0x0001B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ExitSocketName) == 0x0001C0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsB_Assault_Generic) == 0x0001C8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsB_Assault_Generic' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_5) == 0x0001D0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001D1, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_Damage) == 0x0001D4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_EndPlayReason) == 0x0001D8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_2) == 0x0001D9, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001DC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001E8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001F0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetInstigatorController_ReturnValue) == 0x0001F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetInstigatorController_ReturnValue_1) == 0x000200, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_Damage) == 0x000208, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_DamageTags) == 0x000210, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_Momentum) == 0x000230, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_HitInfo) == 0x00023C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_InstigatedBy) == 0x0002C8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_DamageCauser) == 0x0002D0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_EffectContext) == 0x0002D8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_DeltaSeconds) == 0x0002F0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetValueAtLevel_ReturnValue) == 0x0002F4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsB_Ranged_Generic_2) == 0x0002F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsB_Ranged_Generic_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_6) == 0x000300, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000301, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000302, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_PlayCameraShake_ReturnValue_1) == 0x000308, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_PlayCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetVelocity_ReturnValue) == 0x000310, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate) == 0x00031C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_byte_Variable) == 0x00032C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetController_ReturnValue) == 0x000330, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsPlayer_Controller) == 0x000338, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_7) == 0x000340, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Has_Been_Initd_Variable_1) == 0x000341, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_3) == 0x000342, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000348, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000350, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_X) == 0x00035C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Y) == 0x000360, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Z) == 0x000364, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_FloatFloat_ReturnValue) == 0x000368, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000370, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue) == 0x000378, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000384, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_1) == 0x000388, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_4) == 0x000394, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000398, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable) == 0x0003A0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_AddUnique_ReturnValue) == 0x0003B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_CapsuleTraceSingle_OutHit) == 0x0003BC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000448, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_RemoveItem_ReturnValue) == 0x000449, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_2) == 0x00044C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000460, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_3) == 0x000468, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_4) == 0x000478, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable_1) == 0x000488, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_IsADS) == 0x000490, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_IsADS' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetPreviousForwardSpeedKmh_ReturnValue) == 0x000494, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetPreviousForwardSpeedKmh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x000498, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0004A4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Normal_ReturnValue) == 0x0004A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Variable) == 0x0004B4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0004B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetController_ReturnValue_1) == 0x0004C0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0004C8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Player_Controller) == 0x0004D0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_8) == 0x0004D8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0004E0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0004F0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsSkydiving_ReturnValue) == 0x0004F1, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsSkydiving_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanOR_ReturnValue) == 0x0004F2, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanOR_ReturnValue_1) == 0x0004F3, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_5) == 0x0004F4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable_2) == 0x0004F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable_3) == 0x000500, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000508, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Variable_1) == 0x000509, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetSocketTransform_ReturnValue) == 0x000510, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsBuilding_Wall) == 0x000540, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsBuilding_Wall' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_9) == 0x000548, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_SwitchEnum_CmpSuccess) == 0x000549, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsPlayerBuilt_ReturnValue) == 0x00054A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsPlayerBuilt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsAthena_Prop_Parent_Building_Container_Blueprint) == 0x000550, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsAthena_Prop_Parent_Building_Container_Blueprint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_10) == 0x000558, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsBuilding_Prop) == 0x000560, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_11) == 0x000568, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetSpringLengthRatio_ReturnValue) == 0x00056C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetSpringLengthRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_ActorHasTag_ReturnValue) == 0x000570, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetSpringLengthRatio_ReturnValue_1) == 0x000574, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetSpringLengthRatio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000578, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetSpringLengthRatio_ReturnValue_2) == 0x00057C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetSpringLengthRatio_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetSpringLengthRatio_ReturnValue_3) == 0x000580, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetSpringLengthRatio_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000584, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000588, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00058C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_2) == 0x000598, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_OnCollision_OutResult_1) == 0x0005A4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_OnCollision_OutResult_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_OnCollision_OutMagnitude_1) == 0x0005A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_OnCollision_OutMagnitude_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Array_Index_Variable) == 0x0005AC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Get_Item) == 0x0005B0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_6) == 0x0005B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetInstigatorController_ReturnValue_2) == 0x0005C0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetInstigatorController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0005C8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Athena_Supply_Drop) == 0x0005D0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Athena_Supply_Drop' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_12) == 0x0005D8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_AccumulationStepIndex) == 0x0005DC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_AccumulationStepIndex' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Subtract_IntInt_ReturnValue) == 0x0005E0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Get_Item_1) == 0x0005E8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0005F0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_MakeArray_Array) == 0x0005F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_MakeArray_Array_1) == 0x000608, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_WaterSurfacePoint_1) == 0x000618, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_WaterSurfacePoint_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_WaterSurfacePoint) == 0x000624, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_WaterSurfacePoint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000630, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00063C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000648, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_X_1) == 0x000654, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Y_1) == 0x000658, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Z_1) == 0x00065C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_7) == 0x000660, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_3) == 0x000664, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000670, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_4) == 0x000678, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_5) == 0x000684, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000690, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetRenderingDetailMode_ReturnValue) == 0x000698, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetRenderingDetailMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Greater_IntInt_ReturnValue) == 0x00069C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetVelocity_ReturnValue_1) == 0x0006A0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0006B0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0006E0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_InverseTransformDirection_ReturnValue) == 0x0006E8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_8) == 0x0006F4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Normal_ReturnValue_1) == 0x0006F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000704, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000708, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000718, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MakeVector_ReturnValue_6) == 0x000720, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000730, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1) == 0x000738, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_13) == 0x000740, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetForwardSpeedKmh_ReturnValue) == 0x000744, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetForwardSpeedKmh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_MapRangeClamped_ReturnValue) == 0x000748, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnSoundAttached_ReturnValue_3) == 0x000750, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnSoundAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetCurrentBudget_ReturnValue) == 0x000758, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetCurrentBudget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00075C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_9) == 0x00075D, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000760, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsHonking_ReturnValue) == 0x00076C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsHonking_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_AreAnyListenersWithinRange_ReturnValue) == 0x00076D, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_AreAnyListenersWithinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_Pawn) == 0x000770, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ImpactPoint) == 0x000778, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ImpactNormal) == 0x000784, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_LaunchVector) == 0x000790, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_LaunchVector' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_Player_Pawn_Athena_2) == 0x0007A0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_Player_Pawn_Athena_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_14) == 0x0007A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsFort_AIPawn) == 0x0007B0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_15) == 0x0007B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0007B9, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsSkydiving_ReturnValue_1) == 0x0007BA, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsSkydiving_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanAND_ReturnValue) == 0x0007BB, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Contains_ReturnValue) == 0x0007BC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0007BD, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0007BE, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanOR_ReturnValue_2) == 0x0007BF, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_5) == 0x0007C0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanOR_ReturnValue_3) == 0x0007D0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0007D8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Variable_2) == 0x0007E0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Array_Index_Variable_1) == 0x0007E4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Get_Item_2) == 0x0007E8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Select_Default) == 0x0007F0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0007F8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000800, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_MakeArray_Array_2) == 0x000810, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_MakeArray_Array_3) == 0x000820, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_LoadedWrap) == 0x000830, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_LoadedWrap' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Select_Default_1) == 0x000838, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue) == 0x000840, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Select_Default_2) == 0x000848, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue_1) == 0x000850, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_HasPermissionToAlterBuildings_ReturnValue) == 0x000858, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_HasPermissionToAlterBuildings_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanAND_ReturnValue_1) == 0x000859, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Loop_Counter_Variable) == 0x00085C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ExitingPawn_1) == 0x000860, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ExitingPawn_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ExitDuration) == 0x000868, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ExitDuration' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_MakeStruct_GameplayEventData) == 0x000870, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_IntInt_ReturnValue) == 0x000920, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Event_ExitingPawn) == 0x000928, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Event_ExitingPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_name_Variable) == 0x000930, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetAllPassengers_ReturnValue) == 0x000938, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetAllPassengers_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetAllPassengers_ReturnValue_1) == 0x000948, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetAllPassengers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Get_Item_3) == 0x000958, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Length_ReturnValue_1) == 0x000960, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Length_ReturnValue_2) == 0x000964, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsAsleep_ReturnValue) == 0x000968, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsAsleep_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Less_IntInt_ReturnValue) == 0x000969, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsAsleep_ReturnValue_1) == 0x00096A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsAsleep_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_CanContainPlayers_ReturnValue) == 0x00096B, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_CanContainPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Not_PreBool_ReturnValue) == 0x00096C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_HasDriver_ReturnValue) == 0x00096D, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_HasDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanOR_ReturnValue_4) == 0x00096E, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetMaxHealth_ReturnValue) == 0x000970, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetHealth_ReturnValue) == 0x000974, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsAsleep_ReturnValue_2) == 0x000978, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsAsleep_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00097C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Lerp_ReturnValue) == 0x000980, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_6) == 0x000984, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000998, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherActor) == 0x0009A0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherComp) == 0x0009A8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0009B0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_bFromSweep) == 0x0009B4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_ComponentBoundEvent_SweepResult) == 0x0009B8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_bBlockingHit) == 0x000A44, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_bInitialOverlap) == 0x000A45, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_Time) == 0x000A48, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_Distance) == 0x000A4C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_Location) == 0x000A50, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_ImpactPoint) == 0x000A5C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_Normal) == 0x000A68, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_ImpactNormal) == 0x000A74, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_PhysMat) == 0x000A80, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_HitActor) == 0x000A88, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_HitComponent) == 0x000A90, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_HitBoneName) == 0x000A98, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_HitItem) == 0x000AA0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_FaceIndex) == 0x000AA4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_TraceStart) == 0x000AA8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakHitResult_TraceEnd) == 0x000AB4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsB_Prj_Pawn_Athena_RCRocket) == 0x000AC0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsB_Prj_Pawn_Athena_RCRocket' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_16) == 0x000AC8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Dot_VectorVector_ReturnValue) == 0x000ACC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_InverseTransformLocation_ReturnValue) == 0x000AD0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000ADC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_X_2) == 0x000AE0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Y_2) == 0x000AE4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BreakVector_Z_2) == 0x000AE8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanAND_ReturnValue_2) == 0x000AEC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000AED, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_BooleanAND_ReturnValue_3) == 0x000AEE, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NotifyName) == 0x000AF0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_7) == 0x000AF8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_ClientIsDriver_ReturnValue) == 0x000B08, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_ClientIsDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_10) == 0x000B09, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_11) == 0x000B0A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_12) == 0x000B0B, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsLocalPlayerRiding_ReturnValue) == 0x000B0C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsLocalPlayerRiding_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_byte_Variable_1) == 0x000B0D, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsSprinting_ReturnValue) == 0x000B0E, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NotifyName_1) == 0x000B10, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_13) == 0x000B18, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Array_Index_Variable_2) == 0x000B1C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Loop_Counter_Variable_1) == 0x000B20, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Get_Item_4) == 0x000B28, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B30, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_IntInt_ReturnValue_1) == 0x000B34, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_14) == 0x000B38, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_15) == 0x000B39, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_PlayCameraShake_ReturnValue_2) == 0x000B40, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_PlayCameraShake_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_16) == 0x000B48, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_SwitchEnum_CmpSuccess_1) == 0x000B49, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_SwitchEnum_CmpSuccess_2) == 0x000B4A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_8) == 0x000B4C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000B60, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000B68, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_FClamp_ReturnValue) == 0x000B6C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Lerp_ReturnValue_1) == 0x000B70, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_9) == 0x000B74, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x000B88, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_int_Loop_Counter_Variable_2) == 0x000B90, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Array_Add_ReturnValue) == 0x000B94, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Less_IntInt_ReturnValue_2) == 0x000B98, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_Add_IntInt_ReturnValue_2) == 0x000B9C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_10) == 0x000BA0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NotifyName_2) == 0x000BB0, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000BB8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_11) == 0x000BBC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NotifyName_3) == 0x000BCC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000BD4, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_12) == 0x000BD8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000BE8, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_13) == 0x000BEC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_17) == 0x000BFC, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_NotifyName_4) == 0x000C00, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_HasAuthority_ReturnValue) == 0x000C08, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_18) == 0x000C09, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_14) == 0x000C0C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000C1C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable_4) == 0x000C20, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_object_Variable_5) == 0x000C28, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetCurrentDayPhase_ReturnValue) == 0x000C30, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetCurrentDayPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_CurrentDayPhase) == 0x000C31, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_PreviousDayPhase) == 0x000C32, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CustomEvent_bAtCreation) == 0x000C33, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CustomEvent_bAtCreation' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_SwitchEnum_CmpSuccess_3) == 0x000C34, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue_1) == 0x000C38, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Variable_3) == 0x000C40, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_15) == 0x000C44, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_Select_Default_3) == 0x000C58, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000C60, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_16) == 0x000C68, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_CreateDelegate_OutputDelegate_17) == 0x000C78, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_GetController_ReturnValue_2) == 0x000C88, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x000C90, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, K2Node_DynamicCast_bSuccess_17) == 0x000C98, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_Has_Been_Initd_Variable_2) == 0x000C99, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, Temp_bool_IsClosed_Variable_2) == 0x000C9A, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsValid_ReturnValue_19) == 0x000C9B, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000C9C, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000D28, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000D29, "Member 'GolfCartVehicleSK_C_ExecuteUbergraph_GolfCartVehicleSK::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.SetHeadlightState
// 0x0003 (0x0003 - 0x0000)
struct GolfCartVehicleSK_C_SetHeadlightState final
{
public:
	EFortDayPhase                                 CurrentDayPhase;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GolfCartVehicleSK_C_SetHeadlightState) == 0x000001, "Wrong alignment on GolfCartVehicleSK_C_SetHeadlightState");
static_assert(sizeof(GolfCartVehicleSK_C_SetHeadlightState) == 0x000003, "Wrong size on GolfCartVehicleSK_C_SetHeadlightState");
static_assert(offsetof(GolfCartVehicleSK_C_SetHeadlightState, CurrentDayPhase) == 0x000000, "Member 'GolfCartVehicleSK_C_SetHeadlightState::CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_SetHeadlightState, PreviousDayPhase) == 0x000001, "Member 'GolfCartVehicleSK_C_SetHeadlightState::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_SetHeadlightState, bAtCreation) == 0x000002, "Member 'GolfCartVehicleSK_C_SetHeadlightState::bAtCreation' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8866[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'GolfCartVehicleSK_C_BndEvt__RoofCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnHoldExitStopped
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnHoldExitStopped final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnHoldExitStopped) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnHoldExitStopped");
static_assert(sizeof(GolfCartVehicleSK_C_OnHoldExitStopped) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnHoldExitStopped");
static_assert(offsetof(GolfCartVehicleSK_C_OnHoldExitStopped, ExitingPawn) == 0x000000, "Member 'GolfCartVehicleSK_C_OnHoldExitStopped::ExitingPawn' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnHoldExitStarted
// 0x0010 (0x0010 - 0x0000)
struct GolfCartVehicleSK_C_OnHoldExitStarted final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExitDuration;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnHoldExitStarted) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnHoldExitStarted");
static_assert(sizeof(GolfCartVehicleSK_C_OnHoldExitStarted) == 0x000010, "Wrong size on GolfCartVehicleSK_C_OnHoldExitStarted");
static_assert(offsetof(GolfCartVehicleSK_C_OnHoldExitStarted, ExitingPawn) == 0x000000, "Member 'GolfCartVehicleSK_C_OnHoldExitStarted::ExitingPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnHoldExitStarted, ExitDuration) == 0x000008, "Member 'GolfCartVehicleSK_C_OnHoldExitStarted::ExitDuration' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.K2_ApplyCosmeticWrap
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_K2_ApplyCosmeticWrap final
{
public:
	const class UAthenaItemWrapDefinition*        LoadedWrap;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_K2_ApplyCosmeticWrap");
static_assert(sizeof(GolfCartVehicleSK_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong size on GolfCartVehicleSK_C_K2_ApplyCosmeticWrap");
static_assert(offsetof(GolfCartVehicleSK_C_K2_ApplyCosmeticWrap, LoadedWrap) == 0x000000, "Member 'GolfCartVehicleSK_C_K2_ApplyCosmeticWrap::LoadedWrap' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.PawnHitByVehicle
// 0x0030 (0x0030 - 0x0000)
struct GolfCartVehicleSK_C_PawnHitByVehicle final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVector;                                      // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_PawnHitByVehicle) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_PawnHitByVehicle");
static_assert(sizeof(GolfCartVehicleSK_C_PawnHitByVehicle) == 0x000030, "Wrong size on GolfCartVehicleSK_C_PawnHitByVehicle");
static_assert(offsetof(GolfCartVehicleSK_C_PawnHitByVehicle, Pawn) == 0x000000, "Member 'GolfCartVehicleSK_C_PawnHitByVehicle::Pawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PawnHitByVehicle, ImpactPoint) == 0x000008, "Member 'GolfCartVehicleSK_C_PawnHitByVehicle::ImpactPoint' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PawnHitByVehicle, ImpactNormal) == 0x000014, "Member 'GolfCartVehicleSK_C_PawnHitByVehicle::ImpactNormal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PawnHitByVehicle, LaunchVector) == 0x000020, "Member 'GolfCartVehicleSK_C_PawnHitByVehicle::LaunchVector' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnExitedWaterVolume
// 0x000C (0x000C - 0x0000)
struct GolfCartVehicleSK_C_OnExitedWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnExitedWaterVolume) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnExitedWaterVolume");
static_assert(sizeof(GolfCartVehicleSK_C_OnExitedWaterVolume) == 0x00000C, "Wrong size on GolfCartVehicleSK_C_OnExitedWaterVolume");
static_assert(offsetof(GolfCartVehicleSK_C_OnExitedWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'GolfCartVehicleSK_C_OnExitedWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnEnteredWaterVolume
// 0x000C (0x000C - 0x0000)
struct GolfCartVehicleSK_C_OnEnteredWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnEnteredWaterVolume) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnEnteredWaterVolume");
static_assert(sizeof(GolfCartVehicleSK_C_OnEnteredWaterVolume) == 0x00000C, "Wrong size on GolfCartVehicleSK_C_OnEnteredWaterVolume");
static_assert(offsetof(GolfCartVehicleSK_C_OnEnteredWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'GolfCartVehicleSK_C_OnEnteredWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.BoostIncrease
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_BoostIncrease final
{
public:
	int32                                         AccumulationStepIndex;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_BoostIncrease) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_BoostIncrease");
static_assert(sizeof(GolfCartVehicleSK_C_BoostIncrease) == 0x000004, "Wrong size on GolfCartVehicleSK_C_BoostIncrease");
static_assert(offsetof(GolfCartVehicleSK_C_BoostIncrease, AccumulationStepIndex) == 0x000000, "Member 'GolfCartVehicleSK_C_BoostIncrease::AccumulationStepIndex' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.LocalPassengerADS
// 0x0001 (0x0001 - 0x0000)
struct GolfCartVehicleSK_C_LocalPassengerADS final
{
public:
	bool                                          IsADS;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GolfCartVehicleSK_C_LocalPassengerADS) == 0x000001, "Wrong alignment on GolfCartVehicleSK_C_LocalPassengerADS");
static_assert(sizeof(GolfCartVehicleSK_C_LocalPassengerADS) == 0x000001, "Wrong size on GolfCartVehicleSK_C_LocalPassengerADS");
static_assert(offsetof(GolfCartVehicleSK_C_LocalPassengerADS, IsADS) == 0x000000, "Member 'GolfCartVehicleSK_C_LocalPassengerADS::IsADS' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct GolfCartVehicleSK_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on GolfCartVehicleSK_C_ReceiveEndPlay");
static_assert(sizeof(GolfCartVehicleSK_C_ReceiveEndPlay) == 0x000001, "Wrong size on GolfCartVehicleSK_C_ReceiveEndPlay");
static_assert(offsetof(GolfCartVehicleSK_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'GolfCartVehicleSK_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.Update Damage State
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_Update_Damage_State final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_Update_Damage_State) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_Update_Damage_State");
static_assert(sizeof(GolfCartVehicleSK_C_Update_Damage_State) == 0x000004, "Wrong size on GolfCartVehicleSK_C_Update_Damage_State");
static_assert(offsetof(GolfCartVehicleSK_C_Update_Damage_State, Damage) == 0x000000, "Member 'GolfCartVehicleSK_C_Update_Damage_State::Damage' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct GolfCartVehicleSK_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnPawnExitVehicle");
static_assert(sizeof(GolfCartVehicleSK_C_OnPawnExitVehicle) == 0x000010, "Wrong size on GolfCartVehicleSK_C_OnPawnExitVehicle");
static_assert(offsetof(GolfCartVehicleSK_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'GolfCartVehicleSK_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'GolfCartVehicleSK_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct GolfCartVehicleSK_C_OnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnWeaponEquipped) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnWeaponEquipped");
static_assert(sizeof(GolfCartVehicleSK_C_OnWeaponEquipped) == 0x000010, "Wrong size on GolfCartVehicleSK_C_OnWeaponEquipped");
static_assert(offsetof(GolfCartVehicleSK_C_OnWeaponEquipped, NewWeapon) == 0x000000, "Member 'GolfCartVehicleSK_C_OnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'GolfCartVehicleSK_C_OnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct GolfCartVehicleSK_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnPawnEnterVehicle");
static_assert(sizeof(GolfCartVehicleSK_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on GolfCartVehicleSK_C_OnPawnEnterVehicle");
static_assert(offsetof(GolfCartVehicleSK_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'GolfCartVehicleSK_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'GolfCartVehicleSK_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8867[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'GolfCartVehicleSK_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnCollisionHitEffects
// 0x0040 (0x0040 - 0x0000)
struct GolfCartVehicleSK_C_OnCollisionHitEffects final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormalImpulse;                                  // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitFrictionImpulse;                                // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0024(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnCollisionHitEffects) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnCollisionHitEffects");
static_assert(sizeof(GolfCartVehicleSK_C_OnCollisionHitEffects) == 0x000040, "Wrong size on GolfCartVehicleSK_C_OnCollisionHitEffects");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitLocation) == 0x000000, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitLocation' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitNormalImpulse) == 0x00000C, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitFrictionImpulse) == 0x000018, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitNormal) == 0x000024, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitNormal' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitActor) == 0x000030, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnCollisionHitEffects, HitSurfaceType) == 0x000038, "Member 'GolfCartVehicleSK_C_OnCollisionHitEffects::HitSurfaceType' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct GolfCartVehicleSK_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8868[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GolfCartVehicleSK_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_OnDeathPlayEffects");
static_assert(sizeof(GolfCartVehicleSK_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on GolfCartVehicleSK_C_OnDeathPlayEffects");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'GolfCartVehicleSK_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_ReceiveTick) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_ReceiveTick");
static_assert(sizeof(GolfCartVehicleSK_C_ReceiveTick) == 0x000004, "Wrong size on GolfCartVehicleSK_C_ReceiveTick");
static_assert(offsetof(GolfCartVehicleSK_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GolfCartVehicleSK_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnCompleted_A0C9C97A4DE010E2D38107B3519D371C
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(sizeof(GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(offsetof(GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C, NotifyName) == 0x000000, "Member 'GolfCartVehicleSK_C_OnCompleted_A0C9C97A4DE010E2D38107B3519D371C::NotifyName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(sizeof(GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(offsetof(GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C, NotifyName) == 0x000000, "Member 'GolfCartVehicleSK_C_OnBlendOut_A0C9C97A4DE010E2D38107B3519D371C::NotifyName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(sizeof(GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(offsetof(GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C, NotifyName) == 0x000000, "Member 'GolfCartVehicleSK_C_OnInterrupted_A0C9C97A4DE010E2D38107B3519D371C::NotifyName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(sizeof(GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(offsetof(GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C, NotifyName) == 0x000000, "Member 'GolfCartVehicleSK_C_OnNotifyBegin_A0C9C97A4DE010E2D38107B3519D371C::NotifyName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C
// 0x0008 (0x0008 - 0x0000)
struct GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(sizeof(GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C) == 0x000008, "Wrong size on GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C");
static_assert(offsetof(GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C, NotifyName) == 0x000000, "Member 'GolfCartVehicleSK_C_OnNotifyEnd_A0C9C97A4DE010E2D38107B3519D371C::NotifyName' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.AttachWeaponToCart
// 0x0054 (0x0054 - 0x0000)
struct GolfCartVehicleSK_C_AttachWeaponToCart final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8869[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GolfCartVehicleSK_C_AttachWeaponToCart) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_AttachWeaponToCart");
static_assert(sizeof(GolfCartVehicleSK_C_AttachWeaponToCart) == 0x000054, "Wrong size on GolfCartVehicleSK_C_AttachWeaponToCart");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, Selection) == 0x000000, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::Selection' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000024, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000028, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_RandomFloatInRange_ReturnValue) == 0x00002C, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000030, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000034, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000038, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x00003C, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000040, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_MakeRotator_ReturnValue) == 0x000044, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_AttachWeaponToCart, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000050, "Member 'GolfCartVehicleSK_C_AttachWeaponToCart::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.PlayHapticsOnHit
// 0x0110 (0x0110 - 0x0000)
struct GolfCartVehicleSK_C_PlayHapticsOnHit final
{
public:
	float                                         HitMagnitude;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_886A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              ValidPlayerControllers;                            // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         CameraShakeMagnitude;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DriverPassengerBoth;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDelta;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraPushVelocityDelta;                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitLength;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886B[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886C[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_886D[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886E[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886F[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_3;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8870[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8871[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue_1;  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8872[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8873[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8874[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8875[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GolfCartVehicleSK_C_PlayHapticsOnHit) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_PlayHapticsOnHit");
static_assert(sizeof(GolfCartVehicleSK_C_PlayHapticsOnHit) == 0x000110, "Wrong size on GolfCartVehicleSK_C_PlayHapticsOnHit");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, HitMagnitude) == 0x000000, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::HitMagnitude' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, ValidPlayerControllers) == 0x000008, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::ValidPlayerControllers' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CameraShakeMagnitude) == 0x000018, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CameraShakeMagnitude' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, DriverPassengerBoth) == 0x00001C, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::DriverPassengerBoth' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, HitDelta) == 0x000020, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::HitDelta' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CameraPushVelocityDelta) == 0x000024, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CameraPushVelocityDelta' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, HitLength) == 0x000028, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::HitLength' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, Temp_int_Variable) == 0x00002C, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, Temp_int_Variable_1) == 0x000030, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, Temp_int_Variable_2) == 0x00003C, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, Temp_int_Variable_3) == 0x000040, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x00004C, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_MakeRotFromX_ReturnValue) == 0x000058, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Get_Item) == 0x000068, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Length_ReturnValue_2) == 0x000094, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Get_Item_3) == 0x0000A0, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Length_ReturnValue_3) == 0x0000A8, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000AC, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Length_ReturnValue_4) == 0x0000B0, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue_1) == 0x0000B8, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Normal_ReturnValue) == 0x0000C8, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000D4, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Abs_ReturnValue) == 0x0000DC, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E0, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E1, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_GetComponentVelocity_ReturnValue) == 0x0000E4, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F0, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_VSize_ReturnValue) == 0x0000F4, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F8, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000100, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000104, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_IsValid_ReturnValue_1) == 0x000105, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_Array_Add_ReturnValue_1) == 0x000108, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_PlayHapticsOnHit, CallFunc_IsValid_ReturnValue_2) == 0x00010C, "Member 'GolfCartVehicleSK_C_PlayHapticsOnHit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.OnRep_ImpactLocation
// 0x0018 (0x0018 - 0x0000)
struct GolfCartVehicleSK_C_OnRep_ImpactLocation final
{
public:
	bool                                          CallFunc_ClientIsDriver_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8876[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_OnRep_ImpactLocation) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_OnRep_ImpactLocation");
static_assert(sizeof(GolfCartVehicleSK_C_OnRep_ImpactLocation) == 0x000018, "Wrong size on GolfCartVehicleSK_C_OnRep_ImpactLocation");
static_assert(offsetof(GolfCartVehicleSK_C_OnRep_ImpactLocation, CallFunc_ClientIsDriver_ReturnValue) == 0x000000, "Member 'GolfCartVehicleSK_C_OnRep_ImpactLocation::CallFunc_ClientIsDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnRep_ImpactLocation, CallFunc_GetMass_ReturnValue) == 0x000004, "Member 'GolfCartVehicleSK_C_OnRep_ImpactLocation::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnRep_ImpactLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'GolfCartVehicleSK_C_OnRep_ImpactLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_OnRep_ImpactLocation, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'GolfCartVehicleSK_C_OnRep_ImpactLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.DestroyOrDamageBuildingPiece
// 0x0058 (0x0058 - 0x0000)
struct GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckForHealth;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8877[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GameplayEffectClass;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestroyThreshold;                                  // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifiedDamageForActor_ReturnValue;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8878[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0038(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece");
static_assert(sizeof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece) == 0x000058, "Wrong size on GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, BuildingActor) == 0x000000, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::BuildingActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CheckForHealth) == 0x000008, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CheckForHealth' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, GameplayEffectClass) == 0x000010, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, DestroyThreshold) == 0x000018, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::DestroyThreshold' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_GetModifiedDamageForActor_ReturnValue) == 0x00001C, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_GetModifiedDamageForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_GetHealth_ReturnValue) == 0x000020, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_Less_FloatFloat_ReturnValue) == 0x000024, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000030, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_MakeEffectContext_ReturnValue) == 0x000038, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000050, "Member 'GolfCartVehicleSK_C_DestroyOrDamageBuildingPiece::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.SendHeadlightValueToMaterials
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_SendHeadlightValueToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_SendHeadlightValueToMaterials) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_SendHeadlightValueToMaterials");
static_assert(sizeof(GolfCartVehicleSK_C_SendHeadlightValueToMaterials) == 0x000004, "Wrong size on GolfCartVehicleSK_C_SendHeadlightValueToMaterials");
static_assert(offsetof(GolfCartVehicleSK_C_SendHeadlightValueToMaterials, ParameterValue) == 0x000000, "Member 'GolfCartVehicleSK_C_SendHeadlightValueToMaterials::ParameterValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.SendDamageValueToMaterials
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_SendDamageValueToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_SendDamageValueToMaterials) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_SendDamageValueToMaterials");
static_assert(sizeof(GolfCartVehicleSK_C_SendDamageValueToMaterials) == 0x000004, "Wrong size on GolfCartVehicleSK_C_SendDamageValueToMaterials");
static_assert(offsetof(GolfCartVehicleSK_C_SendDamageValueToMaterials, ParameterValue) == 0x000000, "Member 'GolfCartVehicleSK_C_SendDamageValueToMaterials::ParameterValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.SendBoostTimeToMaterials
// 0x0004 (0x0004 - 0x0000)
struct GolfCartVehicleSK_C_SendBoostTimeToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_SendBoostTimeToMaterials) == 0x000004, "Wrong alignment on GolfCartVehicleSK_C_SendBoostTimeToMaterials");
static_assert(sizeof(GolfCartVehicleSK_C_SendBoostTimeToMaterials) == 0x000004, "Wrong size on GolfCartVehicleSK_C_SendBoostTimeToMaterials");
static_assert(offsetof(GolfCartVehicleSK_C_SendBoostTimeToMaterials, ParameterValue) == 0x000000, "Member 'GolfCartVehicleSK_C_SendBoostTimeToMaterials::ParameterValue' has a wrong offset!");

// Function GolfCartVehicleSK.GolfCartVehicleSK_C.GetIconPlacement
// 0x0038 (0x0038 - 0x0000)
struct GolfCartVehicleSK_C_GetIconPlacement final
{
public:
	const class AActor*                           SelfActor;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           ViewingActor;                                      // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GolfCartVehicleSK_C_GetIconPlacement) == 0x000008, "Wrong alignment on GolfCartVehicleSK_C_GetIconPlacement");
static_assert(sizeof(GolfCartVehicleSK_C_GetIconPlacement) == 0x000038, "Wrong size on GolfCartVehicleSK_C_GetIconPlacement");
static_assert(offsetof(GolfCartVehicleSK_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'GolfCartVehicleSK_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_GetIconPlacement, ViewingActor) == 0x000008, "Member 'GolfCartVehicleSK_C_GetIconPlacement::ViewingActor' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_GetIconPlacement, OutLocation) == 0x000010, "Member 'GolfCartVehicleSK_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_GetIconPlacement, OutExtents) == 0x00001C, "Member 'GolfCartVehicleSK_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(GolfCartVehicleSK_C_GetIconPlacement, CallFunc_GetCenterOfMass_ReturnValue) == 0x000028, "Member 'GolfCartVehicleSK_C_GetIconPlacement::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");

}

