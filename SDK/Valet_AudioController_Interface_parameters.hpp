#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Valet_AudioController_Interface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnCacheReferences
// 0x0008 (0x0008 - 0x0000)
struct Valet_AudioController_Interface_C_OnCacheReferences final
{
public:
	class AFortDagwoodVehicle*                    Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnCacheReferences) == 0x000008, "Wrong alignment on Valet_AudioController_Interface_C_OnCacheReferences");
static_assert(sizeof(Valet_AudioController_Interface_C_OnCacheReferences) == 0x000008, "Wrong size on Valet_AudioController_Interface_C_OnCacheReferences");
static_assert(offsetof(Valet_AudioController_Interface_C_OnCacheReferences, Vehicle) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnCacheReferences::Vehicle' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnBodyCollision
// 0x0020 (0x0020 - 0x0000)
struct Valet_AudioController_Interface_C_OnBodyCollision final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilteredHit;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_546A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Magnitude;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnBodyCollision) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnBodyCollision");
static_assert(sizeof(Valet_AudioController_Interface_C_OnBodyCollision) == 0x000020, "Wrong size on Valet_AudioController_Interface_C_OnBodyCollision");
static_assert(offsetof(Valet_AudioController_Interface_C_OnBodyCollision, HitLocation) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnBodyCollision::HitLocation' has a wrong offset!");
static_assert(offsetof(Valet_AudioController_Interface_C_OnBodyCollision, NormalImpulse) == 0x00000C, "Member 'Valet_AudioController_Interface_C_OnBodyCollision::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Valet_AudioController_Interface_C_OnBodyCollision, FilteredHit) == 0x000018, "Member 'Valet_AudioController_Interface_C_OnBodyCollision::FilteredHit' has a wrong offset!");
static_assert(offsetof(Valet_AudioController_Interface_C_OnBodyCollision, Magnitude) == 0x00001C, "Member 'Valet_AudioController_Interface_C_OnBodyCollision::Magnitude' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnSuspensionCollision
// 0x0008 (0x0008 - 0x0000)
struct Valet_AudioController_Interface_C_OnSuspensionCollision final
{
public:
	bool                                          FilteredHit;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_546B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Magnitude;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnSuspensionCollision) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnSuspensionCollision");
static_assert(sizeof(Valet_AudioController_Interface_C_OnSuspensionCollision) == 0x000008, "Wrong size on Valet_AudioController_Interface_C_OnSuspensionCollision");
static_assert(offsetof(Valet_AudioController_Interface_C_OnSuspensionCollision, FilteredHit) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnSuspensionCollision::FilteredHit' has a wrong offset!");
static_assert(offsetof(Valet_AudioController_Interface_C_OnSuspensionCollision, Magnitude) == 0x000004, "Member 'Valet_AudioController_Interface_C_OnSuspensionCollision::Magnitude' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnHandbrake
// 0x0001 (0x0001 - 0x0000)
struct Valet_AudioController_Interface_C_OnHandbrake final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnHandbrake) == 0x000001, "Wrong alignment on Valet_AudioController_Interface_C_OnHandbrake");
static_assert(sizeof(Valet_AudioController_Interface_C_OnHandbrake) == 0x000001, "Wrong size on Valet_AudioController_Interface_C_OnHandbrake");
static_assert(offsetof(Valet_AudioController_Interface_C_OnHandbrake, Start) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnHandbrake::Start' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnDriverStateChanged
// 0x0001 (0x0001 - 0x0000)
struct Valet_AudioController_Interface_C_OnDriverStateChanged final
{
public:
	bool                                          Enter;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnDriverStateChanged) == 0x000001, "Wrong alignment on Valet_AudioController_Interface_C_OnDriverStateChanged");
static_assert(sizeof(Valet_AudioController_Interface_C_OnDriverStateChanged) == 0x000001, "Wrong size on Valet_AudioController_Interface_C_OnDriverStateChanged");
static_assert(offsetof(Valet_AudioController_Interface_C_OnDriverStateChanged, Enter) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnDriverStateChanged::Enter' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnWaterStateChanged
// 0x0001 (0x0001 - 0x0000)
struct Valet_AudioController_Interface_C_OnWaterStateChanged final
{
public:
	bool                                          Is_Entering_Water;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnWaterStateChanged) == 0x000001, "Wrong alignment on Valet_AudioController_Interface_C_OnWaterStateChanged");
static_assert(sizeof(Valet_AudioController_Interface_C_OnWaterStateChanged) == 0x000001, "Wrong size on Valet_AudioController_Interface_C_OnWaterStateChanged");
static_assert(offsetof(Valet_AudioController_Interface_C_OnWaterStateChanged, Is_Entering_Water) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnWaterStateChanged::Is_Entering_Water' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnWindowBreak
// 0x0008 (0x0008 - 0x0000)
struct Valet_AudioController_Interface_C_OnWindowBreak final
{
public:
	class FName                                   Bone_Name;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnWindowBreak) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnWindowBreak");
static_assert(sizeof(Valet_AudioController_Interface_C_OnWindowBreak) == 0x000008, "Wrong size on Valet_AudioController_Interface_C_OnWindowBreak");
static_assert(offsetof(Valet_AudioController_Interface_C_OnWindowBreak, Bone_Name) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnWindowBreak::Bone_Name' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnTirePop
// 0x0008 (0x0008 - 0x0000)
struct Valet_AudioController_Interface_C_OnTirePop final
{
public:
	class FName                                   Bone_Name;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnTirePop) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnTirePop");
static_assert(sizeof(Valet_AudioController_Interface_C_OnTirePop) == 0x000008, "Wrong size on Valet_AudioController_Interface_C_OnTirePop");
static_assert(offsetof(Valet_AudioController_Interface_C_OnTirePop, Bone_Name) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnTirePop::Bone_Name' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnDamage
// 0x0004 (0x0004 - 0x0000)
struct Valet_AudioController_Interface_C_OnDamage final
{
public:
	float                                         Damage_Value;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnDamage) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnDamage");
static_assert(sizeof(Valet_AudioController_Interface_C_OnDamage) == 0x000004, "Wrong size on Valet_AudioController_Interface_C_OnDamage");
static_assert(offsetof(Valet_AudioController_Interface_C_OnDamage, Damage_Value) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnDamage::Damage_Value' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnSleepStateChange
// 0x0001 (0x0001 - 0x0000)
struct Valet_AudioController_Interface_C_OnSleepStateChange final
{
public:
	bool                                          Awake;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnSleepStateChange) == 0x000001, "Wrong alignment on Valet_AudioController_Interface_C_OnSleepStateChange");
static_assert(sizeof(Valet_AudioController_Interface_C_OnSleepStateChange) == 0x000001, "Wrong size on Valet_AudioController_Interface_C_OnSleepStateChange");
static_assert(offsetof(Valet_AudioController_Interface_C_OnSleepStateChange, Awake) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnSleepStateChange::Awake' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnHitPlayer
// 0x000C (0x000C - 0x0000)
struct Valet_AudioController_Interface_C_OnHitPlayer final
{
public:
	struct FVector                                ImpactPoint;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnHitPlayer) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnHitPlayer");
static_assert(sizeof(Valet_AudioController_Interface_C_OnHitPlayer) == 0x00000C, "Wrong size on Valet_AudioController_Interface_C_OnHitPlayer");
static_assert(offsetof(Valet_AudioController_Interface_C_OnHitPlayer, ImpactPoint) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnHitPlayer::ImpactPoint' has a wrong offset!");

// Function Valet_AudioController_Interface.Valet_AudioController_Interface_C.OnHitBuilding
// 0x000C (0x000C - 0x0000)
struct Valet_AudioController_Interface_C_OnHitBuilding final
{
public:
	struct FVector                                Impact_Point;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Valet_AudioController_Interface_C_OnHitBuilding) == 0x000004, "Wrong alignment on Valet_AudioController_Interface_C_OnHitBuilding");
static_assert(sizeof(Valet_AudioController_Interface_C_OnHitBuilding) == 0x00000C, "Wrong size on Valet_AudioController_Interface_C_OnHitBuilding");
static_assert(offsetof(Valet_AudioController_Interface_C_OnHitBuilding, Impact_Point) == 0x000000, "Member 'Valet_AudioController_Interface_C_OnHitBuilding::Impact_Point' has a wrong offset!");

}

