#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSupplyDrop_Gibson

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AthenaSupplyDrop_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AthenaSupplyDrop_Gibson.AthenaSupplyDrop_Gibson_C
// 0x00C8 (0x0B28 - 0x0A60)
class AAthenaSupplyDrop_Gibson_C final : public AAthenaSupplyDrop_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AthenaSupplyDrop_Gibson_C;          // 0x0A60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FScalableFloat                         FallHeight_Gibson;                                 // 0x0A68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FallSpeed_Gibson;                                  // 0x0A88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FallHeightMinOffset_Gibson;                        // 0x0AA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FallHeightMaxOffset_Gibson;                        // 0x0AC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                WorldUp;                                           // 0x0AE8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0AF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnedDoors_MinRotation;                          // 0x0B00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnedDoors_MaxRotation;                          // 0x0B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnedDoors_MinDistance;                          // 0x0B08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnedDoors_MaxDistance;                          // 0x0B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Trail_C*                             Trail;                                             // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Gibson_BrokenDoors_C*>       DoorsGroup;                                        // 0x0B18(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AthenaSupplyDrop_Gibson(int32 EntryPoint);
	void HandleProjectileMovementStop(const struct FHitResult& ImpactResult);
	void Landed(const struct FVector& Normal, const struct FVector& ImpactPoint, const struct FVector& Location);
	void ReceiveBeginPlay();
	void InitFallHeightAndSpeed();
	void SpawnBrokenDoors();
	void UpdateReticleLocation();
	void PlayLandingFX(bool bSpawnVFX);
	void OpenSupplyDrop();
	void PlayLandedFX();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaSupplyDrop_Gibson_C">();
	}
	static class AAthenaSupplyDrop_Gibson_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthenaSupplyDrop_Gibson_C>();
	}
};
static_assert(alignof(AAthenaSupplyDrop_Gibson_C) == 0x000008, "Wrong alignment on AAthenaSupplyDrop_Gibson_C");
static_assert(sizeof(AAthenaSupplyDrop_Gibson_C) == 0x000B28, "Wrong size on AAthenaSupplyDrop_Gibson_C");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, UberGraphFrame_AthenaSupplyDrop_Gibson_C) == 0x000A60, "Member 'AAthenaSupplyDrop_Gibson_C::UberGraphFrame_AthenaSupplyDrop_Gibson_C' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, FallHeight_Gibson) == 0x000A68, "Member 'AAthenaSupplyDrop_Gibson_C::FallHeight_Gibson' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, FallSpeed_Gibson) == 0x000A88, "Member 'AAthenaSupplyDrop_Gibson_C::FallSpeed_Gibson' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, FallHeightMinOffset_Gibson) == 0x000AA8, "Member 'AAthenaSupplyDrop_Gibson_C::FallHeightMinOffset_Gibson' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, FallHeightMaxOffset_Gibson) == 0x000AC8, "Member 'AAthenaSupplyDrop_Gibson_C::FallHeightMaxOffset_Gibson' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, WorldUp) == 0x000AE8, "Member 'AAthenaSupplyDrop_Gibson_C::WorldUp' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, SpawnLocation) == 0x000AF4, "Member 'AAthenaSupplyDrop_Gibson_C::SpawnLocation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, SpawnedDoors_MinRotation) == 0x000B00, "Member 'AAthenaSupplyDrop_Gibson_C::SpawnedDoors_MinRotation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, SpawnedDoors_MaxRotation) == 0x000B04, "Member 'AAthenaSupplyDrop_Gibson_C::SpawnedDoors_MaxRotation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, SpawnedDoors_MinDistance) == 0x000B08, "Member 'AAthenaSupplyDrop_Gibson_C::SpawnedDoors_MinDistance' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, SpawnedDoors_MaxDistance) == 0x000B0C, "Member 'AAthenaSupplyDrop_Gibson_C::SpawnedDoors_MaxDistance' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, Trail) == 0x000B10, "Member 'AAthenaSupplyDrop_Gibson_C::Trail' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_Gibson_C, DoorsGroup) == 0x000B18, "Member 'AAthenaSupplyDrop_Gibson_C::DoorsGroup' has a wrong offset!");

}

