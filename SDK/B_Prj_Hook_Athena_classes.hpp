#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Hook_Athena

#include "Basic.hpp"

#include "ToyAngleSelectorInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Hook_Athena.B_Prj_Hook_Athena_C
// 0x02A0 (0x0BC8 - 0x0928)
class AB_Prj_Hook_Athena_C : public AFortAttachableProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0928(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ProjectileMesh;                                    // 0x0938(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              Target;                                            // 0x0940(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HookStopped;                                       // 0x0950(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD7[0x3];                                     // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0954(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AirControl;                                        // 0x0960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD8[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Stick;                                       // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_StuckToPlayer;                               // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromInstigator;                            // 0x0978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD9[0x4];                                     // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Water;                                       // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TravelSound;                                       // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FToyAngleSelectorInfo>          LaunchAngleVariations;                             // 0x0990(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AB_Hookgun_Athena_C*                    Weapon_Actor;                                      // 0x09A0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_HookGunRope_C*                       Rope;                                              // 0x09A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreLaunchVelocity;                                 // 0x09B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireAImPitch;                                      // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DownPitchMin;                                      // 0x09C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DownPitchMax;                                      // 0x09C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalZ;                                       // 0x09C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BDA[0x4];                                     // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_YankBack;                                    // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_RopeDestroy;                                 // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RopeActiveTag;                                     // 0x09E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BlockIncomingPickups;                              // 0x09E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x09F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BDB[0x4];                                     // 0x09FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Stick2D;                                     // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset_Distance_from_Physics_Mesh;                 // 0x0A08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetDistanceFromBone;                            // 0x0A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 StruckActor;                                       // 0x0A10(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0A18(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Launchpad;                                         // 0x0A24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDC[0x3];                                     // 0x0A25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                VehicleVelocity;                                   // 0x0A28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsumesAmmo;                                      // 0x0A34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInHoverboard;                                     // 0x0A35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDD[0x2];                                     // 0x0A36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifespan_on_Hit;                                   // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GliderGrappler;                                    // 0x0A3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDE[0x3];                                     // 0x0A3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_VehicleIgnorePull;                              // 0x0A40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_RopeActive;                                     // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Returned;                                    // 0x0A68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_GrappleHit;                                  // 0x0A70(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_QuestTag;                                        // 0x0A78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           Anim_GrappleHoverboard;                            // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Anim_Grapple;                                      // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_WaterImpact;                                    // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Reattach;                                       // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArcGravityOverride;                                // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesCrouchCheck;                                   // 0x0ABC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasMinUpwardLaunchVelocity;                        // 0x0ABD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BDF[0x2];                                     // 0x0ABE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinUpwardLaunchVelocity;                           // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE0[0x4];                                     // 0x0AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LenseEffect;                                       // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CamShake_Grapple;                                  // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0AD8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BE1[0x4];                                     // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_PlayerArc;                                     // 0x0AE8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_VehicleArc;                                    // 0x0B08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_JackleArc;                                     // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_VehicleForceMultiplier;                        // 0x0B48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_JackleForceMultiplier;                         // 0x0B68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Speed;                                             // 0x0B88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LifeSpan;                                          // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Hook_Athena(int32 EntryPoint);
	void Grapple();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* Param_WaterInteractionComponent, bool bIsFirstBody);
	void LaunchCheck();
	void GrappleVehicle();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& Param_HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void WeaponCheck();
	void Travel(const struct FVector& Param_HitLocation);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void OnCompleted_93AE81F64BBD13E0E55C399F05E160E3(class FName NotifyName);
	void OnBlendOut_93AE81F64BBD13E0E55C399F05E160E3(class FName NotifyName);
	void OnInterrupted_93AE81F64BBD13E0E55C399F05E160E3(class FName NotifyName);
	void OnNotifyBegin_93AE81F64BBD13E0E55C399F05E160E3(class FName NotifyName);
	void OnNotifyEnd_93AE81F64BBD13E0E55C399F05E160E3(class FName NotifyName);
	void OnCompleted_46D1167E4A05BB9A8529A6981DFAD6A4(class FName NotifyName);
	void OnBlendOut_46D1167E4A05BB9A8529A6981DFAD6A4(class FName NotifyName);
	void OnInterrupted_46D1167E4A05BB9A8529A6981DFAD6A4(class FName NotifyName);
	void OnNotifyBegin_46D1167E4A05BB9A8529A6981DFAD6A4(class FName NotifyName);
	void OnNotifyEnd_46D1167E4A05BB9A8529A6981DFAD6A4(class FName NotifyName);
	void OnCompleted_0A1B172F45DE2A614770489FAD619748(class FName NotifyName);
	void OnBlendOut_0A1B172F45DE2A614770489FAD619748(class FName NotifyName);
	void OnInterrupted_0A1B172F45DE2A614770489FAD619748(class FName NotifyName);
	void OnNotifyBegin_0A1B172F45DE2A614770489FAD619748(class FName NotifyName);
	void OnNotifyEnd_0A1B172F45DE2A614770489FAD619748(class FName NotifyName);
	void UserConstructionScript();
	void PlayStickSounds(const struct FVector& Location, class AActor* HitActor);
	void HandleHits(const struct FHitResult& Hit, class AActor** Param_Target);
	void IncapacitateTarget();
	void CalculateYankForce();
	void OnRep_Target();
	void OnRep_HookStopped();
	void PickGrappleMontage(float PitchAngle, bool InHoverboard, class FName* SectionName);
	void HandleSticks(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleStuckVehicle(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleStuckBuilding(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleStuckSupplyDrop(class UObject* Object, class UPrimitiveComponent* Component);
	void OnRep_StruckActor();
	void HandleStuckProjectiles(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleMomentum();
	void OnRep_Momentum();
	void HandleLaunch(bool* JumpPadding_);
	void JackalCheck();
	void SpawnRope(class AFortPlayerPawn* Param_PlayerPawn, class AB_HookGunRope_C** RopeSpawned);
	void GiveQuestCredit();
	struct FVector MomentumCheck(const struct FVector& A, const struct FVector& A2);
	float GetVehicleArc();
	float GetVehicleLaunchMult();

	void PickGrappleMontageSection(float PitchAngle, class FName* SectionName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Hook_Athena_C">();
	}
	static class AB_Prj_Hook_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Hook_Athena_C>();
	}
};
static_assert(alignof(AB_Prj_Hook_Athena_C) == 0x000008, "Wrong alignment on AB_Prj_Hook_Athena_C");
static_assert(sizeof(AB_Prj_Hook_Athena_C) == 0x000BC8, "Wrong size on AB_Prj_Hook_Athena_C");
static_assert(offsetof(AB_Prj_Hook_Athena_C, UberGraphFrame) == 0x000928, "Member 'AB_Prj_Hook_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, ParticleSystem) == 0x000930, "Member 'AB_Prj_Hook_Athena_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, ProjectileMesh) == 0x000938, "Member 'AB_Prj_Hook_Athena_C::ProjectileMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Target) == 0x000940, "Member 'AB_Prj_Hook_Athena_C::Target' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, PlayerPawn) == 0x000948, "Member 'AB_Prj_Hook_Athena_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, HookStopped) == 0x000950, "Member 'AB_Prj_Hook_Athena_C::HookStopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, HitLocation) == 0x000954, "Member 'AB_Prj_Hook_Athena_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, AirControl) == 0x000960, "Member 'AB_Prj_Hook_Athena_C::AirControl' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_Stick) == 0x000968, "Member 'AB_Prj_Hook_Athena_C::Sound_Stick' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_StuckToPlayer) == 0x000970, "Member 'AB_Prj_Hook_Athena_C::Sound_StuckToPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, DistanceFromInstigator) == 0x000978, "Member 'AB_Prj_Hook_Athena_C::DistanceFromInstigator' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_Water) == 0x000980, "Member 'AB_Prj_Hook_Athena_C::Sound_Water' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, TravelSound) == 0x000988, "Member 'AB_Prj_Hook_Athena_C::TravelSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, LaunchAngleVariations) == 0x000990, "Member 'AB_Prj_Hook_Athena_C::LaunchAngleVariations' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Weapon_Actor) == 0x0009A0, "Member 'AB_Prj_Hook_Athena_C::Weapon_Actor' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Rope) == 0x0009A8, "Member 'AB_Prj_Hook_Athena_C::Rope' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, PreLaunchVelocity) == 0x0009B0, "Member 'AB_Prj_Hook_Athena_C::PreLaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, FireAImPitch) == 0x0009BC, "Member 'AB_Prj_Hook_Athena_C::FireAImPitch' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, DownPitchMin) == 0x0009C0, "Member 'AB_Prj_Hook_Athena_C::DownPitchMin' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, DownPitchMax) == 0x0009C4, "Member 'AB_Prj_Hook_Athena_C::DownPitchMax' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, AdditionalZ) == 0x0009C8, "Member 'AB_Prj_Hook_Athena_C::AdditionalZ' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_YankBack) == 0x0009D0, "Member 'AB_Prj_Hook_Athena_C::Sound_YankBack' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_RopeDestroy) == 0x0009D8, "Member 'AB_Prj_Hook_Athena_C::Sound_RopeDestroy' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, RopeActiveTag) == 0x0009E0, "Member 'AB_Prj_Hook_Athena_C::RopeActiveTag' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, BlockIncomingPickups) == 0x0009E8, "Member 'AB_Prj_Hook_Athena_C::BlockIncomingPickups' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, ImpactNormal) == 0x0009F0, "Member 'AB_Prj_Hook_Athena_C::ImpactNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Sound_Stick2D) == 0x000A00, "Member 'AB_Prj_Hook_Athena_C::Sound_Stick2D' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Offset_Distance_from_Physics_Mesh) == 0x000A08, "Member 'AB_Prj_Hook_Athena_C::Offset_Distance_from_Physics_Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, OffsetDistanceFromBone) == 0x000A0C, "Member 'AB_Prj_Hook_Athena_C::OffsetDistanceFromBone' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, StruckActor) == 0x000A10, "Member 'AB_Prj_Hook_Athena_C::StruckActor' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Momentum) == 0x000A18, "Member 'AB_Prj_Hook_Athena_C::Momentum' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Launchpad) == 0x000A24, "Member 'AB_Prj_Hook_Athena_C::Launchpad' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, VehicleVelocity) == 0x000A28, "Member 'AB_Prj_Hook_Athena_C::VehicleVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, ConsumesAmmo) == 0x000A34, "Member 'AB_Prj_Hook_Athena_C::ConsumesAmmo' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, bInHoverboard) == 0x000A35, "Member 'AB_Prj_Hook_Athena_C::bInHoverboard' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Lifespan_on_Hit) == 0x000A38, "Member 'AB_Prj_Hook_Athena_C::Lifespan_on_Hit' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, GliderGrappler) == 0x000A3C, "Member 'AB_Prj_Hook_Athena_C::GliderGrappler' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, TC_VehicleIgnorePull) == 0x000A40, "Member 'AB_Prj_Hook_Athena_C::TC_VehicleIgnorePull' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, GE_RopeActive) == 0x000A60, "Member 'AB_Prj_Hook_Athena_C::GE_RopeActive' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Event_Returned) == 0x000A68, "Member 'AB_Prj_Hook_Athena_C::Event_Returned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Event_GrappleHit) == 0x000A70, "Member 'AB_Prj_Hook_Athena_C::Event_GrappleHit' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, T_QuestTag) == 0x000A78, "Member 'AB_Prj_Hook_Athena_C::T_QuestTag' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Anim_GrappleHoverboard) == 0x000A98, "Member 'AB_Prj_Hook_Athena_C::Anim_GrappleHoverboard' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Anim_Grapple) == 0x000AA0, "Member 'AB_Prj_Hook_Athena_C::Anim_Grapple' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, FX_WaterImpact) == 0x000AA8, "Member 'AB_Prj_Hook_Athena_C::FX_WaterImpact' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, FX_Reattach) == 0x000AB0, "Member 'AB_Prj_Hook_Athena_C::FX_Reattach' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, ArcGravityOverride) == 0x000AB8, "Member 'AB_Prj_Hook_Athena_C::ArcGravityOverride' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, DoesCrouchCheck) == 0x000ABC, "Member 'AB_Prj_Hook_Athena_C::DoesCrouchCheck' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, HasMinUpwardLaunchVelocity) == 0x000ABD, "Member 'AB_Prj_Hook_Athena_C::HasMinUpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, MinUpwardLaunchVelocity) == 0x000AC0, "Member 'AB_Prj_Hook_Athena_C::MinUpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, LenseEffect) == 0x000AC8, "Member 'AB_Prj_Hook_Athena_C::LenseEffect' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, CamShake_Grapple) == 0x000AD0, "Member 'AB_Prj_Hook_Athena_C::CamShake_Grapple' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, LaunchVelocity) == 0x000AD8, "Member 'AB_Prj_Hook_Athena_C::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Row_PlayerArc) == 0x000AE8, "Member 'AB_Prj_Hook_Athena_C::Row_PlayerArc' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Row_VehicleArc) == 0x000B08, "Member 'AB_Prj_Hook_Athena_C::Row_VehicleArc' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Row_JackleArc) == 0x000B28, "Member 'AB_Prj_Hook_Athena_C::Row_JackleArc' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Row_VehicleForceMultiplier) == 0x000B48, "Member 'AB_Prj_Hook_Athena_C::Row_VehicleForceMultiplier' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Row_JackleForceMultiplier) == 0x000B68, "Member 'AB_Prj_Hook_Athena_C::Row_JackleForceMultiplier' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, Speed) == 0x000B88, "Member 'AB_Prj_Hook_Athena_C::Speed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Hook_Athena_C, LifeSpan) == 0x000BA8, "Member 'AB_Prj_Hook_Athena_C::LifeSpan' has a wrong offset!");

}

