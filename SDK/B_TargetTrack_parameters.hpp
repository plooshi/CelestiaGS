#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TargetTrack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_TargetTrack.B_TargetTrack_C.ExecuteUbergraph_B_TargetTrack
// 0x01F0 (0x01F0 - 0x0000)
struct B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ShootingTarget_Master_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculatePlayRate_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0B[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0D[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0E[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_2;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B0F[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_3;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B10[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B11[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00C0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_2;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_3;        // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_4;        // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B12[0x1];                                     // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_5;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B13[0x5];                                     // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            CallFunc_GetPropertyOverrides_CurrentOptions;      // 0x0168(0x0050)()
	bool                                          CallFunc_GetPropertyOverrides_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPropertyOverrides_ReturnValue;         // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B14[0x1];                                     // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B15[0x1];                                     // 0x01DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack) == 0x000008, "Wrong alignment on B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack");
static_assert(sizeof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack) == 0x0001F0, "Wrong size on B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, EntryPoint) == 0x000000, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000018, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_FinishSpawningActor_ReturnValue) == 0x000020, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_CalculatePlayRate_ReturnValue) == 0x000028, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_CalculatePlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00002C, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_AsStatic_Mesh) == 0x000038, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_SetStaticMesh_ReturnValue) == 0x000041, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000043, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, Temp_object_Variable) == 0x000048, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000050, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_HasAuthority_ReturnValue_1) == 0x000059, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005A, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CustomEvent_Loaded) == 0x000060, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000068, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, Temp_object_Variable_1) == 0x000070, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000078, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_AsStatic_Mesh_2) == 0x000080, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_AsStatic_Mesh_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_AsStatic_Mesh_3) == 0x000090, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_AsStatic_Mesh_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000099, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_SetStaticMesh_ReturnValue_3) == 0x00009A, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValid_ReturnValue_1) == 0x00009B, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x00009C, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000A0, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_OtherActor) == 0x0000A8, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_OtherComp) == 0x0000B0, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000B8, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000BC, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_ComponentBoundEvent_SweepResult) == 0x0000C0, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00014C, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x000150, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue_2) == 0x000151, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BooleanAND_ReturnValue_1) == 0x000152, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BooleanAND_ReturnValue_2) == 0x000153, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue_3) == 0x000154, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BooleanAND_ReturnValue_3) == 0x000155, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue_4) == 0x000156, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CustomEvent_Loaded_1) == 0x000158, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_BoolBool_ReturnValue_5) == 0x000160, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_BoolBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_BooleanAND_ReturnValue_4) == 0x000161, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_Event_EndPlayReason) == 0x000162, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_GetPropertyOverrides_CurrentOptions) == 0x000168, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_GetPropertyOverrides_CurrentOptions' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_GetPropertyOverrides_ReturnValue) == 0x0001B8, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_GetPropertyOverrides_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValid_ReturnValue_2) == 0x0001B9, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_SetPropertyOverrides_ReturnValue) == 0x0001BA, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_SetPropertyOverrides_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001BC, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001CC, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValid_ReturnValue_3) == 0x0001DC, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001DD, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, CallFunc_IsValid_ReturnValue_4) == 0x0001DE, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E0, "Member 'B_TargetTrack_C_ExecuteUbergraph_B_TargetTrack::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_TargetTrack_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_TargetTrack_C_ReceiveEndPlay");
static_assert(sizeof(B_TargetTrack_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_TargetTrack_C_ReceiveEndPlay");
static_assert(offsetof(B_TargetTrack_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_TargetTrack_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B16[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_TargetTrack_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.OnLoaded_3C01053C48BCC07B689033B6DB9706E0
// 0x0008 (0x0008 - 0x0000)
struct B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0) == 0x000008, "Wrong alignment on B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0");
static_assert(sizeof(B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0) == 0x000008, "Wrong size on B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0");
static_assert(offsetof(B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0, Loaded) == 0x000000, "Member 'B_TargetTrack_C_OnLoaded_3C01053C48BCC07B689033B6DB9706E0::Loaded' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8
// 0x0008 (0x0008 - 0x0000)
struct B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8) == 0x000008, "Wrong alignment on B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8");
static_assert(sizeof(B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8) == 0x000008, "Wrong size on B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8");
static_assert(offsetof(B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8, Loaded) == 0x000000, "Member 'B_TargetTrack_C_OnLoaded_27B7684A423E01CDEC2BFC9631F88BF8::Loaded' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.GetFinalDestinationOfTarget
// 0x001C (0x001C - 0x0000)
struct B_TargetTrack_C_GetFinalDestinationOfTarget final
{
public:
	struct FVector                                Destination;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_GetFinalDestinationOfTarget) == 0x000004, "Wrong alignment on B_TargetTrack_C_GetFinalDestinationOfTarget");
static_assert(sizeof(B_TargetTrack_C_GetFinalDestinationOfTarget) == 0x00001C, "Wrong size on B_TargetTrack_C_GetFinalDestinationOfTarget");
static_assert(offsetof(B_TargetTrack_C_GetFinalDestinationOfTarget, Destination) == 0x000000, "Member 'B_TargetTrack_C_GetFinalDestinationOfTarget::Destination' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_GetFinalDestinationOfTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'B_TargetTrack_C_GetFinalDestinationOfTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_GetFinalDestinationOfTarget, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'B_TargetTrack_C_GetFinalDestinationOfTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.CalculatePlayRate
// 0x000C (0x000C - 0x0000)
struct B_TargetTrack_C_CalculatePlayRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_CalculatePlayRate) == 0x000004, "Wrong alignment on B_TargetTrack_C_CalculatePlayRate");
static_assert(sizeof(B_TargetTrack_C_CalculatePlayRate) == 0x00000C, "Wrong size on B_TargetTrack_C_CalculatePlayRate");
static_assert(offsetof(B_TargetTrack_C_CalculatePlayRate, ReturnValue) == 0x000000, "Member 'B_TargetTrack_C_CalculatePlayRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_CalculatePlayRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'B_TargetTrack_C_CalculatePlayRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_CalculatePlayRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'B_TargetTrack_C_CalculatePlayRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.SetTargetRotationAndBaseMesh
// 0x0238 (0x0238 - 0x0000)
struct B_TargetTrack_C_SetTargetRotationAndBaseMesh final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0000(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B17[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0090(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x011C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x01A8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_TargetTrack_C_SetTargetRotationAndBaseMesh) == 0x000004, "Wrong alignment on B_TargetTrack_C_SetTargetRotationAndBaseMesh");
static_assert(sizeof(B_TargetTrack_C_SetTargetRotationAndBaseMesh) == 0x000238, "Wrong size on B_TargetTrack_C_SetTargetRotationAndBaseMesh");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000000, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000090, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x00011C, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x0001A8, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetTargetRotationAndBaseMesh, K2Node_SwitchInteger_CmpSuccess) == 0x000234, "Member 'B_TargetTrack_C_SetTargetRotationAndBaseMesh::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.SetTrackLength
// 0x000C (0x000C - 0x0000)
struct B_TargetTrack_C_SetTrackLength final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_SetTrackLength) == 0x000004, "Wrong alignment on B_TargetTrack_C_SetTrackLength");
static_assert(sizeof(B_TargetTrack_C_SetTrackLength) == 0x00000C, "Wrong size on B_TargetTrack_C_SetTrackLength");
static_assert(offsetof(B_TargetTrack_C_SetTrackLength, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'B_TargetTrack_C_SetTrackLength::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.UpdateLerpedPosition
// 0x00A8 (0x00A8 - 0x0000)
struct B_TargetTrack_C_UpdateLerpedPosition final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFinalDestinationOfTarget_Destination;  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x001C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_TargetTrack_C_UpdateLerpedPosition) == 0x000004, "Wrong alignment on B_TargetTrack_C_UpdateLerpedPosition");
static_assert(sizeof(B_TargetTrack_C_UpdateLerpedPosition) == 0x0000A8, "Wrong size on B_TargetTrack_C_UpdateLerpedPosition");
static_assert(offsetof(B_TargetTrack_C_UpdateLerpedPosition, Alpha) == 0x000000, "Member 'B_TargetTrack_C_UpdateLerpedPosition::Alpha' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_UpdateLerpedPosition, CallFunc_GetFinalDestinationOfTarget_Destination) == 0x000004, "Member 'B_TargetTrack_C_UpdateLerpedPosition::CallFunc_GetFinalDestinationOfTarget_Destination' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_UpdateLerpedPosition, CallFunc_VLerp_ReturnValue) == 0x000010, "Member 'B_TargetTrack_C_UpdateLerpedPosition::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_UpdateLerpedPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00001C, "Member 'B_TargetTrack_C_UpdateLerpedPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.SetMovementState
// 0x0003 (0x0003 - 0x0000)
struct B_TargetTrack_C_SetMovementState final
{
public:
	uint8                                         State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_TargetTrack_C_SetMovementState) == 0x000001, "Wrong alignment on B_TargetTrack_C_SetMovementState");
static_assert(sizeof(B_TargetTrack_C_SetMovementState) == 0x000003, "Wrong size on B_TargetTrack_C_SetMovementState");
static_assert(offsetof(B_TargetTrack_C_SetMovementState, State) == 0x000000, "Member 'B_TargetTrack_C_SetMovementState::State' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetMovementState, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'B_TargetTrack_C_SetMovementState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_SetMovementState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'B_TargetTrack_C_SetMovementState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.OnRep_CurrentMovementState
// 0x0008 (0x0008 - 0x0000)
struct B_TargetTrack_C_OnRep_CurrentMovementState final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_TargetTrack_C_OnRep_CurrentMovementState) == 0x000004, "Wrong alignment on B_TargetTrack_C_OnRep_CurrentMovementState");
static_assert(sizeof(B_TargetTrack_C_OnRep_CurrentMovementState) == 0x000008, "Wrong size on B_TargetTrack_C_OnRep_CurrentMovementState");
static_assert(offsetof(B_TargetTrack_C_OnRep_CurrentMovementState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'B_TargetTrack_C_OnRep_CurrentMovementState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_OnRep_CurrentMovementState, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'B_TargetTrack_C_OnRep_CurrentMovementState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.Set Audio Speed Sound
// 0x000C (0x000C - 0x0000)
struct B_TargetTrack_C_Set_Audio_Speed_Sound final
{
public:
	float                                         Target_Speed;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_TargetTrack_C_Set_Audio_Speed_Sound) == 0x000004, "Wrong alignment on B_TargetTrack_C_Set_Audio_Speed_Sound");
static_assert(sizeof(B_TargetTrack_C_Set_Audio_Speed_Sound) == 0x00000C, "Wrong size on B_TargetTrack_C_Set_Audio_Speed_Sound");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, Target_Speed) == 0x000000, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::Target_Speed' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, CallFunc_Less_FloatFloat_ReturnValue) == 0x000006, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000007, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TargetTrack_C_Set_Audio_Speed_Sound, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'B_TargetTrack_C_Set_Audio_Speed_Sound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.GetCollisionStaticMesh
// 0x0008 (0x0008 - 0x0000)
struct B_TargetTrack_C_GetCollisionStaticMesh final
{
public:
	class UStaticMesh*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_GetCollisionStaticMesh) == 0x000008, "Wrong alignment on B_TargetTrack_C_GetCollisionStaticMesh");
static_assert(sizeof(B_TargetTrack_C_GetCollisionStaticMesh) == 0x000008, "Wrong size on B_TargetTrack_C_GetCollisionStaticMesh");
static_assert(offsetof(B_TargetTrack_C_GetCollisionStaticMesh, ReturnValue) == 0x000000, "Member 'B_TargetTrack_C_GetCollisionStaticMesh::ReturnValue' has a wrong offset!");

// Function B_TargetTrack.B_TargetTrack_C.GetMeshComponents
// 0x0010 (0x0010 - 0x0000)
struct B_TargetTrack_C_GetMeshComponents final
{
public:
	TArray<class UMeshComponent*>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(B_TargetTrack_C_GetMeshComponents) == 0x000008, "Wrong alignment on B_TargetTrack_C_GetMeshComponents");
static_assert(sizeof(B_TargetTrack_C_GetMeshComponents) == 0x000010, "Wrong size on B_TargetTrack_C_GetMeshComponents");
static_assert(offsetof(B_TargetTrack_C_GetMeshComponents, ReturnValue) == 0x000000, "Member 'B_TargetTrack_C_GetMeshComponents::ReturnValue' has a wrong offset!");

}

