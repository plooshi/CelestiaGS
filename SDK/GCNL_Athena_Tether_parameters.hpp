#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_Tether

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.ExecuteUbergraph_GCNL_Athena_Tether
// 0x0450 (0x0450 - 0x0000)
struct GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5174[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5175[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDynamicForceFeedbackAction                   Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5176[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5177[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0048(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents_1;                 // 0x0100(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x0110(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance_1;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0130(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5178[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x01C8(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x0280(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x0290(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x02E0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_5179[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_ComponentBoundEvent_AudioComponent;         // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_ParameterName;          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OneshotIndex;           // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_517A[0x5];                                     // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_517B[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Wildlife_Parent_C*            K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_517C[0x3];                                     // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_517D[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitterCameraLensEffectBase*           CallFunc_AddCameraLensEffect_ReturnValue;          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_517E[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_517F[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    CallFunc_GetCurrentWaterBody_ReturnValue;          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5180[0x2];                                     // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Object;                         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCommonWaterFXParams_ReturnValue;       // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0438(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0448(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether");
static_assert(sizeof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether) == 0x000450, "Wrong size on GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, EntryPoint) == 0x000000, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetForwardVector_ReturnValue) == 0x00000C, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_3) == 0x00001A, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_4) == 0x00001B, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000020, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, Temp_byte_Variable) == 0x000028, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_5) == 0x000029, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_6) == 0x000038, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_MyTarget_1) == 0x000040, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_Parameters_1) == 0x000048, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_ParticleComponents_1) == 0x000100, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_AudioComponents_1) == 0x000110, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_BurstCameraShakeInstance_1) == 0x000120, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_BurstCameraShakeInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_BurstDecalInstance_1) == 0x000128, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_BurstDecalInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000130, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001BC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_7) == 0x0001BD, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_MyTarget) == 0x0001C0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_Parameters) == 0x0001C8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_ParticleComponents) == 0x000280, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_AudioComponents) == 0x000290, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_BurstCameraShakeInstance) == 0x0002A0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_Event_BurstDecalInstance) == 0x0002A8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetForwardVector_ReturnValue_1) == 0x0002B0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetVelocity_ReturnValue) == 0x0002BC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Normal_ReturnValue) == 0x0002C8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Dot_VectorVector_ReturnValue) == 0x0002D4, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_VSize_ReturnValue) == 0x0002D8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_MapRangeClamped_ReturnValue) == 0x0002DC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0002E0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_ComponentBoundEvent_AudioComponent) == 0x000370, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_ComponentBoundEvent_AudioComponent' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_ComponentBoundEvent_ParameterName) == 0x000378, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_ComponentBoundEvent_ParameterName' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_ComponentBoundEvent_OneshotIndex) == 0x000380, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_ComponentBoundEvent_OneshotIndex' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000384, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsLocallyControlled_ReturnValue) == 0x000388, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000389, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00038A, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000390, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetViewTarget_ReturnValue) == 0x000398, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetActorForwardVector_ReturnValue) == 0x0003A0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent) == 0x0003B0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_DynamicCast_bSuccess) == 0x0003B8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0003BC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003C0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_AddCameraLensEffect_ReturnValue) == 0x0003C8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_AddCameraLensEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0003D0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Not_PreBool_ReturnValue) == 0x0003D4, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0003D5, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003D6, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_BooleanOR_ReturnValue) == 0x0003D7, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_BooleanOR_ReturnValue_1) == 0x0003D8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Abs_ReturnValue) == 0x0003DC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_FClamp_ReturnValue_1) == 0x0003E0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003E4, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003E8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Abs_ReturnValue_1) == 0x0003EC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003F0, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0003F4, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003F8, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0003FC, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetVelocity_ReturnValue_1) == 0x000400, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_GetCurrentWaterBody_ReturnValue) == 0x000410, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_GetCurrentWaterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_VSize_ReturnValue_1) == 0x000418, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_IsValid_ReturnValue_8) == 0x00041C, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00041D, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_CustomEvent_Object) == 0x000420, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_CustomEvent_Object' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000428, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_DynamicCast_bSuccess_1) == 0x000430, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000431, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000432, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_SetCommonWaterFXParams_ReturnValue) == 0x000433, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_SetCommonWaterFXParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000434, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_BooleanOR_ReturnValue_2) == 0x000435, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000436, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_BooleanAND_ReturnValue) == 0x000437, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, K2Node_CreateDelegate_OutputDelegate) == 0x000438, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000448, "Member 'GCNL_Athena_Tether_C_ExecuteUbergraph_GCNL_Athena_Tether::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.InitializeTetherGCNL
// 0x0008 (0x0008 - 0x0000)
struct GCNL_Athena_Tether_C_InitializeTetherGCNL final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_InitializeTetherGCNL) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_InitializeTetherGCNL");
static_assert(sizeof(GCNL_Athena_Tether_C_InitializeTetherGCNL) == 0x000008, "Wrong size on GCNL_Athena_Tether_C_InitializeTetherGCNL");
static_assert(offsetof(GCNL_Athena_Tether_C_InitializeTetherGCNL, Object) == 0x000000, "Member 'GCNL_Athena_Tether_C_InitializeTetherGCNL::Object' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OneshotIndex;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature");
static_assert(sizeof(GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature) == 0x000018, "Wrong size on GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature");
static_assert(offsetof(GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature, AudioComponent) == 0x000000, "Member 'GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature::AudioComponent' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature, ParameterName) == 0x000008, "Member 'GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature::ParameterName' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature, OneshotIndex) == 0x000010, "Member 'GCNL_Athena_Tether_C_BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature::OneshotIndex' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.OnRemoval
// 0x00F0 (0x00F0 - 0x0000)
struct GCNL_Athena_Tether_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_OnRemoval) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_OnRemoval");
static_assert(sizeof(GCNL_Athena_Tether_C_OnRemoval) == 0x0000F0, "Wrong size on GCNL_Athena_Tether_C_OnRemoval");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCNL_Athena_Tether_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, Parameters) == 0x000008, "Member 'GCNL_Athena_Tether_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, ParticleComponents) == 0x0000C0, "Member 'GCNL_Athena_Tether_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, AudioComponents) == 0x0000D0, "Member 'GCNL_Athena_Tether_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNL_Athena_Tether_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemoval, BurstDecalInstance) == 0x0000E8, "Member 'GCNL_Athena_Tether_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.OnApplication
// 0x00F0 (0x00F0 - 0x0000)
struct GCNL_Athena_Tether_C_OnApplication final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_OnApplication) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_OnApplication");
static_assert(sizeof(GCNL_Athena_Tether_C_OnApplication) == 0x0000F0, "Wrong size on GCNL_Athena_Tether_C_OnApplication");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, MyTarget) == 0x000000, "Member 'GCNL_Athena_Tether_C_OnApplication::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, Parameters) == 0x000008, "Member 'GCNL_Athena_Tether_C_OnApplication::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, ParticleComponents) == 0x0000C0, "Member 'GCNL_Athena_Tether_C_OnApplication::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, AudioComponents) == 0x0000D0, "Member 'GCNL_Athena_Tether_C_OnApplication::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNL_Athena_Tether_C_OnApplication::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnApplication, BurstDecalInstance) == 0x0000E8, "Member 'GCNL_Athena_Tether_C_OnApplication::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCNL_Athena_Tether_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_ReceiveTick) == 0x000004, "Wrong alignment on GCNL_Athena_Tether_C_ReceiveTick");
static_assert(sizeof(GCNL_Athena_Tether_C_ReceiveTick) == 0x000004, "Wrong size on GCNL_Athena_Tether_C_ReceiveTick");
static_assert(offsetof(GCNL_Athena_Tether_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCNL_Athena_Tether_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.UpdateAudio
// 0x0010 (0x0010 - 0x0000)
struct GCNL_Athena_Tether_C_UpdateAudio final
{
public:
	int32                                         Surface;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Athena_Tether_C_UpdateAudio) == 0x000004, "Wrong alignment on GCNL_Athena_Tether_C_UpdateAudio");
static_assert(sizeof(GCNL_Athena_Tether_C_UpdateAudio) == 0x000010, "Wrong size on GCNL_Athena_Tether_C_UpdateAudio");
static_assert(offsetof(GCNL_Athena_Tether_C_UpdateAudio, Surface) == 0x000000, "Member 'GCNL_Athena_Tether_C_UpdateAudio::Surface' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_UpdateAudio, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'GCNL_Athena_Tether_C_UpdateAudio::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_UpdateAudio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'GCNL_Athena_Tether_C_UpdateAudio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_UpdateAudio, CallFunc_Abs_ReturnValue) == 0x00000C, "Member 'GCNL_Athena_Tether_C_UpdateAudio::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.WhileActive
// 0x00C8 (0x00C8 - 0x0000)
struct GCNL_Athena_Tether_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Athena_Tether_C_WhileActive) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_WhileActive");
static_assert(sizeof(GCNL_Athena_Tether_C_WhileActive) == 0x0000C8, "Wrong size on GCNL_Athena_Tether_C_WhileActive");
static_assert(offsetof(GCNL_Athena_Tether_C_WhileActive, MyTarget) == 0x000000, "Member 'GCNL_Athena_Tether_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_WhileActive, Parameters) == 0x000008, "Member 'GCNL_Athena_Tether_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_WhileActive, ReturnValue) == 0x0000C0, "Member 'GCNL_Athena_Tether_C_WhileActive::ReturnValue' has a wrong offset!");

// Function GCNL_Athena_Tether.GCNL_Athena_Tether_C.OnRemove
// 0x00C8 (0x00C8 - 0x0000)
struct GCNL_Athena_Tether_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Athena_Tether_C_OnRemove) == 0x000008, "Wrong alignment on GCNL_Athena_Tether_C_OnRemove");
static_assert(sizeof(GCNL_Athena_Tether_C_OnRemove) == 0x0000C8, "Wrong size on GCNL_Athena_Tether_C_OnRemove");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemove, MyTarget) == 0x000000, "Member 'GCNL_Athena_Tether_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemove, Parameters) == 0x000008, "Member 'GCNL_Athena_Tether_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCNL_Athena_Tether_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Athena_Tether_C_OnRemove, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0000C1, "Member 'GCNL_Athena_Tether_C_OnRemove::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

}

