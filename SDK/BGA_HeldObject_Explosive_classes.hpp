#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_HeldObject_Explosive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BGA_HeldObject_Parent_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C
// 0x02D0 (0x0C60 - 0x0990)
class ABGA_HeldObject_Explosive_C : public ABGA_HeldObject_Parent_C
{
public:
	uint8                                         Pad_59E1[0x6];                                     // 0x0982(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BGA_HeldObject_Explosive_C;         // 0x0988(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  LastDamageInstigator;                              // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HealthIsZero;                                      // 0x09A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59E2[0x3];                                     // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FireCue;                                           // 0x09A4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldDie;                                        // 0x09AC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_59E3[0x3];                                     // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PreExplodeSound;                                   // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ExplosionCUE;                                      // 0x09B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             On_Fire_Hit_Info;                                  // 0x09C0(0x008C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             Last_Hit;                                          // 0x0A4C(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTag                           Explosion_CUE_Water;                               // 0x0AD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         KnockbackStrength;                                 // 0x0AE0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 CurrentPlayerToLaunch;                             // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_Melee_Damage;                                   // 0x0B08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Min_Duration_TnTina_Fuse;                          // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Max_Duration_TnTina_Fuse;                          // 0x0B48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Min_Duration_Damage_Fuse_;                         // 0x0B68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Max_Duration_Damage_Fuse;                          // 0x0B88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Fire_Plane_Spawn_Offset;                           // 0x0BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Fire_Plane_Trace_Offset;                           // 0x0BAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Fireball_Spawn_Vectors;                            // 0x0BB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FScalableFloat                         SpawnedProjectileMaxSpeed;                         // 0x0BC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SpawnedProjectileMinSpeed;                         // 0x0BE8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ConeHalfAngleInDegrees;                            // 0x0C08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CurieActivated;                                    // 0x0C28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59E4[0x7];                                     // 0x0C29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         FireBallsToSPawn;                                  // 0x0C30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                FireBallSpawnVector1;                              // 0x0C50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_HeldObject_Explosive(int32 EntryPoint);
	void OnCurieElementInteractBegun_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle);
	void OnCurieElementInteract_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle);
	void Set_Damage_Instigator_on_Throw();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_0_OnHeldObjectThrown__DelegateSignature();
	void Explode_and_Die_with_Delay(class AFortPlayerController* Param_LastDamageInstigator);
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectThrownLanded__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_3_OnHeldObjectPlaced__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectDropped__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_1_OnHeldObjectPickedUp__DelegateSignature();
	void ReceiveDestroyed();
	void SetOnFire();
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ExplosionTrace();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ExplodeAndDie();
	void PlayPreExplodeSound();
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void OnCurieActive_B5CFE25B4C5F361B8D704189B9B5BE17();
	void OnRep_bShouldDie();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void OnRep_On_Fire_Hit_Info();
	void Make_Local_Hit_Info(const struct FVector& Location, const struct FVector& Normal, struct FHitResult* Hit_Result);
	void Server_Mismatch_Correction(const struct FVector& Actor_Location, struct FVector* Adjusted_Value);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_HeldObject_Explosive_C">();
	}
	static class ABGA_HeldObject_Explosive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_HeldObject_Explosive_C>();
	}
};
static_assert(alignof(ABGA_HeldObject_Explosive_C) == 0x000010, "Wrong alignment on ABGA_HeldObject_Explosive_C");
static_assert(sizeof(ABGA_HeldObject_Explosive_C) == 0x000C60, "Wrong size on ABGA_HeldObject_Explosive_C");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, UberGraphFrame_BGA_HeldObject_Explosive_C) == 0x000988, "Member 'ABGA_HeldObject_Explosive_C::UberGraphFrame_BGA_HeldObject_Explosive_C' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, StaticMesh) == 0x000990, "Member 'ABGA_HeldObject_Explosive_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, LastDamageInstigator) == 0x000998, "Member 'ABGA_HeldObject_Explosive_C::LastDamageInstigator' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, HealthIsZero) == 0x0009A0, "Member 'ABGA_HeldObject_Explosive_C::HealthIsZero' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, FireCue) == 0x0009A4, "Member 'ABGA_HeldObject_Explosive_C::FireCue' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, bShouldDie) == 0x0009AC, "Member 'ABGA_HeldObject_Explosive_C::bShouldDie' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, PreExplodeSound) == 0x0009B0, "Member 'ABGA_HeldObject_Explosive_C::PreExplodeSound' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, ExplosionCUE) == 0x0009B8, "Member 'ABGA_HeldObject_Explosive_C::ExplosionCUE' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, On_Fire_Hit_Info) == 0x0009C0, "Member 'ABGA_HeldObject_Explosive_C::On_Fire_Hit_Info' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Last_Hit) == 0x000A4C, "Member 'ABGA_HeldObject_Explosive_C::Last_Hit' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Explosion_CUE_Water) == 0x000AD8, "Member 'ABGA_HeldObject_Explosive_C::Explosion_CUE_Water' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, KnockbackStrength) == 0x000AE0, "Member 'ABGA_HeldObject_Explosive_C::KnockbackStrength' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, CurrentPlayerToLaunch) == 0x000B00, "Member 'ABGA_HeldObject_Explosive_C::CurrentPlayerToLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, TC_Melee_Damage) == 0x000B08, "Member 'ABGA_HeldObject_Explosive_C::TC_Melee_Damage' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Min_Duration_TnTina_Fuse) == 0x000B28, "Member 'ABGA_HeldObject_Explosive_C::Min_Duration_TnTina_Fuse' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Max_Duration_TnTina_Fuse) == 0x000B48, "Member 'ABGA_HeldObject_Explosive_C::Max_Duration_TnTina_Fuse' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Min_Duration_Damage_Fuse_) == 0x000B68, "Member 'ABGA_HeldObject_Explosive_C::Min_Duration_Damage_Fuse_' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Max_Duration_Damage_Fuse) == 0x000B88, "Member 'ABGA_HeldObject_Explosive_C::Max_Duration_Damage_Fuse' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Fire_Plane_Spawn_Offset) == 0x000BA8, "Member 'ABGA_HeldObject_Explosive_C::Fire_Plane_Spawn_Offset' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Fire_Plane_Trace_Offset) == 0x000BAC, "Member 'ABGA_HeldObject_Explosive_C::Fire_Plane_Trace_Offset' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, Fireball_Spawn_Vectors) == 0x000BB8, "Member 'ABGA_HeldObject_Explosive_C::Fireball_Spawn_Vectors' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, SpawnedProjectileMaxSpeed) == 0x000BC8, "Member 'ABGA_HeldObject_Explosive_C::SpawnedProjectileMaxSpeed' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, SpawnedProjectileMinSpeed) == 0x000BE8, "Member 'ABGA_HeldObject_Explosive_C::SpawnedProjectileMinSpeed' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, ConeHalfAngleInDegrees) == 0x000C08, "Member 'ABGA_HeldObject_Explosive_C::ConeHalfAngleInDegrees' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, CurieActivated) == 0x000C28, "Member 'ABGA_HeldObject_Explosive_C::CurieActivated' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, FireBallsToSPawn) == 0x000C30, "Member 'ABGA_HeldObject_Explosive_C::FireBallsToSPawn' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Explosive_C, FireBallSpawnVector1) == 0x000C50, "Member 'ABGA_HeldObject_Explosive_C::FireBallSpawnVector1' has a wrong offset!");

}

