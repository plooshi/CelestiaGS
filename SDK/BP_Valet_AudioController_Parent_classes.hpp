#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Valet_AudioController_Parent

#include "Basic.hpp"

#include "ValetRuntime_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Valet_AudioController_Parent.BP_Valet_AudioController_Parent_C
// 0x0230 (0x0570 - 0x0340)
class ABP_Valet_AudioController_Parent_C : public AFortValetAudioController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USynthComponentMoto*                    SynthComponentMoto;                                // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           CollisionAudio_HitObject;                          // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Horn;                                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Engine_OnOff;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLayeredAudioComponent*             Engine;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           CollisionAudio_Suspension;                         // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           CollisionAudio_Body;                               // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Moto_FadeOut_Volume_A91224EC482A9C0F90B4E198803A420B; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Moto_FadeOut__Direction_A91224EC482A9C0F90B4E198803A420B; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D12[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Moto_FadeOut;                                      // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shift_Up_Alpha_93F8CCBD410A7922FEA656ACD9B2EFFB;   // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Shift_Up__Direction_93F8CCBD410A7922FEA656ACD9B2EFFB; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D13[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Shift_Up;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shift_Down_Scale_10F752D045A0782F356C75929B4904D9; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Shift_Down__Direction_10F752D045A0782F356C75929B4904D9; // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D14[0x3];                                     // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Shift_Down;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPhysicalSurface, int32>                 SurfaceToSwitchMap;                                // 0x03B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USoundWave>              EngineIdleLoopWave;                                // 0x0400(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   EngineIdleWaveParam;                               // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              EngineStartWave;                                   // 0x0430(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   EngineStartWaveParam;                              // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              EngineOffWave;                                     // 0x0460(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   EngineOffWaveParam;                                // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundWave>              HornWave;                                          // 0x0490(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   HornWaveParam;                                     // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ShiftSoundCue;                                     // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RPMWobbleRange;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ShiftUpCurve;                                      // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShiftUpCurveRange;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShiftUpPositiveVarianceMultiplier;                 // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShiftUpNegativeVarianceMultiplier;                 // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShiftCurveDurationRange;                           // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WaterEnterSoundCue;                                // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WaterExitSoundCue;                                 // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotoSynthPreset*                       MotoSynthPreset;                                   // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAssetsLoaded;                                     // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D15[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             TirePoppedSoundCue;                                // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WindowBreakSoundCue;                               // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DamagedCue;                                        // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PreDestroySoundCue;                                // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DestroySoundCue;                                   // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDestroyed;                                        // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D16[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        DamageAudioComponent;                              // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BoostSoundCue;                                     // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BoostEndSoundCue;                                  // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TiresPopped;                                       // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageStateSmoke;                                  // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMotoSynthStopped;                                 // 0x0569(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D17[0x2];                                     // 0x056A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceAwoken;                                   // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Valet_AudioController_Parent(int32 EntryPoint);
	void On_Vehicle_Surface_Changed(EPhysicalSurface SurfaceTypeVehicleIsOn);
	void OnSleepStateChange(bool Awake);
	void OnHitBuilding(const struct FVector& Impact_Point);
	void OnHitPlayer(const struct FVector& ImpactPoint);
	void OnBoostEnd();
	void OnBoostStart();
	void OnDestroy();
	void OnDamage(float Damage_Value);
	void OnWindowBreak(class FName Bone_Name);
	void OnTirePop(class FName Bone_Name);
	void OnWaterStateChanged(bool Is_Entering_Water);
	void OnShiftCompleted_Event();
	void OnShiftGear_Event(bool UpShift);
	void OnHorn();
	void Cancel_Tick_Stop_Rampdown();
	void OnStopTick();
	void OnDriverStateChanged(bool Enter);
	void OnTick();
	void OnHandbrake(bool Start);
	void BndEvt__Engine_K2Node_ComponentBoundEvent_1_OnLayeredAudioComponentOneshot__DelegateSignature(class UAudioComponent* AudioComponent, class FName ParameterName, int32 OneshotIndex);
	void OnCacheReferences(class AFortDagwoodVehicle* Vehicle);
	void OnLoaded_034A6FEB4ACEA4EE540B238ECEA18750(class UObject* Loaded);
	void OnLoaded_034A6FEB4ACEA4EE540B238E616A5320(class UObject* Loaded);
	void OnLoaded_034A6FEB4ACEA4EE540B238E6A241E24(class UObject* Loaded);
	void OnLoaded_034A6FEB4ACEA4EE540B238E9E335119(class UObject* Loaded);
	void Moto_FadeOut__UpdateFunc();
	void Moto_FadeOut__FinishedFunc();
	void Shift_Up__UpdateFunc();
	void Shift_Up__FinishedFunc();
	void Shift_Down__UpdateFunc();
	void Shift_Down__FinishedFunc();
	void UserConstructionScript();
	void GetVehicleSurfaceType(int32* Surface_ID);
	struct FVector2D CalculateRPMWobbleRange();
	void LocalPlayerInVehicleBP(bool* Result);
	void OnBodyCollision(const struct FVector& HitLocation, const struct FVector& NormalImpulse, bool* FilteredHit, float* Magnitude);
	void OnSuspensionCollision(bool* FilteredHit, float* Magnitude);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Valet_AudioController_Parent_C">();
	}
	static class ABP_Valet_AudioController_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Valet_AudioController_Parent_C>();
	}
};
static_assert(alignof(ABP_Valet_AudioController_Parent_C) == 0x000008, "Wrong alignment on ABP_Valet_AudioController_Parent_C");
static_assert(sizeof(ABP_Valet_AudioController_Parent_C) == 0x000570, "Wrong size on ABP_Valet_AudioController_Parent_C");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, UberGraphFrame) == 0x000340, "Member 'ABP_Valet_AudioController_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, SynthComponentMoto) == 0x000348, "Member 'ABP_Valet_AudioController_Parent_C::SynthComponentMoto' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, CollisionAudio_HitObject) == 0x000350, "Member 'ABP_Valet_AudioController_Parent_C::CollisionAudio_HitObject' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Horn) == 0x000358, "Member 'ABP_Valet_AudioController_Parent_C::Horn' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Engine_OnOff) == 0x000360, "Member 'ABP_Valet_AudioController_Parent_C::Engine_OnOff' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Engine) == 0x000368, "Member 'ABP_Valet_AudioController_Parent_C::Engine' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, CollisionAudio_Suspension) == 0x000370, "Member 'ABP_Valet_AudioController_Parent_C::CollisionAudio_Suspension' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, CollisionAudio_Body) == 0x000378, "Member 'ABP_Valet_AudioController_Parent_C::CollisionAudio_Body' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Moto_FadeOut_Volume_A91224EC482A9C0F90B4E198803A420B) == 0x000380, "Member 'ABP_Valet_AudioController_Parent_C::Moto_FadeOut_Volume_A91224EC482A9C0F90B4E198803A420B' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Moto_FadeOut__Direction_A91224EC482A9C0F90B4E198803A420B) == 0x000384, "Member 'ABP_Valet_AudioController_Parent_C::Moto_FadeOut__Direction_A91224EC482A9C0F90B4E198803A420B' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Moto_FadeOut) == 0x000388, "Member 'ABP_Valet_AudioController_Parent_C::Moto_FadeOut' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Up_Alpha_93F8CCBD410A7922FEA656ACD9B2EFFB) == 0x000390, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Up_Alpha_93F8CCBD410A7922FEA656ACD9B2EFFB' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Up__Direction_93F8CCBD410A7922FEA656ACD9B2EFFB) == 0x000394, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Up__Direction_93F8CCBD410A7922FEA656ACD9B2EFFB' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Up) == 0x000398, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Up' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Down_Scale_10F752D045A0782F356C75929B4904D9) == 0x0003A0, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Down_Scale_10F752D045A0782F356C75929B4904D9' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Down__Direction_10F752D045A0782F356C75929B4904D9) == 0x0003A4, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Down__Direction_10F752D045A0782F356C75929B4904D9' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, Shift_Down) == 0x0003A8, "Member 'ABP_Valet_AudioController_Parent_C::Shift_Down' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, SurfaceToSwitchMap) == 0x0003B0, "Member 'ABP_Valet_AudioController_Parent_C::SurfaceToSwitchMap' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineIdleLoopWave) == 0x000400, "Member 'ABP_Valet_AudioController_Parent_C::EngineIdleLoopWave' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineIdleWaveParam) == 0x000428, "Member 'ABP_Valet_AudioController_Parent_C::EngineIdleWaveParam' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineStartWave) == 0x000430, "Member 'ABP_Valet_AudioController_Parent_C::EngineStartWave' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineStartWaveParam) == 0x000458, "Member 'ABP_Valet_AudioController_Parent_C::EngineStartWaveParam' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineOffWave) == 0x000460, "Member 'ABP_Valet_AudioController_Parent_C::EngineOffWave' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, EngineOffWaveParam) == 0x000488, "Member 'ABP_Valet_AudioController_Parent_C::EngineOffWaveParam' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, HornWave) == 0x000490, "Member 'ABP_Valet_AudioController_Parent_C::HornWave' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, HornWaveParam) == 0x0004B8, "Member 'ABP_Valet_AudioController_Parent_C::HornWaveParam' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftSoundCue) == 0x0004C0, "Member 'ABP_Valet_AudioController_Parent_C::ShiftSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, RPMWobbleRange) == 0x0004C8, "Member 'ABP_Valet_AudioController_Parent_C::RPMWobbleRange' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftUpCurve) == 0x0004D0, "Member 'ABP_Valet_AudioController_Parent_C::ShiftUpCurve' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftUpCurveRange) == 0x0004D8, "Member 'ABP_Valet_AudioController_Parent_C::ShiftUpCurveRange' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftUpPositiveVarianceMultiplier) == 0x0004E0, "Member 'ABP_Valet_AudioController_Parent_C::ShiftUpPositiveVarianceMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftUpNegativeVarianceMultiplier) == 0x0004E8, "Member 'ABP_Valet_AudioController_Parent_C::ShiftUpNegativeVarianceMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, ShiftCurveDurationRange) == 0x0004F0, "Member 'ABP_Valet_AudioController_Parent_C::ShiftCurveDurationRange' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, WaterEnterSoundCue) == 0x0004F8, "Member 'ABP_Valet_AudioController_Parent_C::WaterEnterSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, WaterExitSoundCue) == 0x000500, "Member 'ABP_Valet_AudioController_Parent_C::WaterExitSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, MotoSynthPreset) == 0x000508, "Member 'ABP_Valet_AudioController_Parent_C::MotoSynthPreset' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, bAssetsLoaded) == 0x000510, "Member 'ABP_Valet_AudioController_Parent_C::bAssetsLoaded' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, TirePoppedSoundCue) == 0x000518, "Member 'ABP_Valet_AudioController_Parent_C::TirePoppedSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, WindowBreakSoundCue) == 0x000520, "Member 'ABP_Valet_AudioController_Parent_C::WindowBreakSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, DamagedCue) == 0x000528, "Member 'ABP_Valet_AudioController_Parent_C::DamagedCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, PreDestroySoundCue) == 0x000530, "Member 'ABP_Valet_AudioController_Parent_C::PreDestroySoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, DestroySoundCue) == 0x000538, "Member 'ABP_Valet_AudioController_Parent_C::DestroySoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, bDestroyed) == 0x000540, "Member 'ABP_Valet_AudioController_Parent_C::bDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, DamageAudioComponent) == 0x000548, "Member 'ABP_Valet_AudioController_Parent_C::DamageAudioComponent' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, BoostSoundCue) == 0x000550, "Member 'ABP_Valet_AudioController_Parent_C::BoostSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, BoostEndSoundCue) == 0x000558, "Member 'ABP_Valet_AudioController_Parent_C::BoostEndSoundCue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, TiresPopped) == 0x000560, "Member 'ABP_Valet_AudioController_Parent_C::TiresPopped' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, DamageValue) == 0x000564, "Member 'ABP_Valet_AudioController_Parent_C::DamageValue' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, DamageStateSmoke) == 0x000568, "Member 'ABP_Valet_AudioController_Parent_C::DamageStateSmoke' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, bMotoSynthStopped) == 0x000569, "Member 'ABP_Valet_AudioController_Parent_C::bMotoSynthStopped' has a wrong offset!");
static_assert(offsetof(ABP_Valet_AudioController_Parent_C, TimeSinceAwoken) == 0x00056C, "Member 'ABP_Valet_AudioController_Parent_C::TimeSinceAwoken' has a wrong offset!");

}

