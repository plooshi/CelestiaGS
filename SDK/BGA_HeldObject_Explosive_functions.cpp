#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_HeldObject_Explosive

#include "Basic.hpp"

#include "BGA_HeldObject_Explosive_classes.hpp"
#include "BGA_HeldObject_Explosive_parameters.hpp"


namespace SDK
{

// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ExecuteUbergraph_BGA_HeldObject_Explosive
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_HeldObject_Explosive_C::ExecuteUbergraph_BGA_HeldObject_Explosive(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ExecuteUbergraph_BGA_HeldObject_Explosive");

	Params::BGA_HeldObject_Explosive_C_ExecuteUbergraph_BGA_HeldObject_Explosive Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnCurieElementInteractBegun_BP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FCurieContainerHandle            CurieContainerHandle                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ElementTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FCurieInteractParamsHandle       InteractParamsHandle                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABGA_HeldObject_Explosive_C::OnCurieElementInteractBegun_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnCurieElementInteractBegun_BP");

	Params::BGA_HeldObject_Explosive_C_OnCurieElementInteractBegun_BP Parms{};

	Parms.CurieContainerHandle = move(CurieContainerHandle);
	Parms.ElementTag = move(ElementTag);
	Parms.InteractParamsHandle = move(InteractParamsHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnCurieElementInteract_BP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FCurieContainerHandle            CurieContainerHandle                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ElementTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FCurieInteractParamsHandle       InteractParamsHandle                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABGA_HeldObject_Explosive_C::OnCurieElementInteract_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnCurieElementInteract_BP");

	Params::BGA_HeldObject_Explosive_C_OnCurieElementInteract_BP Parms{};

	Parms.CurieContainerHandle = move(CurieContainerHandle);
	Parms.ElementTag = move(ElementTag);
	Parms.InteractParamsHandle = move(InteractParamsHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.Set Damage Instigator on Throw
// (BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::Set_Damage_Instigator_on_Throw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "Set Damage Instigator on Throw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_0_OnHeldObjectThrown__DelegateSignature
// (BlueprintEvent)

void ABGA_HeldObject_Explosive_C::BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_0_OnHeldObjectThrown__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_0_OnHeldObjectThrown__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.Explode and Die with Delay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            Param_LastDamageInstigator                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_HeldObject_Explosive_C::Explode_and_Die_with_Delay(class AFortPlayerController* Param_LastDamageInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "Explode and Die with Delay");

	Params::BGA_HeldObject_Explosive_C_Explode_and_Die_with_Delay Parms{};

	Parms.Param_LastDamageInstigator = Param_LastDamageInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectThrownLanded__DelegateSignature
// (BlueprintEvent)

void ABGA_HeldObject_Explosive_C::BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectThrownLanded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectThrownLanded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_3_OnHeldObjectPlaced__DelegateSignature
// (BlueprintEvent)

void ABGA_HeldObject_Explosive_C::BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_3_OnHeldObjectPlaced__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_3_OnHeldObjectPlaced__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectDropped__DelegateSignature
// (BlueprintEvent)

void ABGA_HeldObject_Explosive_C::BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectDropped__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectDropped__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_1_OnHeldObjectPickedUp__DelegateSignature
// (BlueprintEvent)

void ABGA_HeldObject_Explosive_C::BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_1_OnHeldObjectPickedUp__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_1_OnHeldObjectPickedUp__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.SetOnFire
// (BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::SetOnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "SetOnFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABGA_HeldObject_Explosive_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnDeathPlayEffects");

	Params::BGA_HeldObject_Explosive_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ExplosionTrace
// (BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::ExplosionTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ExplosionTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABGA_HeldObject_Explosive_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnDeathServer");

	Params::BGA_HeldObject_Explosive_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ExplodeAndDie
// (BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::ExplodeAndDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ExplodeAndDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.PlayPreExplodeSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::PlayPreExplodeSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "PlayPreExplodeSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABGA_HeldObject_Explosive_C::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnDamageServer");

	Params::BGA_HeldObject_Explosive_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = move(DamageTags);
	Parms.Momentum = move(Momentum);
	Parms.HitInfo = move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnCurieActive_B5CFE25B4C5F361B8D704189B9B5BE17
// (BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::OnCurieActive_B5CFE25B4C5F361B8D704189B9B5BE17()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnCurieActive_B5CFE25B4C5F361B8D704189B9B5BE17");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnRep_bShouldDie
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::OnRep_bShouldDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnRep_bShouldDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.ShouldDie
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABGA_HeldObject_Explosive_C::ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "ShouldDie");

	Params::BGA_HeldObject_Explosive_C_ShouldDie Parms{};

	Parms.Damage = Damage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.OnRep_On Fire Hit Info
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABGA_HeldObject_Explosive_C::OnRep_On_Fire_Hit_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "OnRep_On Fire Hit Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.Make Local Hit Info
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_Result                                             (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABGA_HeldObject_Explosive_C::Make_Local_Hit_Info(const struct FVector& Location, const struct FVector& Normal, struct FHitResult* Hit_Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "Make Local Hit Info");

	Params::BGA_HeldObject_Explosive_C_Make_Local_Hit_Info Parms{};

	Parms.Location = move(Location);
	Parms.Normal = move(Normal);

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_Result != nullptr)
		*Hit_Result = move(Parms.Hit_Result);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.Server Mismatch Correction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Actor_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Adjusted_Value                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABGA_HeldObject_Explosive_C::Server_Mismatch_Correction(const struct FVector& Actor_Location, struct FVector* Adjusted_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "Server Mismatch Correction");

	Params::BGA_HeldObject_Explosive_C_Server_Mismatch_Correction Parms{};

	Parms.Actor_Location = move(Actor_Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Adjusted_Value != nullptr)
		*Adjusted_Value = move(Parms.Adjusted_Value);
}


// Function BGA_HeldObject_Explosive.BGA_HeldObject_Explosive_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETInteractionType                       InteractionType                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABGA_HeldObject_Explosive_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGA_HeldObject_Explosive_C", "BlueprintCanInteract");

	Params::BGA_HeldObject_Explosive_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

