#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthTrackComponent_DataTracker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "BP_TimeSynthTrackComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TimeSynthTrackComponent_DataTracker.BP_TimeSynthTrackComponent_DataTracker_C
// 0x0070 (0x0210 - 0x01A0)
#pragma pack(push, 0x1)
class alignas(0x08) UBP_TimeSynthTrackComponent_DataTracker_C : public UBP_TimeSynthTrackComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TimeSynthTrackComponent_DataTracker_C; // 0x01A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortGameplayDataTrackerComponent*      DataTrackerComponent;                              // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DataTrackerAssigned;                               // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CF4[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DataTrackerComponentClass;                         // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponentManager* DataTrackerComponentManager;                       // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AwaitingCooldownBeforeShutoff;                     // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CF5[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundMix*                              SoundMix;                                          // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         EnabledDataRow;                                    // 0x01D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FScalableFloat>                 TrackMixStateVolumeDataRows;                       // 0x01F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          MixPushed;                                         // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TimeSynthTrackComponent_DataTracker(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnReady_FFC0E068479278E143D010AF8EB81D0D(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnDataTrackerStart();
	void OnDataTrackerUpdate();
	void OnDataTrackerEnd();
	void GetDataTrackerComponent(class UFortGameplayDataTrackerComponent** Param_DataTrackerComponent);
	void AssignDataTrackerComponent(class UFortGameplayDataTrackerComponent* Param_DataTrackerComponent);
	void GetDataTrackerComponentManager();
	void OnDataTrackerComponentRegistered(class UFortGameplayDataTrackerComponent* Data_Tracker_Component);
	void OnDataTrackerComponentUnRegistered(class UFortGameplayDataTrackerComponent* Data_Tracker_Component);
	void OnAnyEventValueChanged(class UFortGameplayDataTrackerComponent* Data_Tracker_Component, bool Has_Event_Values);
	void GetRemainingEventCooldown(float* Cooldown);
	void GetIsEnabled(bool* Param_Enabled);
	void QueueTrackStop(bool Play_Outro);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TimeSynthTrackComponent_DataTracker_C">();
	}
	static class UBP_TimeSynthTrackComponent_DataTracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TimeSynthTrackComponent_DataTracker_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_TimeSynthTrackComponent_DataTracker_C) == 0x000008, "Wrong alignment on UBP_TimeSynthTrackComponent_DataTracker_C");
static_assert(sizeof(UBP_TimeSynthTrackComponent_DataTracker_C) == 0x000210, "Wrong size on UBP_TimeSynthTrackComponent_DataTracker_C");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, UberGraphFrame_BP_TimeSynthTrackComponent_DataTracker_C) == 0x0001A0, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::UberGraphFrame_BP_TimeSynthTrackComponent_DataTracker_C' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, DataTrackerComponent) == 0x0001A8, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::DataTrackerComponent' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, DataTrackerAssigned) == 0x0001B0, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::DataTrackerAssigned' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, DataTrackerComponentClass) == 0x0001B8, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::DataTrackerComponentClass' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, DataTrackerComponentManager) == 0x0001C0, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::DataTrackerComponentManager' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, AwaitingCooldownBeforeShutoff) == 0x0001C8, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::AwaitingCooldownBeforeShutoff' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, SoundMix) == 0x0001D0, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::SoundMix' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, EnabledDataRow) == 0x0001D8, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::EnabledDataRow' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, TrackMixStateVolumeDataRows) == 0x0001F8, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::TrackMixStateVolumeDataRows' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_DataTracker_C, MixPushed) == 0x000208, "Member 'UBP_TimeSynthTrackComponent_DataTracker_C::MixPushed' has a wrong offset!");

}

