#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VBucksStoreScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VBucksStoreScreen.VBucksStoreScreen_C.ApplyMobileLayout
// 0x0008 (0x0008 - 0x0000)
struct VBucksStoreScreen_C_ApplyMobileLayout final
{
public:
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_ApplyMobileLayout) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_ApplyMobileLayout");
static_assert(sizeof(VBucksStoreScreen_C_ApplyMobileLayout) == 0x000008, "Wrong size on VBucksStoreScreen_C_ApplyMobileLayout");
static_assert(offsetof(VBucksStoreScreen_C_ApplyMobileLayout, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000000, "Member 'VBucksStoreScreen_C_ApplyMobileLayout::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.GetVisibilityByChildrenPresence
// 0x0010 (0x0010 - 0x0000)
struct VBucksStoreScreen_C_GetVisibilityByChildrenPresence final
{
public:
	class UPanelWidget*                           Panel;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              NewParam;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_GetVisibilityByChildrenPresence");
static_assert(sizeof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence) == 0x000010, "Wrong size on VBucksStoreScreen_C_GetVisibilityByChildrenPresence");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, Panel) == 0x000000, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::Panel' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, NewParam) == 0x000008, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::NewParam' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, Temp_bool_Variable) == 0x000009, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, CallFunc_HasAnyChildren_ReturnValue) == 0x00000A, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, Temp_byte_Variable) == 0x00000B, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, Temp_byte_Variable_1) == 0x00000C, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_GetVisibilityByChildrenPresence, K2Node_Select_Default) == 0x00000D, "Member 'VBucksStoreScreen_C_GetVisibilityByChildrenPresence::K2Node_Select_Default' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.PlayEquippedLockerMusic
// 0x0028 (0x0028 - 0x0000)
struct VBucksStoreScreen_C_PlayEquippedLockerMusic final
{
public:
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7553[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFort_Entry_Music_Controller_BP_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7554[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFort_Entry_Music_Controller_BP_C*      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_PlayEquippedLockerMusic) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_PlayEquippedLockerMusic");
static_assert(sizeof(VBucksStoreScreen_C_PlayEquippedLockerMusic) == 0x000028, "Wrong size on VBucksStoreScreen_C_PlayEquippedLockerMusic");
static_assert(offsetof(VBucksStoreScreen_C_PlayEquippedLockerMusic, CallFunc_GetSubGame_ReturnValue) == 0x000000, "Member 'VBucksStoreScreen_C_PlayEquippedLockerMusic::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_PlayEquippedLockerMusic, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'VBucksStoreScreen_C_PlayEquippedLockerMusic::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_PlayEquippedLockerMusic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'VBucksStoreScreen_C_PlayEquippedLockerMusic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_PlayEquippedLockerMusic, CallFunc_Array_Get_Item) == 0x000020, "Member 'VBucksStoreScreen_C_PlayEquippedLockerMusic::CallFunc_Array_Get_Item' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.HandleBack
// 0x0001 (0x0001 - 0x0000)
struct VBucksStoreScreen_C_HandleBack final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VBucksStoreScreen_C_HandleBack) == 0x000001, "Wrong alignment on VBucksStoreScreen_C_HandleBack");
static_assert(sizeof(VBucksStoreScreen_C_HandleBack) == 0x000001, "Wrong size on VBucksStoreScreen_C_HandleBack");
static_assert(offsetof(VBucksStoreScreen_C_HandleBack, PassThrough) == 0x000000, "Member 'VBucksStoreScreen_C_HandleBack::PassThrough' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.HandleRedeem
// 0x0018 (0x0018 - 0x0000)
struct VBucksStoreScreen_C_HandleRedeem final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7555[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URedeemFriendCodeWindow_C*              CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_HandleRedeem) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_HandleRedeem");
static_assert(sizeof(VBucksStoreScreen_C_HandleRedeem) == 0x000018, "Wrong size on VBucksStoreScreen_C_HandleRedeem");
static_assert(offsetof(VBucksStoreScreen_C_HandleRedeem, bPassThrough) == 0x000000, "Member 'VBucksStoreScreen_C_HandleRedeem::bPassThrough' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_HandleRedeem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'VBucksStoreScreen_C_HandleRedeem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_HandleRedeem, CallFunc_Create_ReturnValue) == 0x000010, "Member 'VBucksStoreScreen_C_HandleRedeem::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.UpdateCurrencyNotification
// 0x0090 (0x0090 - 0x0000)
struct VBucksStoreScreen_C_UpdateCurrencyNotification final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7556[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMtxBreakdown                          CallFunc_GetMtxBreakdown_ReturnValue;              // 0x0004(0x0010)(NoDestructor)
	uint8                                         Pad_7557[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7558[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_UpdateCurrencyNotification) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_UpdateCurrencyNotification");
static_assert(sizeof(VBucksStoreScreen_C_UpdateCurrencyNotification) == 0x000090, "Wrong size on VBucksStoreScreen_C_UpdateCurrencyNotification");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, Temp_byte_Variable) == 0x000000, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, Temp_byte_Variable_1) == 0x000001, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, Temp_bool_Variable) == 0x000002, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, CallFunc_GetMtxBreakdown_ReturnValue) == 0x000004, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::CallFunc_GetMtxBreakdown_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, K2Node_MakeArray_Array) == 0x000060, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, CallFunc_Format_ReturnValue) == 0x000070, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_UpdateCurrencyNotification, K2Node_Select_Default) == 0x000088, "Member 'VBucksStoreScreen_C_UpdateCurrencyNotification::K2Node_Select_Default' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.OnUpdateOtherPlatformMTXMessage
// 0x0020 (0x0020 - 0x0000)
struct VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage final
{
public:
	bool                                          HasOtherPlatformCurrency;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7559[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrencyMessageLocText;                            // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage");
static_assert(sizeof(VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage) == 0x000020, "Wrong size on VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage");
static_assert(offsetof(VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage, HasOtherPlatformCurrency) == 0x000000, "Member 'VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage::HasOtherPlatformCurrency' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage, CurrencyMessageLocText) == 0x000008, "Member 'VBucksStoreScreen_C_OnUpdateOtherPlatformMTXMessage::CurrencyMessageLocText' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VBucksStoreScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VBucksStoreScreen_C_PreConstruct) == 0x000001, "Wrong alignment on VBucksStoreScreen_C_PreConstruct");
static_assert(sizeof(VBucksStoreScreen_C_PreConstruct) == 0x000001, "Wrong size on VBucksStoreScreen_C_PreConstruct");
static_assert(offsetof(VBucksStoreScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'VBucksStoreScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.ExecuteUbergraph_VBucksStoreScreen
// 0x0068 (0x0068 - 0x0000)
struct VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_755A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStoreContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_HasOtherPlatformCurrency;             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_CurrencyMessageLocText;               // 0x0018(0x0018)(ConstParm)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStore_BannerMessage_C*                 K2Node_DynamicCast_AsStore_Banner_Message;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_755E[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStoreContext*                      CallFunc_GetContext_ReturnValue_2;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen");
static_assert(sizeof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen) == 0x000068, "Wrong size on VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, EntryPoint) == 0x000000, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, Temp_byte_Variable) == 0x000010, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, Temp_byte_Variable_1) == 0x000011, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, Temp_bool_Variable) == 0x000012, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_Event_HasOtherPlatformCurrency) == 0x000013, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_Event_HasOtherPlatformCurrency' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_Event_CurrencyMessageLocText) == 0x000018, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_Event_CurrencyMessageLocText' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, CallFunc_GetContext_ReturnValue_1) == 0x000030, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, CallFunc_IsActivated_ReturnValue) == 0x000038, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_DynamicCast_AsStore_Banner_Message) == 0x000040, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_DynamicCast_AsStore_Banner_Message' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000050, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_Event_IsDesignTime) == 0x000058, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, K2Node_Select_Default) == 0x000059, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen, CallFunc_GetContext_ReturnValue_2) == 0x000060, "Member 'VBucksStoreScreen_C_ExecuteUbergraph_VBucksStoreScreen::CallFunc_GetContext_ReturnValue_2' has a wrong offset!");

// Function VBucksStoreScreen.VBucksStoreScreen_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct VBucksStoreScreen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VBucksStoreScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on VBucksStoreScreen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(VBucksStoreScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on VBucksStoreScreen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(VBucksStoreScreen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'VBucksStoreScreen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

