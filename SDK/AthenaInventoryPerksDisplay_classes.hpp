#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryPerksDisplay

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaInventoryPerksDisplay.AthenaInventoryPerksDisplay_C
// 0x0030 (0x0288 - 0x0258)
class UAthenaInventoryPerksDisplay_C final : public UCommonUserWidget
{
public:
	class UWidgetAnimation*                       Show;                                              // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectedPerksWidget_C*                 SelectedPerksWidget;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ItemName;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EventShowPerkDetails;                              // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EventShowPerkDetails__DelegateSignature(bool Param_Show);
	void GetItems(TArray<class UFortSpyTechItemDefinition*>* SpyTechItemDefs);
	void UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaInventoryPerksDisplay_C">();
	}
	static class UAthenaInventoryPerksDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaInventoryPerksDisplay_C>();
	}
};
static_assert(alignof(UAthenaInventoryPerksDisplay_C) == 0x000008, "Wrong alignment on UAthenaInventoryPerksDisplay_C");
static_assert(sizeof(UAthenaInventoryPerksDisplay_C) == 0x000288, "Wrong size on UAthenaInventoryPerksDisplay_C");
static_assert(offsetof(UAthenaInventoryPerksDisplay_C, Show) == 0x000258, "Member 'UAthenaInventoryPerksDisplay_C::Show' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPerksDisplay_C, Image_3) == 0x000260, "Member 'UAthenaInventoryPerksDisplay_C::Image_3' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPerksDisplay_C, SelectedPerksWidget) == 0x000268, "Member 'UAthenaInventoryPerksDisplay_C::SelectedPerksWidget' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPerksDisplay_C, Text_ItemName) == 0x000270, "Member 'UAthenaInventoryPerksDisplay_C::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryPerksDisplay_C, EventShowPerkDetails) == 0x000278, "Member 'UAthenaInventoryPerksDisplay_C::EventShowPerkDetails' has a wrong offset!");

}

