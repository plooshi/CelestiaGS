#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Athena_DanceStun

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_Athena_DanceStun.GCN_Athena_DanceStun_C.ExecuteUbergraph_GCN_Athena_DanceStun
// 0x0010 (0x0010 - 0x0000)
struct GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DA[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun) == 0x000004, "Wrong alignment on GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun");
static_assert(sizeof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun) == 0x000010, "Wrong size on GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun");
static_assert(offsetof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun, EntryPoint) == 0x000000, "Member 'GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000009, "Member 'GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'GCN_Athena_DanceStun_C_ExecuteUbergraph_GCN_Athena_DanceStun::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function GCN_Athena_DanceStun.GCN_Athena_DanceStun_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCN_Athena_DanceStun_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Athena_DanceStun_C_ReceiveTick) == 0x000004, "Wrong alignment on GCN_Athena_DanceStun_C_ReceiveTick");
static_assert(sizeof(GCN_Athena_DanceStun_C_ReceiveTick) == 0x000004, "Wrong size on GCN_Athena_DanceStun_C_ReceiveTick");
static_assert(offsetof(GCN_Athena_DanceStun_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCN_Athena_DanceStun_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GCN_Athena_DanceStun.GCN_Athena_DanceStun_C.OnActive
// 0x00E8 (0x00E8 - 0x0000)
struct GCN_Athena_DanceStun_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DB[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DC[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DD[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Athena_DanceStun_C_OnActive) == 0x000008, "Wrong alignment on GCN_Athena_DanceStun_C_OnActive");
static_assert(sizeof(GCN_Athena_DanceStun_C_OnActive) == 0x0000E8, "Wrong size on GCN_Athena_DanceStun_C_OnActive");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, MyTarget) == 0x000000, "Member 'GCN_Athena_DanceStun_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, Parameters) == 0x000008, "Member 'GCN_Athena_DanceStun_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, ReturnValue) == 0x0000C0, "Member 'GCN_Athena_DanceStun_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, K2Node_DynamicCast_AsFort_AIPawn) == 0x0000C8, "Member 'GCN_Athena_DanceStun_C_OnActive::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GCN_Athena_DanceStun_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000D8, "Member 'GCN_Athena_DanceStun_C_OnActive::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'GCN_Athena_DanceStun_C_OnActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnActive, CallFunc_GetValueAtLevel_ReturnValue) == 0x0000E4, "Member 'GCN_Athena_DanceStun_C_OnActive::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");

// Function GCN_Athena_DanceStun.GCN_Athena_DanceStun_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GCN_Athena_DanceStun_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DE[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72DF[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCN_Athena_DanceStun_C_OnRemove) == 0x000008, "Wrong alignment on GCN_Athena_DanceStun_C_OnRemove");
static_assert(sizeof(GCN_Athena_DanceStun_C_OnRemove) == 0x0000E8, "Wrong size on GCN_Athena_DanceStun_C_OnRemove");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, MyTarget) == 0x000000, "Member 'GCN_Athena_DanceStun_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, Parameters) == 0x000008, "Member 'GCN_Athena_DanceStun_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCN_Athena_DanceStun_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, K2Node_DynamicCast_AsFort_AIPawn) == 0x0000C8, "Member 'GCN_Athena_DanceStun_C_OnRemove::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GCN_Athena_DanceStun_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0000D8, "Member 'GCN_Athena_DanceStun_C_OnRemove::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCN_Athena_DanceStun_C_OnRemove, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'GCN_Athena_DanceStun_C_OnRemove::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

